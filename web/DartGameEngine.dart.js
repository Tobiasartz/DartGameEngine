// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.JSSyntaxRegExp = {"": ["_lib0_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = $.regExpMatchStart(m);
  t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern?", "str", "start", "end", "_groups"],
 "super": "Object",
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_lib0_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var next = this._lib0_next;
  this._lib0_next = null;
  return next;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._lib0_next == null))
    return true;
  this._lib0_next = this._re.firstMatch$1(this._str);
  if (this._lib0_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.ArgumentError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.RangeError = {"": ["message"],
 "super": "ArgumentError",
 toString$0: function() {
  return 'RangeError: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NoSuchMethodError = {"": ["_receiver", "_memberName", "_arguments", "_namedArguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3, t4, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0))
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    t4 = t1.i_2;
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    $.add$1(t3, $.NoSuchMethodError_safeToString(t2[t4]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  actualParameters = $.toString(t1.sb_1);
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  for (i = 0; i < t2.length; ++i) {
    if (i > 0)
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    if (i >= t2.length)
      throw $.ioore(i);
    $.add$1(t3, t2[i]);
  }
  formalParameters = $.toString(t1.sb_1);
  t2 = this._memberName;
  return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer('');
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0))
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return 'NoSuchMethodError : method not found: \'' + $.S(this._memberName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(t1.sb_1) + ']';
      else {
        actualParameters = $.toString(t1.sb_1);
        t1.sb_1 = $.StringBuffer_StringBuffer('');
        for (i = 0; $.ltB(i, $.get$length(t2)); ++i) {
          if (i > 0)
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.index(t2, i));
        }
        formalParameters = $.toString(t1.sb_1);
        t2 = this._memberName;
        return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
      }
  }
}
};

$$.UnsupportedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'Unsupported operation: ' + $.S(this.get$message());
}
};

$$.UnimplementedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? 'UnimplementedError: ' + $.S(t1) : 'UnimplementedError';
},
 is$Exception: true
};

$$.StateError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'Bad state: ' + this.message;
}
};

$$.StackOverflowError = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$._ExceptionImplementation = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.FormatException = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NullPointerException = {"": ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.RuntimeError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
},
 is$Exception: true
};

$$.ExpectException = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return this.message;
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.FutureUnhandledException = {"": ["source", "stackTrace?"],
 "super": "Object",
 toString$0: function() {
  return 'FutureUnhandledException: exception while executing Future\n  ' + $.S($.replaceAll($.toString(this.source), '\n', '\n  ')) + '\n' + 'original stack trace:\n  ' + $.S($.replaceAll($.toString(this.stackTrace), '\n', '\n  '));
},
 is$Exception: true
};

$$._FutureImpl = {"": ["_isComplete", "_value", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 handleException$1: function(onException) {
  var t1;
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.iterator(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$._CompleterImpl = {"": ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$._HashMapImpl = {"": ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  t1 = $.get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC1 === existingKey)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  hash = $.and(t1, this._keys.length - 1);
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC1 === existingKey)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  hash = $.and($.get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t1, t2, i, key, value, newIndex, t3;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $._ListImpl_List(newCapacity);
  this._values = $._ListImpl_List(newCapacity);
  for (t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC1)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC1)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC1;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 length$0: function() { return this.get$length().call$0(); },
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CTC1)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.i_10 = 0;
  this.forEach$1(new $._HashMapImpl_keys__(list, t1));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $._HashMapImpl_values__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $._ListImpl_List(8);
  this._values = $._ListImpl_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"": [],
 "super": "Object"
};

$$._KeyValuePair = {"": ["key?", "value="],
 "super": "Object"
};

$$._LinkedHashMapImpl = {"": ["_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.index_10 = 0;
  this._list.forEach$1(new $._LinkedHashMapImpl_keys__(list, t1));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.index_1 = 0;
  this._list.forEach$1(new $._LinkedHashMapImpl_values__(t1, list));
  return list;
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 length$0: function() { return this.get$length().call$0(); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 clear$0: function() {
  $.clear(this._map);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"": [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"": ["_previous!", "_next=", "_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 append$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this, this._next);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addFirst$1: function(value) {
  this._sentinel.append$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 length$0: function() { return this.get$length().call$0(); },
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 map$1: function(f) {
  var other, entry, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    $.addLast(other, f.call$1(entry.get$_element()));
  }
  return other;
},
 reduce$2: function(initialValue, combine) {
  return $.Collections_reduce(this, initialValue, combine);
},
 filter$1: function(f) {
  var other, entry, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      $.addLast(other, entry.get$_element());
  }
  return other;
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._StringBufferImpl = {"": ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 length$0: function() { return this.get$length().call$0(); },
 get$isEmpty: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.get$isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.iterator(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $._ListImpl_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.stringJoinUnchecked($._StringImpl__toJsStringArray(this._buffer), '');
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); }
};

$$.StackTrace = {"": ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.CastErrorImplementation = {"": ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return 'CastError: Casting value of type ' + $.S(this.actualType) + ' to' + ' incompatible type ' + $.S(this.expectedType);
}
};

$$.MetaInfo = {"": ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"": ["start", "str", "pattern?"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.GEBox2D = {"": ["context", "VIterations", "PIterations", "debugEnabled"],
 "super": "Object",
 init$0: function() {
  $.GEBox2D_world = $.World$($.Vector$($.GEBox2D_gravityX, $.GEBox2D_gravityY), true, $.DefaultWorldPool$());
  var t1 = $.CollisionListener$();
  $.GEBox2D_world.set$contactListener(t1);
},
 onUpdate$0: function() {
  var t1, t2;
  $.GEBox2D_world.step$3($.frameRate, this.VIterations, this.PIterations);
  if (this.debugEnabled) {
    this.context.clearRect$4(0, 0, 800, 800);
    $.GEBox2D_world.drawDebugData$0();
  }
  for (t1 = $.iterator($.get$GEBox2D_expireds()); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.GEBox2D_world.destroyBody$1(t2.get$physicsObject().get$body());
    $.removeAt$1($.get$GEBox2D_expireds(), $.indexOf$1($.get$GEBox2D_expireds(), t2));
  }
}
};

$$.CollisionListener = {"": [],
 "super": "Object",
 beginContact$1: function(contact) {
  var physicsObjectA, physicsObjectB;
  physicsObjectA = contact.fixtureA.get$body().get$userData();
  physicsObjectB = contact.fixtureB.get$body().get$userData();
  physicsObjectA.onHitCallback$0();
  physicsObjectB.onHitCallback$0();
},
 endContact$1: function(contact) {
  $.print('end contact');
},
 preSolve$2: function(contact, manifold) {
},
 postSolve$2: function(contact, manifold) {
}
};

$$.GEWebGL = {"": ["container"],
 "super": "Object",
 init$0: function() {
  $.GEWebGL_webGLProxy.init$0();
  $.add$1(this.container.get$elements(), $.GEWebGL_webGLProxy.get$renderer().get$domElement());
},
 addToScene$3: function(graphic, needsUpdate, clickable) {
  $.GEWebGL_webGLProxy.addToScene$1(graphic);
  if (needsUpdate)
    $.GEWebGL_addUpdateable(graphic);
  if (clickable)
    $.add$1($.get$GEWebGL_clickables(), graphic.get$mesh());
},
 detectHit$2: function(x, y) {
  var t1 = $.sub($.mul($.div(x, $.GEWebGL_webGLProxy.get$canvasWidth()), 2), 1);
  $.get$GEWebGL_mouse2D().set$x(t1);
  t1 = $.add($.mul($.neg($.div(y, $.GEWebGL_webGLProxy.get$canvasHeight())), 2), 1);
  $.get$GEWebGL_mouse2D().set$y(t1);
  t1 = $.sub($.mul($.div(x, $.GEWebGL_webGLProxy.get$canvasWidth()), 2), 1);
  $.get$GEWebGL_mouse3D().set$x(t1);
  t1 = $.add($.mul($.neg($.div(y, $.GEWebGL_webGLProxy.get$canvasHeight())), 2), 1);
  $.get$GEWebGL_mouse3D().set$y(t1);
  $.get$GEWebGL_mouse3D().set$z(0.5);
  $.GEWebGL_webGLProxy.detectHit$0();
},
 onUpdate$0: function() {
  $.GEWebGL_webGLProxy.render$0();
  if (!($.GEWebGL_followGraphic == null))
    $.GEWebGL_webGLProxy.get$camera().get$position().copy$1($.GEWebGL_followGraphic.get$mesh().get$position());
},
 GEWebGL$2: function(containerName, library) {
  switch ($.toLowerCase(library)) {
    case 'three.js':
    default:
      $.GEWebGL_webGLProxy = $.GEWebGLProxyThreeDart$(800, 800);
      break;
  }
  this.container = $.query(containerName);
}
};

$$.GEWebGLProxy = {"": ["name?", "canvasWidth?", "canvasHeight?"],
 "super": "Object",
 init$0: function() {
},
 addToScene$1: function(object) {
},
 removeFromScene$1: function(graphic) {
},
 detectHit$0: function() {
},
 render$0: function() {
}
};

$$.GEWebGLProxyThreeDart = {"": ["name?", "camera?", "scene", "projector", "renderer?", "lib3$GEWebGLProxy$name", "canvasWidth", "canvasHeight"],
 "super": "GEWebGLProxy",
 init$0: function() {
  var t1, t2, t3, t4;
  this.projector = $.Projector$();
  t1 = this.canvasWidth;
  t2 = t1 / -2;
  t3 = t1 / 2;
  t4 = this.canvasHeight;
  this.camera = $.OrthographicCamera$(t2, t3, t4 / 2, t4 / -2, -2000, 1000);
  this.camera.get$position().set$z(600);
  this.scene = $.Scene$();
  this.renderer = $.CanvasRenderer$(null);
  this.renderer.setSize$2(t1, t4);
},
 addToScene$1: function(graphic) {
  $.add$1(this.scene, graphic.get$mesh());
},
 removeFromScene$1: function(graphic) {
  this.scene.remove$1(graphic.mesh);
},
 detectHit$0: function() {
  var intersects = this.projector.pickingRay$2($.get$GEWebGL_mouse2D().clone$0(), this.camera).intersectObjects$1($.get$GEWebGL_clickables());
  if ($.gtB($.get$length(intersects), 0))
    $.index($.index(intersects, 0).get$object().get$properties(), 'self').onClick$0();
  $.print($.get$length(intersects));
},
 render$0: function() {
  this.renderer.render$2(this.scene, this.camera);
  for (var t1 = $.iterator($.get$GEWebGL_updateables()); t1.get$hasNext() === true;)
    t1.next$0().onUpdate$0();
}
};

$$.GEObject = {"": ["name?", "ttl?"],
 "super": "Object",
 onUpdate$0: function() {
},
 onClick$0: function() {
},
 expire$0: function() {
  $.removeAt$1($.get$expireables(), $.indexOf$1($.get$expireables(), this));
}
};

$$.GEGraphic = {"": ["geometry?", "material=", "mesh?", "color=", "width=", "height=", "radius=", "physicsObject?"],
 "super": "GEObject",
 setAsRectangle$3: function(width, height, depth) {
  var t1;
  this.geometry = $.PlaneGeometry$(width, height, 1, 1);
  this.material = $.MeshBasicMaterial$(0, 205, 100, 204, 1, 16777215, 0, true, true, null, true, null, null, false, '', 1, false, false, 0, 0, 1, 0.98, 2, 0, false, null, false, 0, true, false, 'round', 'round', 1);
  this.material.set$wireframe(true);
  this.color.setHex$1(16711680);
  t1 = this.color;
  this.material.set$color(t1);
  this.mesh = $.Mesh$(this.geometry, this.material);
  $.indexSet(this.mesh.get$properties(), 'self', this);
  this.width = width;
  this.height = height;
  this.depth = depth;
  this.geometryType = 'rectangle';
},
 setAsSphere$1: function(radius) {
  var t1;
  this.geometry = $.SphereGeometry$(radius, 8, 6, 0, 6.283185307179586, 0, 3.141592653589793);
  this.material = $.MeshBasicMaterial$(0, 205, 100, 204, 1, 16777215, 0, true, true, null, true, null, null, false, '', 1, false, false, 0, 0, 1, 0.98, 2, 0, false, null, false, 0, true, false, 'round', 'round', 1);
  this.material.set$wireframe(true);
  this.color.setHex$1(16711680);
  t1 = this.color;
  this.material.set$color(t1);
  this.mesh = $.Mesh$(this.geometry, this.material);
  $.indexSet(this.mesh.get$properties(), 'self', this);
  this.radius = radius;
  this.geometryType = 'sphere';
},
 attachPhysics$0: function() {
  this.physicsObject = $.GEPhysicObject$();
  switch (this.geometryType) {
    case 'sphere':
      this.physicsObject.createCircleBody$2(this.radius, 'dynamic');
      break;
    case 'rectangle':
    default:
      this.physicsObject.createRectangleBody$3(this.width, this.height, 'dynamic');
      break;
  }
  var t1 = this.get$x();
  this.physicsObject.set$bodyX(t1);
  t1 = this.get$y();
  this.physicsObject.set$bodyY(t1);
},
 setPosition$3: function(x, y, z) {
  this._x = x;
  this._y = y;
  this._z = z;
  this.mesh.get$position().setX$1(x);
  this.mesh.get$position().setY$1(y);
  this.mesh.get$position().setZ$1(z);
},
 onUpdate$0: function() {
  var t1, t2;
  $.GEObject.prototype.onUpdate$0.call(this);
  t1 = this.physicsObject;
  if (!(t1 == null)) {
    this.setPosition$3(t1.get$bodyX(), this.physicsObject.get$bodyY(), 1);
    t2 = this.physicsObject.get$bodyAngle();
    this.mesh.get$rotation().set$z(t2);
  }
},
 set$x: function(x) {
  var t1;
  this._x = x;
  t1 = this._x;
  this.mesh.get$position().set$x(t1);
},
 get$x: function() {
  return this._x;
},
 set$y: function(y) {
  var t1;
  this._y = y;
  t1 = this._y;
  this.mesh.get$position().set$y(t1);
},
 get$y: function() {
  return this._y;
},
 set$z: function(z) {
  var t1;
  this._z = z;
  t1 = this._z;
  this.mesh.get$position().set$z(t1);
},
 get$z: function() {
  return this._z;
}
};

$$.GEHitObject = {"": ["geometry", "material", "mesh", "_x", "_y", "_z", "color", "width", "height", "depth", "radius", "geometryType", "physicsObject", "name", "ttl"],
 "super": "GEGraphic"
};

$$.GEPhysicObject = {"": ["body?", "bodyDef", "fixtureDef?", "_onHitCallback"],
 "super": "Object",
 _onHitCallback$0: function() { return this._onHitCallback.call$0(); },
 createRectangleBody$3: function(width, height, type) {
  var shape;
  width = $.div(width, $.GEBox2D_scale);
  height = $.div(height, $.GEBox2D_scale);
  shape = $.PolygonShape$();
  shape.setAsBox$2($.div(width, 2), $.div(height, 2));
  this.fixtureDef = $.FixtureDef$();
  this.fixtureDef.set$restitution(0);
  this.fixtureDef.set$density(1000);
  this.fixtureDef.set$shape(shape);
  this.fixtureDef.set$friction(1000);
  this.bodyDef = this._createBodyType$1(type);
  this.body = $.GEBox2D_world.createBody$1(this.bodyDef);
  this.body.createFixture$1(this.fixtureDef);
  this.body.set$userData(this);
},
 createCircleBody$2: function(radius, type) {
  var shape;
  radius = $.div(radius, $.GEBox2D_scale);
  shape = $.CircleShape$();
  shape.radius = radius;
  this.fixtureDef = $.FixtureDef$();
  this.fixtureDef.set$restitution(0);
  this.fixtureDef.set$density(10000);
  this.fixtureDef.set$shape(shape);
  this.fixtureDef.set$friction(10);
  this.bodyDef = this._createBodyType$1(type);
  this.body = $.GEBox2D_world.createBody$1(this.bodyDef);
  this.body.createFixture$1(this.fixtureDef);
  this.body.set$userData(this);
},
 _createBodyType$1: function(type) {
  var bodyDef = $.BodyDef$();
  bodyDef.position = $.Vector$(0, 0);
  if (type === 'static')
    bodyDef.type = 0;
  else
    bodyDef.type = 2;
  return bodyDef;
},
 get$velocity: function() {
  var t1 = this.body;
  return t1.getLinearVelocityFromLocalPoint$1(t1.get$localCenter());
},
 onHitCallback$0: function() {
  if (!(this._onHitCallback == null))
    this._onHitCallback$0();
},
 set$onHit: function(callback) {
  this._onHitCallback = callback;
},
 get$bodyX: function() {
  return $.mul(this.body.get$position().get$x(), $.GEBox2D_scale);
},
 get$bodyY: function() {
  return $.mul(this.body.get$position().get$y(), $.GEBox2D_scale);
},
 get$bodyAngle: function() {
  return this.body.get$angle();
},
 set$bodyX: function(x) {
  var t1 = $.GEBox2D_scale;
  x = $.div(x, $.mul(t1, t1));
  this.body.setTransform$2($.Vector$(x, this.get$bodyY()), this.get$bodyAngle());
},
 set$bodyY: function(y) {
  y = $.div(y, $.GEBox2D_scale);
  this.body.setTransform$2($.Vector$(this.get$bodyX(), y), this.get$bodyAngle());
}
};

$$.GEObstacle = {"": ["geometry", "material", "mesh", "_x", "_y", "_z", "color", "width", "height", "depth", "radius", "geometryType", "physicsObject", "name", "ttl"],
 "super": "GEGraphic",
 attachPhysics$0: function() {
  this.physicsObject = $.GEPhysicObject$();
  this.physicsObject.createRectangleBody$3(this.width, this.height, 'static');
  var t1 = this.get$x();
  this.physicsObject.set$bodyX(t1);
  t1 = this.get$y();
  this.physicsObject.set$bodyY(t1);
}
};

$$.GEPlayer = {"": ["facing", "geometry", "material", "mesh", "_x", "_y", "_z", "color", "width", "height", "depth", "radius", "geometryType", "physicsObject", "name", "ttl"],
 "super": "GEGraphic",
 attachPhysics$0: function() {
  this.physicsObject = $.GEPhysicObject$();
  this.physicsObject.createCircleBody$2(this.radius, 'dynamic');
  var t1 = this.get$x();
  this.physicsObject.set$bodyX(t1);
  t1 = this.get$y();
  this.physicsObject.set$bodyY(t1);
  this.physicsObject.get$fixtureDef().set$restitution(0);
  this.physicsObject.get$body().set$linearDamping(0.4);
},
 moveUp$0: function() {
  var velocity, t1, point;
  velocity = this.physicsObject.get$velocity();
  if ($.gtB(velocity.get$y(), -0.025) && $.ltB(velocity.get$y(), 0.025)) {
    t1 = this.physicsObject.get$body();
    point = t1.getWorldPoint$1(t1.get$localCenter());
    this.physicsObject.get$body().applyLinearImpulse$2($.Vector$(0, 5000), point);
  }
},
 moveLeft$0: function() {
  var velocity = this.physicsObject.get$velocity();
  this.facing = 'left';
  if ($.gtB(velocity.get$x(), -1))
    this.physicsObject.get$body().applyLinearImpulse$2($.Vector$(-100, 0), $.Vector$(0, 0));
},
 moveRight$0: function() {
  var velocity = this.physicsObject.get$velocity();
  this.facing = 'right';
  if ($.ltB(velocity.get$x(), 1))
    this.physicsObject.get$body().applyLinearImpulse$2($.Vector$(100, 0), $.Vector$(0, 0));
},
 shoot$0: function() {
  var bullet = $.GEBullet$('player', this.facing);
  bullet.setAsSphere$1(2);
  switch (this.geometryType) {
    case 'sphere':
      if (this.facing === 'left')
        bullet.setPosition$3($.sub(this.get$x(), $.add(this.radius, 4)), this.get$y(), 1);
      else
        bullet.setPosition$3($.add($.add(this.get$x(), this.radius), 4), this.get$y(), 1);
      break;
    case 'rectangle':
      if (this.facing === 'left')
        bullet.setPosition$3($.sub(this.get$x(), $.add(this.width, 4)), this.get$y(), 1);
      else
        bullet.setPosition$3($.add($.add(this.get$x(), this.width), 4), this.get$y(), 1);
      break;
  }
  bullet.attachPhysics$0();
  $.webGL.addToScene$3(bullet, true, false);
}
};

$$.GEBullet = {"": ["ttlAddon", "direction", "isAlive", "geometry", "material", "mesh", "_x", "_y", "_z", "color", "width", "height", "depth", "radius", "geometryType", "physicsObject", "name", "ttl"],
 "super": "GEGraphic",
 attachPhysics$0: function() {
  var t1, t2;
  this.physicsObject = $.GEPhysicObject$();
  this.physicsObject.createCircleBody$2(this.radius, 'dynamic');
  t1 = $.eqB(this.direction, 'left');
  t2 = this.physicsObject;
  if (t1)
    t2.get$body().get$linearVelocity().set$x(-10);
  else
    t2.get$body().get$linearVelocity().set$x(10);
  this.physicsObject.get$body().get$linearVelocity().set$y(0.5);
  t1 = this.get$x();
  this.physicsObject.set$bodyX(t1);
  t1 = this.get$y();
  this.physicsObject.set$bodyY(t1);
  this.physicsObject.get$body().set$bullet(true);
  t1 = this.get$onHit();
  this.physicsObject.set$onHit(t1);
},
 onHit$0: function() {
  this.isAlive = false;
},
 get$onHit: function() { return new $.BoundClosure(this, 'onHit$0'); },
 expire$0: function() {
  $.GEObject.prototype.expire$0.call(this);
  $.GEWebGL_remove(this);
  $.add$1($.get$GEBox2D_expireds(), this);
},
 GEBullet$2: function(name$, direction) {
  this.ttl = $.add($.lastFrameTime, this.ttlAddon);
  this.isAlive = true;
  $.add$1($.get$expireables(), this);
}
};

$$.AbstractWorkerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.AudioContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$.BatteryManagerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.BodyElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.DOMApplicationCacheEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.DedicatedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.DocumentEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$copy: function() {
  return this.operator$index$1('copy');
},
 copy$1: function(arg0) { return this.get$copy().call$1(arg0); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._FilteredElementList = {"": ["_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  return $._ListImpl_List$from($.filter(this._childNodes, new $._FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  $.forEach(this.get$_filtered(), f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$('Invalid list length'));
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  $.add$1(this._childNodes, value);
},
 get$add: function() { return new $.BoundClosure0(this, 'add$1'); },
 addAll$1: function(collection) {
  $.forEach(collection, this.get$add());
},
 addLast$1: function(value) {
  $.add$1(this._childNodes, value);
},
 contains$1: function(element) {
  return typeof element === 'object' && element !== null && element.is$Element() && $.contains$1(this._childNodes, element) === true;
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('TODO(jacobr): should we impl?'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnimplementedError$(null));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $._FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  $.clear(this._childNodes);
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 map$1: function(f) {
  return $.map(this.get$_filtered(), f);
},
 filter$1: function(f) {
  return $.filter(this.get$_filtered(), f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.get$isEmpty(this.get$_filtered());
},
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 length$0: function() { return this.get$length().call$0(); },
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_filtered(), start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return $.get$last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ChildrenElementList = {"": ["_lib_element?", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $._ListImpl_List(t3);
  for (len = t1.length, i = 0; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, t1) {
  var output, len, i, t2;
  output = $._ListImpl_List($.get$length(t1));
  for (len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    t2 = $.index(t1, i);
    if (i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 contains$1: function(element) {
  return $.contains$1(this._childElements, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this._childElements); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(output, f);
  for (t2 = $.iterator(this._childElements); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 get$isEmpty: function() {
  return this._lib_element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  return $.get$length(this._childElements);
},
 length$0: function() { return this.get$length().call$0(); },
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._lib_element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(''));
},
 add$1: function(value) {
  this._lib_element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._lib_element.$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._lib_element; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('TODO(jacobr): should we impl?'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnimplementedError$(null));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnimplementedError$(null));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  this._lib_element.set$text('');
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._lib_element.$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._lib_element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"": ["_nodeList"],
 "super": "Object",
 contains$1: function(element) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = $.iterator(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.get$isEmpty(this._nodeList);
},
 get$length: function() {
  return $.get$length(this._nodeList);
},
 length$0: function() { return this.get$length().call$0(); },
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(''));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$(''));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$(''));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$(''));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 get$last: function() {
  return $.get$last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"": ["_lib_list", "_index"],
 "super": "Object",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._lib_list;
  t2 = this._index;
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 get$hasNext: function() {
  return $.lt(this._index, $.get$length(this._lib_list));
}
};

$$.ElementEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$copy: function() {
  return this.operator$index$1('copy');
},
 copy$1: function(arg0) { return this.get$copy().call$1(arg0); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$.EventSourceEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.Events = {"": ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"": ["_ptr", "_type?"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
}
};

$$.FileReaderEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.FileWriterEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.FrameSetElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.HttpRequestEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.HttpRequestUploadEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBDatabaseEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBOpenDBRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.IDBRequestEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBTransactionEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$.IDBVersionChangeRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.InputElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.LocalWindowEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$.MediaElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.MediaStreamEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MessagePortEvents = {"": ["_ptr"],
 "super": "Events"
};

$$._ChildNodeListLazy = {"": ["_this"],
 "super": "Object",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 length$0: function() { return this.get$length().call$0(); },
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"": [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._lib_list);
},
 contains$1: function(element) {
  return $.contains$1(this._lib_list, element);
},
 forEach$1: function(f) {
  return $.forEach(this._lib_list, f);
},
 map$1: function(f) {
  return $.map(this._lib_list, f);
},
 filter$1: function(f) {
  return $.filter(this._lib_list, f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.get$isEmpty(this._lib_list);
},
 get$length: function() {
  return $.get$length(this._lib_list);
},
 length$0: function() { return this.get$length().call$0(); },
 operator$index$1: function(index) {
  return $.index(this._lib_list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._lib_list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._lib_list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._lib_list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._lib_list, value);
},
 addAll$1: function(collection) {
  return $.addAll(this._lib_list, collection);
},
 sort$1: function(compare) {
  return $.sort$1(this._lib_list, compare);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._lib_list, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  return $.clear(this._lib_list);
},
 removeLast$0: function() {
  return $.removeLast(this._lib_list);
},
 get$last: function() {
  return $.get$last(this._lib_list);
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._lib_list, start, rangeLength);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  return $.setRange$4(this._lib_list, start, rangeLength, from, startFrom);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  return $.removeRange(this._lib_list, start, rangeLength);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"": ["_lib_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._lib_list, f));
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($.getRange(this._lib_list, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.NotificationEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); }
};

$$.PeerConnection00Events = {"": ["_ptr"],
 "super": "Events"
};

$$.RTCDataChannelEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); }
};

$$.RTCPeerConnectionEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SVGElementInstanceEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$copy: function() {
  return this.operator$index$1('copy');
},
 copy$1: function(arg0) { return this.get$copy().call$1(arg0); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$.ScriptProcessorNodeEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SharedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.SpeechRecognitionEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackCueEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.WebSocketEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); }
};

$$.WorkerEvents = {"": ["_ptr"],
 "super": "AbstractWorkerEvents"
};

$$.WorkerContextEvents = {"": ["_ptr"],
 "super": "Events"
};

$$._TypedImageData = {"": ["data?", "height?", "width?"],
 "super": "Object",
 is$_TypedImageData: true,
 is$ImageData: function() { return true; }
};

$$._DOMWindowCrossFrame = {"": ["_window"],
 "super": "Object",
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 close$0: function() {
  return this._window.close();
}
};

$$._FixedSizeListIterator = {"": ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._lib_length, this._pos);
}
};

$$._VariableSizeListIterator = {"": [],
 "super": "Object",
 get$hasNext: function() {
  return $.gt($.get$length(this._array), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); }
};

$$._Manager = {"": ["nextIsolateId=", "currentManagerId?", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  if ($.get$isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.Map_Map();
  this.managers = $.Map_Map();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"": ["id?", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old, result, t1;
  old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  result = null;
  try {
    result = code.call$0();
  } finally {
    t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($._ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.get$isEmpty(this.ports) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1, t2;
  t1 = $._globalState();
  t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.Map_Map();
  this.initGlobals$0();
}
};

$$._EventLoop = {"": ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.get$isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.get$isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function(exception) {
  var t1, e, trace;
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"": ["isolate", "fn", "message"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"": [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"": ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($._ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer, port;
  completer = $.Completer_Completer();
  port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(completer, port));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"": ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(replyTo, this, message));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 get$hashCode: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"": ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(message, this, replyTo));
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"": ["_id?", "_callback?"],
 "super": "Object",
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._callback = onMessage;
},
 close$0: function() {
  this._callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"": ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"": ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return ['sendport', x._workerId, x._isolateId, x._receivePortId];
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"": ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"": ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId, isolateId, receivePortId, isolate;
  managerId = $.index(x, 1);
  isolateId = $.index(x, 2);
  receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"": ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return object['__MessageTraverser__attached_info__'];
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  object['__MessageTraverser__attached_info__'] = info;
},
 reset$0: function() {
  this.tagged = $._ListImpl_List(null);
},
 cleanup$0: function() {
  var length$, i;
  length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  i = 0;
  for (; i < length$; ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
}
};

$$._MessageTraverserVisitedMap = {"": [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"": [],
 "super": "Object",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copy, len, i;
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = list.length;
  copy = $._ListImpl_List(len);
  $.indexSet(this._visited, list, copy);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, list) {
  var copy, len, i, t1;
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = $.get$length(list);
  copy = $._ListImpl_List(len);
  $.indexSet(this._visited, list, copy);
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1, t2;
  t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.Map_Map();
  $.indexSet(this._visited, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(t1, this));
  return t1.copy_10;
}
};

$$._Serializer = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.get$keys()), this._serializeList$1(map.get$values())];
},
 _serializeList$1: function(list) {
  var len, result, i;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  len = list.length;
  result = $._ListImpl_List(len);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, list) {
  var len, result, i, t1;
  len = $.get$length(list);
  result = $._ListImpl_List(len);
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"": [],
 "super": "Object",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._deserialized = $.HashMap_HashMap();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, dartList, id) {
  var len, i;
  $.indexSet(this._deserialized, id, dartList);
  len = $.get$length(dartList);
  for (i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map();
  id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map();
      id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      len = $.get$length(keys);
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"": ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon0(callback, this), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon(this, callback), milliSeconds);
}
};

$$._Random = {"": [],
 "super": "Object",
 nextInt$1: function(max) {
  if (max < 0)
    throw $.$$throw($.ArgumentError$('negative max: ' + $.S(max)));
  if (max > 4294967295)
    max = 4294967295;
  return (Math.random() * max) >>> 0;
}
};

$$.ContactFilter = {"": [],
 "super": "Object",
 shouldCollide$2: function(fixtureA, fixtureB) {
  var filterA, filterB, t1, t3, t5;
  filterA = fixtureA.get$filter();
  filterB = fixtureB.get$filter();
  t1 = filterA.get$groupIndex();
  if (typeof t1 !== 'number')
    return this.shouldCollide$2$bailout(1, t1, filterA, filterB);
  if (!(t1 === 0) && t1 === filterB.get$groupIndex()) {
    t1 = filterA.get$groupIndex();
    if (typeof t1 !== 'number')
      return this.shouldCollide$2$bailout(2, t1);
    return t1 > 0;
  }
  t1 = filterA.get$maskBits();
  if (t1 !== (t1 | 0))
    return this.shouldCollide$2$bailout(3, t1, filterA, filterB);
  t3 = filterB.get$categoryBits();
  if (t3 !== (t3 | 0))
    return this.shouldCollide$2$bailout(4, t1, t3, filterA, filterB);
  if ((t1 & t3) >>> 0 !== 0) {
    t1 = filterA.get$categoryBits();
    if (t1 !== (t1 | 0))
      return this.shouldCollide$2$bailout(5, t1, filterB);
    t3 = filterB.get$maskBits();
    if (t3 !== (t3 | 0))
      return this.shouldCollide$2$bailout(6, t1, t3);
    t5 = (t1 & t3) >>> 0 !== 0;
    t1 = t5;
  } else
    t1 = false;
  return t1;
},
 shouldCollide$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      filterB = env2;
      filterA = env1;
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      filterB = env2;
      filterA = env1;
      t1 = env0;
      break;
    case 4:
      filterB = env3;
      filterA = env2;
      t3 = env1;
      t1 = env0;
      break;
    case 5:
      filterB = env1;
      t1 = env0;
      break;
    case 6:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      filterA = fixtureA.get$filter();
      filterB = fixtureB.get$filter();
      t1 = filterA.get$groupIndex();
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && !$.eqB(t1, 0) && $.eqB(filterA.get$groupIndex(), filterB.get$groupIndex()))
        switch (state0) {
          case 0:
            t1 = filterA.get$groupIndex();
          case 2:
            state0 = 0;
            return $.gt(t1, 0);
        }
      t1 = filterA.get$maskBits();
    case 3:
      state0 = 0;
      t3 = filterB.get$categoryBits();
    case 4:
      state0 = 0;
    default:
      var filterA, filterB, t1, t3, t5;
      if (state0 === 6 || state0 === 5 || state0 === 0 && !$.eqB($.and(t1, t3), 0))
        switch (state0) {
          case 0:
            t1 = filterA.get$categoryBits();
          case 5:
            state0 = 0;
            t3 = filterB.get$maskBits();
          case 6:
            state0 = 0;
            t5 = !$.eqB($.and(t1, t3), 0);
            t1 = t5;
        }
      else
        t1 = false;
      return t1;
  }
}
};

$$.ContactImpulse = {"": ["normalImpulses", "tangentImpulses"],
 "super": "Object"
};

$$.AxisAlignedBox = {"": ["lowerBound?", "upperBound?"],
 "super": "Object",
 setFromCombination$2: function(boxOne, boxTwo) {
  var t1 = $.min(boxOne.get$lowerBound().get$x(), boxTwo.get$lowerBound().get$x());
  this.lowerBound.set$x(t1);
  t1 = $.min(boxOne.get$lowerBound().get$y(), boxTwo.get$lowerBound().get$y());
  this.lowerBound.set$y(t1);
  t1 = $.max(boxOne.get$upperBound().get$x(), boxTwo.get$upperBound().get$x());
  this.upperBound.set$x(t1);
  t1 = $.max(boxOne.get$upperBound().get$y(), boxTwo.get$upperBound().get$y());
  this.upperBound.set$y(t1);
},
 get$center: function() {
  var c = $.Vector$copy(this.lowerBound);
  c.addLocal$1(this.upperBound);
  c.mulLocal$1(0.5);
  return c;
},
 contains$1: function(aabb) {
  return $.gtB(this.lowerBound.get$x(), aabb.get$lowerBound().get$x()) && $.gtB(this.lowerBound.get$y(), aabb.get$lowerBound().get$y()) && $.ltB(this.upperBound.get$y(), aabb.get$upperBound().get$y()) && $.ltB(this.upperBound.get$x(), aabb.get$upperBound().get$x());
},
 setFrom$1: function(other) {
  this.lowerBound.setFrom$1(other.get$lowerBound());
  this.upperBound.setFrom$1(other.get$upperBound());
},
 toString$0: function() {
  return $.S(this.lowerBound) + ', ' + $.S(this.upperBound);
},
 AxisAlignedBox$2: function(lowerBound, upperBound) {
  if (this.lowerBound == null)
    this.lowerBound = $.Vector$(0, 0);
  if (this.upperBound == null)
    this.upperBound = $.Vector$(0, 0);
}
};

$$.Collision = {"": ["_pool", "cache", "input", "output", "results1", "results2", "incidentEdge?", "localTangent", "localNormal?", "planePoint", "tangent", "normal?", "normal1", "v11", "v12", "clipPoints1", "clipPoints2"],
 "super": "Object",
 testOverlap$4: function(shapeA, shapeB, transformA, transformB) {
  var t1, t2, t3, t4;
  t1 = this.input;
  t1.proxyA.setFromShape$1(shapeA);
  t1.proxyB.setFromShape$1(shapeB);
  t1.transformA.setFrom$1(transformA);
  t1.transformB.setFrom$1(transformB);
  t1.useRadii = true;
  t2 = this.cache;
  t2.count = 0;
  t3 = this._pool.distance;
  t4 = this.output;
  t3.distance$3(t4, t2, t1);
  return $.lt(t4.distance, 0.000001192);
},
 collideCircles$5: function(manifold, circle1, xfA, circle2, xfB) {
  var v, pAy, pAx, v1, pBy, dx, dy, distSqr, radius;
  manifold.set$pointCount(0);
  v = circle1.get$position();
  pAy = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), v.get$y()));
  pAx = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), v.get$y()));
  v1 = circle2.get$position();
  pBy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v1.get$y()));
  dx = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v1.get$y())), pAx);
  dy = $.sub(pBy, pAy);
  distSqr = $.add($.mul(dx, dx), $.mul(dy, dy));
  radius = $.add(circle1.get$radius(), circle2.get$radius());
  if ($.gtB(distSqr, $.mul(radius, radius)))
    return;
  manifold.set$type(0);
  manifold.get$localPoint().setFrom$1(circle1.get$position());
  manifold.get$localNormal().setZero$0();
  manifold.set$pointCount(1);
  $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle2.get$position());
  $.index(manifold.get$points(), 0).get$id().zero$0();
},
 collidePolygonAndCircle$5: function(manifold, polygon, xfA, circle, xfB) {
  var v, cy, v1x, v1y, t1, b, b1, cLocaly, cLocalx, radius, vertexCount, vertices, normals, normalIndex, separation, i, vertex, tempx, tempy, norm, s, vertIndex2, v1, v2, mpoint, tempX, tempY, temp2X, temp2Y, u1, temp3X, temp3Y, temp4X, temp4Y, u2, dx, dy, fcx, fcy, tx, ty, t2;
  manifold.set$pointCount(0);
  v = circle.get$position();
  cy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
  v1x = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y())), xfA.get$position().get$x());
  v1y = $.sub(cy, xfA.get$position().get$y());
  t1 = xfA.get$rotation();
  b = t1.get$col1();
  b1 = t1.get$col2();
  cLocaly = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
  if (typeof cLocaly !== 'number')
    return this.collidePolygonAndCircle$5$bailout(1, manifold, cLocaly, polygon, circle, v1x, v1y, b);
  cLocalx = $.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y()));
  if (typeof cLocalx !== 'number')
    return this.collidePolygonAndCircle$5$bailout(2, manifold, cLocaly, polygon, circle, cLocalx);
  radius = $.add(polygon.get$radius(), circle.get$radius());
  if (typeof radius !== 'number')
    return this.collidePolygonAndCircle$5$bailout(3, manifold, cLocaly, polygon, circle, cLocalx, radius);
  vertexCount = polygon.get$vertexCount();
  if (typeof vertexCount !== 'number')
    return this.collidePolygonAndCircle$5$bailout(4, manifold, cLocaly, polygon, circle, cLocalx, radius, vertexCount);
  vertices = polygon.get$vertices();
  if (typeof vertices !== 'string' && (typeof vertices !== 'object' || vertices === null || vertices.constructor !== Array && !vertices.is$JavaScriptIndexingBehavior()))
    return this.collidePolygonAndCircle$5$bailout(5, manifold, cLocaly, polygon, circle, vertices, cLocalx, radius, vertexCount);
  normals = polygon.get$normals();
  if (typeof normals !== 'string' && (typeof normals !== 'object' || normals === null || normals.constructor !== Array && !normals.is$JavaScriptIndexingBehavior()))
    return this.collidePolygonAndCircle$5$bailout(6, manifold, cLocaly, normals, circle, vertices, cLocalx, radius, vertexCount);
  for (normalIndex = 0, separation = 1e-12, i = 0; i < vertexCount; ++i) {
    if (i >= vertices.length)
      throw $.ioore(i);
    vertex = vertices[i];
    t1 = vertex.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    tempx = cLocalx - t1;
    t1 = vertex.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    tempy = cLocaly - t1;
    if (i >= normals.length)
      throw $.ioore(i);
    norm = normals[i];
    s = $.add($.mul(norm.get$x(), tempx), $.mul(norm.get$y(), tempy));
    if ($.gtB(s, radius))
      return;
    if ($.gtB(s, separation)) {
      separation = s;
      normalIndex = i;
    }
  }
  vertIndex2 = normalIndex + 1;
  vertIndex2 = vertIndex2 < vertexCount ? vertIndex2 : 0;
  t1 = vertices.length;
  if (normalIndex < 0 || normalIndex >= t1)
    throw $.ioore(normalIndex);
  v1 = vertices[normalIndex];
  if (vertIndex2 < 0 || vertIndex2 >= t1)
    throw $.ioore(vertIndex2);
  v2 = vertices[vertIndex2];
  if ($.ltB(separation, 1.192e-7)) {
    manifold.set$pointCount(1);
    manifold.set$type(1);
    if (normalIndex >= normals.length)
      throw $.ioore(normalIndex);
    norm = normals[normalIndex];
    t1 = norm.get$x();
    manifold.get$localNormal().set$x(t1);
    t1 = norm.get$y();
    manifold.get$localNormal().set$y(t1);
    t1 = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
    manifold.get$localPoint().set$x(t1);
    t1 = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
    manifold.get$localPoint().set$y(t1);
    mpoint = $.index(manifold.get$points(), 0);
    t1 = circle.get$position().get$x();
    mpoint.get$localPoint().set$x(t1);
    t1 = circle.get$position().get$y();
    mpoint.get$localPoint().set$y(t1);
    mpoint.get$id().zero$0();
    return;
  }
  t1 = v1.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  tempX = cLocalx - t1;
  t1 = v1.get$y();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  tempY = cLocaly - t1;
  temp2X = $.sub(v2.get$x(), v1.get$x());
  temp2Y = $.sub(v2.get$y(), v1.get$y());
  if (typeof temp2X !== 'number')
    throw $.iae(temp2X);
  t1 = tempX * temp2X;
  if (typeof temp2Y !== 'number')
    throw $.iae(temp2Y);
  u1 = t1 + tempY * temp2Y;
  t1 = v2.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  temp3X = cLocalx - t1;
  t1 = v2.get$y();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  temp3Y = cLocaly - t1;
  temp4X = $.sub(v1.get$x(), v2.get$x());
  temp4Y = $.sub(v1.get$y(), v2.get$y());
  if (typeof temp4X !== 'number')
    throw $.iae(temp4X);
  t1 = temp3X * temp4X;
  if (typeof temp4Y !== 'number')
    throw $.iae(temp4Y);
  u2 = t1 + temp3Y * temp4Y;
  if (u1 <= 0) {
    t1 = v1.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dx = cLocalx - t1;
    t1 = v1.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dy = cLocaly - t1;
    if (dx * dx + dy * dy > radius * radius)
      return;
    manifold.set$pointCount(1);
    manifold.set$type(1);
    t1 = v1.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocalx - t1;
    manifold.get$localNormal().set$x(t1);
    t1 = v1.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocaly - t1;
    manifold.get$localNormal().set$y(t1);
    manifold.get$localNormal().normalize$0();
    manifold.get$localPoint().setFrom$1(v1);
    $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
    $.index(manifold.get$points(), 0).get$id().zero$0();
  } else if (u2 <= 0) {
    t1 = v2.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dx = cLocalx - t1;
    t1 = v2.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dy = cLocaly - t1;
    if (dx * dx + dy * dy > radius * radius)
      return;
    manifold.set$pointCount(1);
    manifold.set$type(1);
    t1 = v2.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocalx - t1;
    manifold.get$localNormal().set$x(t1);
    t1 = v2.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocaly - t1;
    manifold.get$localNormal().set$y(t1);
    manifold.get$localNormal().normalize$0();
    manifold.get$localPoint().setFrom$1(v2);
    $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
    $.index(manifold.get$points(), 0).get$id().zero$0();
  } else {
    fcx = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
    fcy = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
    if (typeof fcx !== 'number')
      throw $.iae(fcx);
    tx = cLocalx - fcx;
    if (typeof fcy !== 'number')
      throw $.iae(fcy);
    ty = cLocaly - fcy;
    if (normalIndex >= normals.length)
      throw $.ioore(normalIndex);
    norm = normals[normalIndex];
    t1 = norm.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = tx * t1;
    t2 = norm.get$y();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    if (t1 + ty * t2 > radius)
      return;
    manifold.set$pointCount(1);
    manifold.set$type(1);
    t1 = manifold.get$localNormal();
    if (normalIndex >= normals.length)
      throw $.ioore(normalIndex);
    t1.setFrom$1(normals[normalIndex]);
    manifold.get$localPoint().set$x(fcx);
    manifold.get$localPoint().set$y(fcy);
    $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
    $.index(manifold.get$points(), 0).get$id().zero$0();
  }
},
 collidePolygonAndCircle$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      b = env6;
      v1y = env5;
      v1x = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 2:
      cLocalx = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 3:
      radius = env5;
      cLocalx = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 4:
      vertexCount = env6;
      radius = env5;
      cLocalx = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 5:
      vertexCount = env7;
      radius = env6;
      cLocalx = env5;
      vertices = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 6:
      vertexCount = env7;
      radius = env6;
      cLocalx = env5;
      vertices = env4;
      circle = env3;
      normals = env2;
      cLocaly = env1;
      manifold = env0;
      break;
  }
  switch (state0) {
    case 0:
      manifold.set$pointCount(0);
      v = circle.get$position();
      cy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
      v1x = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y())), xfA.get$position().get$x());
      v1y = $.sub(cy, xfA.get$position().get$y());
      t1 = xfA.get$rotation();
      b = t1.get$col1();
      b1 = t1.get$col2();
      cLocaly = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
    case 1:
      state0 = 0;
      cLocalx = $.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y()));
    case 2:
      state0 = 0;
      radius = $.add(polygon.get$radius(), circle.get$radius());
    case 3:
      state0 = 0;
      vertexCount = polygon.get$vertexCount();
    case 4:
      state0 = 0;
      vertices = polygon.get$vertices();
    case 5:
      state0 = 0;
      normals = polygon.get$normals();
    case 6:
      var v, cy, v1x, v1y, t1, b, b1, cLocaly, circle, polygon, manifold, cLocalx, radius, vertexCount, vertices, normals, normalIndex, separation, i, vertex, tempx, tempy, norm, s, vertIndex2, v1, v2, mpoint, tempX, tempY, temp2X, temp2Y, u1, temp3X, temp3Y, temp4X, temp4Y, u2, dx, dy, fcx, fcy, tx, ty;
      state0 = 0;
      for (normalIndex = 0, separation = 1e-12, i = 0; $.ltB(i, vertexCount); ++i) {
        vertex = $.index(vertices, i);
        tempx = $.sub(cLocalx, vertex.get$x());
        tempy = $.sub(cLocaly, vertex.get$y());
        norm = $.index(normals, i);
        s = $.add($.mul(norm.get$x(), tempx), $.mul(norm.get$y(), tempy));
        if ($.gtB(s, radius))
          return;
        if ($.gtB(s, separation)) {
          separation = s;
          normalIndex = i;
        }
      }
      vertIndex2 = normalIndex + 1;
      vertIndex2 = $.ltB(vertIndex2, vertexCount) ? vertIndex2 : 0;
      v1 = $.index(vertices, normalIndex);
      v2 = $.index(vertices, vertIndex2);
      if ($.ltB(separation, 1.192e-7)) {
        manifold.set$pointCount(1);
        manifold.set$type(1);
        norm = $.index(normals, normalIndex);
        t1 = norm.get$x();
        manifold.get$localNormal().set$x(t1);
        t1 = norm.get$y();
        manifold.get$localNormal().set$y(t1);
        t1 = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
        manifold.get$localPoint().set$x(t1);
        t1 = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
        manifold.get$localPoint().set$y(t1);
        mpoint = $.index(manifold.get$points(), 0);
        t1 = circle.get$position().get$x();
        mpoint.get$localPoint().set$x(t1);
        t1 = circle.get$position().get$y();
        mpoint.get$localPoint().set$y(t1);
        mpoint.get$id().zero$0();
        return;
      }
      tempX = $.sub(cLocalx, v1.get$x());
      tempY = $.sub(cLocaly, v1.get$y());
      temp2X = $.sub(v2.get$x(), v1.get$x());
      temp2Y = $.sub(v2.get$y(), v1.get$y());
      u1 = $.add($.mul(tempX, temp2X), $.mul(tempY, temp2Y));
      temp3X = $.sub(cLocalx, v2.get$x());
      temp3Y = $.sub(cLocaly, v2.get$y());
      temp4X = $.sub(v1.get$x(), v2.get$x());
      temp4Y = $.sub(v1.get$y(), v2.get$y());
      u2 = $.add($.mul(temp3X, temp4X), $.mul(temp3Y, temp4Y));
      if ($.leB(u1, 0)) {
        dx = $.sub(cLocalx, v1.get$x());
        dy = $.sub(cLocaly, v1.get$y());
        if ($.gtB($.add($.mul(dx, dx), $.mul(dy, dy)), $.mul(radius, radius)))
          return;
        manifold.set$pointCount(1);
        manifold.set$type(1);
        t1 = $.sub(cLocalx, v1.get$x());
        manifold.get$localNormal().set$x(t1);
        t1 = $.sub(cLocaly, v1.get$y());
        manifold.get$localNormal().set$y(t1);
        manifold.get$localNormal().normalize$0();
        manifold.get$localPoint().setFrom$1(v1);
        $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
        $.index(manifold.get$points(), 0).get$id().zero$0();
      } else if ($.leB(u2, 0)) {
        dx = $.sub(cLocalx, v2.get$x());
        dy = $.sub(cLocaly, v2.get$y());
        if ($.gtB($.add($.mul(dx, dx), $.mul(dy, dy)), $.mul(radius, radius)))
          return;
        manifold.set$pointCount(1);
        manifold.set$type(1);
        t1 = $.sub(cLocalx, v2.get$x());
        manifold.get$localNormal().set$x(t1);
        t1 = $.sub(cLocaly, v2.get$y());
        manifold.get$localNormal().set$y(t1);
        manifold.get$localNormal().normalize$0();
        manifold.get$localPoint().setFrom$1(v2);
        $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
        $.index(manifold.get$points(), 0).get$id().zero$0();
      } else {
        fcx = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
        fcy = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
        tx = $.sub(cLocalx, fcx);
        ty = $.sub(cLocaly, fcy);
        norm = $.index(normals, normalIndex);
        if ($.gtB($.add($.mul(tx, norm.get$x()), $.mul(ty, norm.get$y())), radius))
          return;
        manifold.set$pointCount(1);
        manifold.set$type(1);
        manifold.get$localNormal().setFrom$1($.index(normals, normalIndex));
        manifold.get$localPoint().set$x(fcx);
        manifold.get$localPoint().set$y(fcy);
        $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
        $.index(manifold.get$points(), 0).get$id().zero$0();
      }
  }
},
 edgeSeparation$5: function(poly1, xf1, edge1, poly2, xf2) {
  var vertices1, normals1, count2, vertices2, R, v, t5, t7, t10, normal1Worldy, t13, t16, normal1Worldx, R1, t19, normal1x, t22, normal1y, index, minDot, i, a, t1, t3, dot, v3, t9, v1y, t12, t14, t18, v1x, v4, t21, t23, t25, t27, v2y, t29, t31, t33, t35, t37;
  poly1.get$vertexCount();
  vertices1 = poly1.get$vertices();
  if (typeof vertices1 !== 'string' && (typeof vertices1 !== 'object' || vertices1 === null || vertices1.constructor !== Array && !vertices1.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(1, poly1, xf1, edge1, poly2, xf2, vertices1);
  normals1 = poly1.get$normals();
  if (typeof normals1 !== 'string' && (typeof normals1 !== 'object' || normals1 === null || normals1.constructor !== Array && !normals1.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(2, xf1, edge1, poly2, xf2, vertices1, normals1);
  count2 = poly2.get$vertexCount();
  if (typeof count2 !== 'number')
    return this.edgeSeparation$5$bailout(3, xf1, edge1, poly2, xf2, vertices1, normals1, count2);
  vertices2 = poly2.get$vertices();
  if (typeof vertices2 !== 'string' && (typeof vertices2 !== 'object' || vertices2 === null || vertices2.constructor !== Array && !vertices2.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(4, xf1, edge1, xf2, vertices1, normals1, count2, vertices2);
  R = xf1.get$rotation();
  if (edge1 !== (edge1 | 0))
    throw $.iae(edge1);
  if (edge1 < 0 || edge1 >= normals1.length)
    throw $.ioore(edge1);
  v = normals1[edge1];
  t5 = R.get$col1().get$y();
  if (t5 !== (t5 | 0))
    return this.edgeSeparation$5$bailout(5, xf1, edge1, xf2, t5, vertices1, count2, vertices2, R, v);
  t7 = v.get$x();
  if (t7 !== (t7 | 0))
    return this.edgeSeparation$5$bailout(6, xf1, edge1, t7, xf2, t5, vertices1, count2, vertices2, R, v);
  t7 = t5 * t7;
  t5 = R.get$col2().get$y();
  if (t5 !== (t5 | 0))
    return this.edgeSeparation$5$bailout(7, xf1, edge1, xf2, t7, t5, vertices1, count2, vertices2, R, v);
  t10 = v.get$y();
  if (t10 !== (t10 | 0))
    return this.edgeSeparation$5$bailout(8, xf1, edge1, xf2, t7, t5, t10, vertices1, count2, vertices2, R, v);
  normal1Worldy = t7 + t5 * t10;
  t7 = R.get$col1().get$x();
  if (t7 !== (t7 | 0))
    return this.edgeSeparation$5$bailout(9, xf1, edge1, xf2, vertices1, count2, vertices2, normal1Worldy, R, t7, v);
  t13 = v.get$x();
  if (t13 !== (t13 | 0))
    return this.edgeSeparation$5$bailout(10, xf1, edge1, t13, xf2, vertices1, count2, vertices2, normal1Worldy, R, t7, v);
  t13 = t7 * t13;
  t7 = R.get$col2().get$x();
  if (t7 !== (t7 | 0))
    return this.edgeSeparation$5$bailout(11, t13, xf1, edge1, t7, xf2, vertices1, count2, vertices2, normal1Worldy, R, v);
  t16 = v.get$y();
  if (t16 !== (t16 | 0))
    return this.edgeSeparation$5$bailout(12, t13, xf1, edge1, t7, xf2, t16, vertices1, count2, vertices2, normal1Worldy, R);
  normal1Worldx = t13 + t7 * t16;
  R1 = xf2.get$rotation();
  t13 = R1.get$col1().get$x();
  if (t13 !== (t13 | 0))
    return this.edgeSeparation$5$bailout(13, t13, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, normal1Worldy, R);
  t13 = normal1Worldx * t13;
  t19 = R1.get$col1().get$y();
  if (t19 !== (t19 | 0))
    return this.edgeSeparation$5$bailout(14, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, t13, R, t19, normal1Worldy);
  normal1x = t13 + normal1Worldy * t19;
  t13 = R1.get$col2().get$x();
  if (t13 !== (t13 | 0))
    return this.edgeSeparation$5$bailout(15, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, normal1x, t13, normal1Worldy);
  t13 = normal1Worldx * t13;
  t22 = R1.get$col2().get$y();
  if (t22 !== (t22 | 0))
    return this.edgeSeparation$5$bailout(16, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, normal1x, t13, t22, normal1Worldy);
  normal1y = t13 + normal1Worldy * t22;
  for (index = 0, minDot = 99999999999999, i = 0; i < count2; ++i) {
    if (i >= vertices2.length)
      throw $.ioore(i);
    a = vertices2[i];
    t1 = a.get$x();
    if (t1 !== (t1 | 0))
      return this.edgeSeparation$5$bailout(17, xf1, edge1, xf2, index, minDot, i, R1, normal1Worldx, vertices2, R, vertices1, count2, normal1x, a, t1, normal1y, normal1Worldy);
    t1 *= normal1x;
    t3 = a.get$y();
    if (t3 !== (t3 | 0))
      return this.edgeSeparation$5$bailout(18, xf1, edge1, xf2, index, minDot, i, R1, normal1Worldx, vertices2, R, vertices1, count2, normal1x, normal1Worldy, normal1y, t1, t3);
    dot = t1 + t3 * normal1y;
    if (dot < minDot) {
      minDot = dot;
      index = i;
    }
  }
  if (edge1 >= vertices1.length)
    throw $.ioore(edge1);
  v3 = vertices1[edge1];
  t1 = xf1.get$position().get$y();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(19, xf1, v3, xf2, t1, index, normal1Worldx, R1, vertices2, normal1Worldy, R);
  t3 = R.get$col1().get$y();
  if (typeof t3 !== 'number')
    return this.edgeSeparation$5$bailout(20, xf1, v3, xf2, t1, index, normal1Worldx, R1, t3, vertices2, normal1Worldy, R);
  t5 = v3.get$x();
  if (typeof t5 !== 'number')
    return this.edgeSeparation$5$bailout(21, xf1, xf2, index, normal1Worldx, R1, vertices2, R, v3, t1, t3, t5, normal1Worldy);
  t1 += t3 * t5;
  t7 = R.get$col2().get$y();
  if (typeof t7 !== 'number')
    return this.edgeSeparation$5$bailout(22, t7, xf1, v3, xf2, index, normal1Worldx, R1, vertices2, normal1Worldy, R, t1);
  t9 = v3.get$y();
  if (typeof t9 !== 'number')
    return this.edgeSeparation$5$bailout(23, xf1, xf2, index, normal1Worldx, R1, vertices2, R, v3, normal1Worldy, t1, t7, t9);
  v1y = t1 + t7 * t9;
  t1 = xf1.get$position().get$x();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(24, v1y, v3, xf2, t1, index, normal1Worldx, R1, vertices2, normal1Worldy, R);
  t12 = R.get$col1().get$x();
  if (typeof t12 !== 'number')
    return this.edgeSeparation$5$bailout(25, v1y, v3, xf2, t1, index, normal1Worldx, R1, t12, vertices2, normal1Worldy, R);
  t14 = v3.get$x();
  if (typeof t14 !== 'number')
    return this.edgeSeparation$5$bailout(26, v1y, xf2, t1, index, normal1Worldx, R1, t12, t14, vertices2, R, v3, normal1Worldy);
  t1 += t12 * t14;
  t16 = R.get$col2().get$x();
  if (typeof t16 !== 'number')
    return this.edgeSeparation$5$bailout(27, v1y, v3, xf2, index, normal1Worldx, R1, normal1Worldy, vertices2, t16, t1);
  t18 = v3.get$y();
  if (typeof t18 !== 'number')
    return this.edgeSeparation$5$bailout(28, v1y, xf2, index, normal1Worldx, R1, normal1Worldy, vertices2, t16, t1, t18);
  v1x = t1 + t16 * t18;
  if (index < 0 || index >= vertices2.length)
    throw $.ioore(index);
  v4 = vertices2[index];
  t1 = xf2.get$position().get$y();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(29, v1x, v1y, v4, xf2, t1, normal1Worldx, R1, normal1Worldy);
  t21 = R1.get$col1().get$y();
  if (typeof t21 !== 'number')
    return this.edgeSeparation$5$bailout(30, v1x, v1y, v4, xf2, t1, normal1Worldx, R1, t21, normal1Worldy);
  t23 = v4.get$x();
  if (typeof t23 !== 'number')
    return this.edgeSeparation$5$bailout(31, v1x, v1y, v4, xf2, t1, normal1Worldx, R1, t21, t23, normal1Worldy);
  t1 += t21 * t23;
  t25 = R1.get$col2().get$y();
  if (typeof t25 !== 'number')
    return this.edgeSeparation$5$bailout(32, v1x, v1y, v4, xf2, normal1Worldx, R1, normal1Worldy, t1, t25);
  t27 = v4.get$y();
  if (typeof t27 !== 'number')
    return this.edgeSeparation$5$bailout(33, t27, v1x, v1y, v4, xf2, normal1Worldx, R1, normal1Worldy, t1, t25);
  v2y = t1 + t25 * t27 - v1y;
  t29 = xf2.get$position().get$x();
  if (typeof t29 !== 'number')
    return this.edgeSeparation$5$bailout(34, v1x, v4, v2y, normal1Worldx, R1, t29, normal1Worldy);
  t31 = R1.get$col1().get$x();
  if (typeof t31 !== 'number')
    return this.edgeSeparation$5$bailout(35, v1x, v4, v2y, normal1Worldx, R1, t29, t31, normal1Worldy);
  t33 = v4.get$x();
  if (typeof t33 !== 'number')
    return this.edgeSeparation$5$bailout(36, v1x, v4, v2y, normal1Worldx, R1, t29, t31, normal1Worldy, t33);
  t29 += t31 * t33;
  t35 = R1.get$col2().get$x();
  if (typeof t35 !== 'number')
    return this.edgeSeparation$5$bailout(37, t35, v1x, v4, v2y, normal1Worldx, normal1Worldy, t29);
  t37 = v4.get$y();
  if (typeof t37 !== 'number')
    return this.edgeSeparation$5$bailout(38, t35, v1x, t37, v2y, normal1Worldx, normal1Worldy, t29);
  return (t29 + t35 * t37 - v1x) * normal1Worldx + v2y * normal1Worldy;
},
 edgeSeparation$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16) {
  switch (state0) {
    case 1:
      vertices1 = env5;
      xf2 = env4;
      poly2 = env3;
      edge1 = env2;
      xf1 = env1;
      poly1 = env0;
      break;
    case 2:
      normals1 = env5;
      vertices1 = env4;
      xf2 = env3;
      poly2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 3:
      count2 = env6;
      normals1 = env5;
      vertices1 = env4;
      xf2 = env3;
      poly2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 4:
      vertices2 = env6;
      count2 = env5;
      normals1 = env4;
      vertices1 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 5:
      v = env8;
      R = env7;
      vertices2 = env6;
      count2 = env5;
      vertices1 = env4;
      t5 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 6:
      v = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      t5 = env4;
      xf2 = env3;
      t7 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 7:
      v = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      t5 = env4;
      t7 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 8:
      v = env10;
      R = env9;
      vertices2 = env8;
      count2 = env7;
      vertices1 = env6;
      t10 = env5;
      t5 = env4;
      t7 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 9:
      v = env9;
      t7 = env8;
      R = env7;
      normal1Worldy = env6;
      vertices2 = env5;
      count2 = env4;
      vertices1 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 10:
      v = env10;
      t7 = env9;
      R = env8;
      normal1Worldy = env7;
      vertices2 = env6;
      count2 = env5;
      vertices1 = env4;
      xf2 = env3;
      t13 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 11:
      v = env10;
      R = env9;
      normal1Worldy = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      xf2 = env4;
      t7 = env3;
      edge1 = env2;
      xf1 = env1;
      t13 = env0;
      break;
    case 12:
      R = env10;
      normal1Worldy = env9;
      vertices2 = env8;
      count2 = env7;
      vertices1 = env6;
      t16 = env5;
      xf2 = env4;
      t7 = env3;
      edge1 = env2;
      xf1 = env1;
      t13 = env0;
      break;
    case 13:
      R = env10;
      normal1Worldy = env9;
      vertices2 = env8;
      count2 = env7;
      vertices1 = env6;
      R1 = env5;
      normal1Worldx = env4;
      xf2 = env3;
      edge1 = env2;
      xf1 = env1;
      t13 = env0;
      break;
    case 14:
      normal1Worldy = env11;
      t19 = env10;
      R = env9;
      t13 = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 15:
      normal1Worldy = env11;
      t13 = env10;
      normal1x = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 16:
      normal1Worldy = env12;
      t22 = env11;
      t13 = env10;
      normal1x = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 17:
      normal1Worldy = env16;
      normal1y = env15;
      t1 = env14;
      a = env13;
      normal1x = env12;
      count2 = env11;
      vertices1 = env10;
      R = env9;
      vertices2 = env8;
      normal1Worldx = env7;
      R1 = env6;
      i = env5;
      minDot = env4;
      index = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 18:
      t3 = env16;
      t1 = env15;
      normal1y = env14;
      normal1Worldy = env13;
      normal1x = env12;
      count2 = env11;
      vertices1 = env10;
      R = env9;
      vertices2 = env8;
      normal1Worldx = env7;
      R1 = env6;
      i = env5;
      minDot = env4;
      index = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 19:
      R = env9;
      normal1Worldy = env8;
      vertices2 = env7;
      R1 = env6;
      normal1Worldx = env5;
      index = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      xf1 = env0;
      break;
    case 20:
      R = env10;
      normal1Worldy = env9;
      vertices2 = env8;
      t3 = env7;
      R1 = env6;
      normal1Worldx = env5;
      index = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      xf1 = env0;
      break;
    case 21:
      normal1Worldy = env11;
      t5 = env10;
      t3 = env9;
      t1 = env8;
      v3 = env7;
      R = env6;
      vertices2 = env5;
      R1 = env4;
      normal1Worldx = env3;
      index = env2;
      xf2 = env1;
      xf1 = env0;
      break;
    case 22:
      t1 = env10;
      R = env9;
      normal1Worldy = env8;
      vertices2 = env7;
      R1 = env6;
      normal1Worldx = env5;
      index = env4;
      xf2 = env3;
      v3 = env2;
      xf1 = env1;
      t7 = env0;
      break;
    case 23:
      t9 = env11;
      t7 = env10;
      t1 = env9;
      normal1Worldy = env8;
      v3 = env7;
      R = env6;
      vertices2 = env5;
      R1 = env4;
      normal1Worldx = env3;
      index = env2;
      xf2 = env1;
      xf1 = env0;
      break;
    case 24:
      R = env9;
      normal1Worldy = env8;
      vertices2 = env7;
      R1 = env6;
      normal1Worldx = env5;
      index = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      v1y = env0;
      break;
    case 25:
      R = env10;
      normal1Worldy = env9;
      vertices2 = env8;
      t12 = env7;
      R1 = env6;
      normal1Worldx = env5;
      index = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      v1y = env0;
      break;
    case 26:
      normal1Worldy = env11;
      v3 = env10;
      R = env9;
      vertices2 = env8;
      t14 = env7;
      t12 = env6;
      R1 = env5;
      normal1Worldx = env4;
      index = env3;
      t1 = env2;
      xf2 = env1;
      v1y = env0;
      break;
    case 27:
      t1 = env9;
      t16 = env8;
      vertices2 = env7;
      normal1Worldy = env6;
      R1 = env5;
      normal1Worldx = env4;
      index = env3;
      xf2 = env2;
      v3 = env1;
      v1y = env0;
      break;
    case 28:
      t18 = env9;
      t1 = env8;
      t16 = env7;
      vertices2 = env6;
      normal1Worldy = env5;
      R1 = env4;
      normal1Worldx = env3;
      index = env2;
      xf2 = env1;
      v1y = env0;
      break;
    case 29:
      normal1Worldy = env7;
      R1 = env6;
      normal1Worldx = env5;
      t1 = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 30:
      normal1Worldy = env8;
      t21 = env7;
      R1 = env6;
      normal1Worldx = env5;
      t1 = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 31:
      normal1Worldy = env9;
      t23 = env8;
      t21 = env7;
      R1 = env6;
      normal1Worldx = env5;
      t1 = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 32:
      t25 = env8;
      t1 = env7;
      normal1Worldy = env6;
      R1 = env5;
      normal1Worldx = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 33:
      t25 = env9;
      t1 = env8;
      normal1Worldy = env7;
      R1 = env6;
      normal1Worldx = env5;
      xf2 = env4;
      v4 = env3;
      v1y = env2;
      v1x = env1;
      t27 = env0;
      break;
    case 34:
      normal1Worldy = env6;
      t29 = env5;
      R1 = env4;
      normal1Worldx = env3;
      v2y = env2;
      v4 = env1;
      v1x = env0;
      break;
    case 35:
      normal1Worldy = env7;
      t31 = env6;
      t29 = env5;
      R1 = env4;
      normal1Worldx = env3;
      v2y = env2;
      v4 = env1;
      v1x = env0;
      break;
    case 36:
      t33 = env8;
      normal1Worldy = env7;
      t31 = env6;
      t29 = env5;
      R1 = env4;
      normal1Worldx = env3;
      v2y = env2;
      v4 = env1;
      v1x = env0;
      break;
    case 37:
      t29 = env6;
      normal1Worldy = env5;
      normal1Worldx = env4;
      v2y = env3;
      v4 = env2;
      v1x = env1;
      t35 = env0;
      break;
    case 38:
      t29 = env6;
      normal1Worldy = env5;
      normal1Worldx = env4;
      v2y = env3;
      t37 = env2;
      v1x = env1;
      t35 = env0;
      break;
  }
  switch (state0) {
    case 0:
      poly1.get$vertexCount();
      vertices1 = poly1.get$vertices();
    case 1:
      state0 = 0;
      normals1 = poly1.get$normals();
    case 2:
      state0 = 0;
      count2 = poly2.get$vertexCount();
    case 3:
      state0 = 0;
      vertices2 = poly2.get$vertices();
    case 4:
      state0 = 0;
      R = xf1.get$rotation();
      v = $.index(normals1, edge1);
      t5 = R.get$col1().get$y();
    case 5:
      state0 = 0;
      t7 = v.get$x();
    case 6:
      state0 = 0;
      t7 = $.mul(t5, t7);
      t5 = R.get$col2().get$y();
    case 7:
      state0 = 0;
      t10 = v.get$y();
    case 8:
      state0 = 0;
      normal1Worldy = $.add(t7, $.mul(t5, t10));
      t7 = R.get$col1().get$x();
    case 9:
      state0 = 0;
      t13 = v.get$x();
    case 10:
      state0 = 0;
      t13 = $.mul(t7, t13);
      t7 = R.get$col2().get$x();
    case 11:
      state0 = 0;
      t16 = v.get$y();
    case 12:
      state0 = 0;
      normal1Worldx = $.add(t13, $.mul(t7, t16));
      R1 = xf2.get$rotation();
      t13 = R1.get$col1().get$x();
    case 13:
      state0 = 0;
      t13 = $.mul(normal1Worldx, t13);
      t19 = R1.get$col1().get$y();
    case 14:
      state0 = 0;
      normal1x = $.add(t13, $.mul(normal1Worldy, t19));
      t13 = R1.get$col2().get$x();
    case 15:
      state0 = 0;
      t13 = $.mul(normal1Worldx, t13);
      t22 = R1.get$col2().get$y();
    case 16:
      state0 = 0;
      normal1y = $.add(t13, $.mul(normal1Worldy, t22));
      index = 0;
      minDot = 99999999999999;
      i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, count2))
                break L0;
              a = $.index(vertices2, i);
              t1 = a.get$x();
            case 17:
              state0 = 0;
              t1 = $.mul(t1, normal1x);
              t3 = a.get$y();
            case 18:
              state0 = 0;
              dot = $.add(t1, $.mul(t3, normal1y));
              if ($.ltB(dot, minDot)) {
                minDot = dot;
                index = i;
              }
              ++i;
          }
      v3 = $.index(vertices1, edge1);
      t1 = xf1.get$position().get$y();
    case 19:
      state0 = 0;
      t3 = R.get$col1().get$y();
    case 20:
      state0 = 0;
      t5 = v3.get$x();
    case 21:
      state0 = 0;
      t1 = $.add(t1, $.mul(t3, t5));
      t7 = R.get$col2().get$y();
    case 22:
      state0 = 0;
      t9 = v3.get$y();
    case 23:
      state0 = 0;
      v1y = $.add(t1, $.mul(t7, t9));
      t1 = xf1.get$position().get$x();
    case 24:
      state0 = 0;
      t12 = R.get$col1().get$x();
    case 25:
      state0 = 0;
      t14 = v3.get$x();
    case 26:
      state0 = 0;
      t1 = $.add(t1, $.mul(t12, t14));
      t16 = R.get$col2().get$x();
    case 27:
      state0 = 0;
      t18 = v3.get$y();
    case 28:
      state0 = 0;
      v1x = $.add(t1, $.mul(t16, t18));
      v4 = $.index(vertices2, index);
      t1 = xf2.get$position().get$y();
    case 29:
      state0 = 0;
      t21 = R1.get$col1().get$y();
    case 30:
      state0 = 0;
      t23 = v4.get$x();
    case 31:
      state0 = 0;
      t1 = $.add(t1, $.mul(t21, t23));
      t25 = R1.get$col2().get$y();
    case 32:
      state0 = 0;
      t27 = v4.get$y();
    case 33:
      state0 = 0;
      v2y = $.sub($.add(t1, $.mul(t25, t27)), v1y);
      t29 = xf2.get$position().get$x();
    case 34:
      state0 = 0;
      t31 = R1.get$col1().get$x();
    case 35:
      state0 = 0;
      t33 = v4.get$x();
    case 36:
      state0 = 0;
      t29 = $.add(t29, $.mul(t31, t33));
      t35 = R1.get$col2().get$x();
    case 37:
      state0 = 0;
      t37 = v4.get$y();
    case 38:
      var vertices1, xf2, poly2, edge1, xf1, poly1, normals1, count2, vertices2, R, v, t5, t7, t10, normal1Worldy, t13, t16, normal1Worldx, R1, t19, normal1x, t22, normal1y, index, minDot, i, a, t1, t3, dot, v3, t9, v1y, t12, t14, t18, v1x, v4, t21, t23, t25, t27, v2y, t29, t31, t33, t35, t37;
      state0 = 0;
      return $.add($.mul($.sub($.add(t29, $.mul(t35, t37)), v1x), normal1Worldx), $.mul(v2y, normal1Worldy));
  }
},
 findMaxSeparation$5: function(results, poly1, xf1, poly2, xf2) {
  var count1, normals1, v, predy, predx, v1, tempy, dx, dy, R, dLocal1x, dLocal1y, edge, maxDot, i, norm, dot, s, prevEdge, sPrev, nextEdge, sNext, bestSeparation, bestEdge, increment, t1, edge0;
  count1 = poly1.get$vertexCount();
  if (typeof count1 !== 'number')
    return this.findMaxSeparation$5$bailout(1, results, poly1, xf1, poly2, xf2, count1);
  normals1 = poly1.get$normals();
  if (typeof normals1 !== 'string' && (typeof normals1 !== 'object' || normals1 === null || normals1.constructor !== Array && !normals1.is$JavaScriptIndexingBehavior()))
    return this.findMaxSeparation$5$bailout(2, results, poly1, xf1, poly2, xf2, count1, normals1);
  v = poly2.get$centroid();
  predy = $.add($.add(xf2.get$position().get$y(), $.mul(xf2.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$y(), v.get$y()));
  predx = $.add($.add(xf2.get$position().get$x(), $.mul(xf2.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$x(), v.get$y()));
  v1 = poly1.get$centroid();
  tempy = $.add($.add(xf1.get$position().get$y(), $.mul(xf1.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$y(), v1.get$y()));
  dx = $.sub(predx, $.add($.add(xf1.get$position().get$x(), $.mul(xf1.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$x(), v1.get$y())));
  dy = $.sub(predy, tempy);
  R = xf1.get$rotation();
  dLocal1x = $.add($.mul(dx, R.get$col1().get$x()), $.mul(dy, R.get$col1().get$y()));
  if (typeof dLocal1x !== 'number')
    return this.findMaxSeparation$5$bailout(3, results, dLocal1x, poly1, xf1, poly2, xf2, dy, count1, normals1, dx, R);
  dLocal1y = $.add($.mul(dx, R.get$col2().get$x()), $.mul(dy, R.get$col2().get$y()));
  if (typeof dLocal1y !== 'number')
    return this.findMaxSeparation$5$bailout(4, results, dLocal1x, poly1, xf1, poly2, xf2, count1, normals1, dLocal1y);
  for (edge = 0, maxDot = 1e-12, i = 0; i < count1; ++i) {
    if (i >= normals1.length)
      throw $.ioore(i);
    norm = normals1[i];
    dot = $.add($.mul(norm.get$x(), dLocal1x), $.mul(norm.get$y(), dLocal1y));
    if ($.gtB(dot, maxDot)) {
      maxDot = dot;
      edge = i;
    }
  }
  s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
  prevEdge = edge - 1;
  prevEdge = prevEdge >= 0 ? prevEdge : count1 - 1;
  sPrev = this.edgeSeparation$5(poly1, xf1, prevEdge, poly2, xf2);
  nextEdge = edge + 1;
  nextEdge = nextEdge < count1 ? nextEdge : 0;
  sNext = this.edgeSeparation$5(poly1, xf1, nextEdge, poly2, xf2);
  if ($.gtB(sPrev, s) && $.gtB(sPrev, sNext)) {
    bestSeparation = sPrev;
    bestEdge = prevEdge;
    increment = -1;
  } else {
    if ($.gtB(sNext, s))
      ;
    else {
      results.edgeIndex = edge;
      results.separation = s;
      return;
    }
    bestSeparation = sNext;
    bestEdge = nextEdge;
    increment = 1;
  }
  if (typeof bestSeparation !== 'number')
    return this.findMaxSeparation$5$bailout(5, results, poly1, xf1, poly2, xf2, increment, count1, bestEdge, bestSeparation);
  for (t1 = increment === -1, edge = count1 - 1; true; bestSeparation = s, bestEdge = edge0) {
    if (t1) {
      edge0 = bestEdge - 1;
      edge0 = edge0 >= 0 ? edge0 : edge;
    } else {
      edge0 = bestEdge + 1;
      edge0 = edge0 < count1 ? edge0 : 0;
    }
    s = this.edgeSeparation$5(poly1, xf1, edge0, poly2, xf2);
    if ($.gtB(s, bestSeparation))
      ;
    else
      break;
  }
  results.edgeIndex = bestEdge;
  results.separation = bestSeparation;
},
 findMaxSeparation$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      count1 = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      poly1 = env1;
      results = env0;
      break;
    case 2:
      normals1 = env6;
      count1 = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      poly1 = env1;
      results = env0;
      break;
    case 3:
      R = env10;
      dx = env9;
      normals1 = env8;
      count1 = env7;
      dy = env6;
      xf2 = env5;
      poly2 = env4;
      xf1 = env3;
      poly1 = env2;
      dLocal1x = env1;
      results = env0;
      break;
    case 4:
      dLocal1y = env8;
      normals1 = env7;
      count1 = env6;
      xf2 = env5;
      poly2 = env4;
      xf1 = env3;
      poly1 = env2;
      dLocal1x = env1;
      results = env0;
      break;
    case 5:
      bestSeparation = env8;
      bestEdge = env7;
      count1 = env6;
      increment = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      poly1 = env1;
      results = env0;
      break;
  }
  switch (state0) {
    case 0:
      count1 = poly1.get$vertexCount();
    case 1:
      state0 = 0;
      normals1 = poly1.get$normals();
    case 2:
      state0 = 0;
      v = poly2.get$centroid();
      predy = $.add($.add(xf2.get$position().get$y(), $.mul(xf2.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$y(), v.get$y()));
      predx = $.add($.add(xf2.get$position().get$x(), $.mul(xf2.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$x(), v.get$y()));
      v1 = poly1.get$centroid();
      tempy = $.add($.add(xf1.get$position().get$y(), $.mul(xf1.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$y(), v1.get$y()));
      dx = $.sub(predx, $.add($.add(xf1.get$position().get$x(), $.mul(xf1.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$x(), v1.get$y())));
      dy = $.sub(predy, tempy);
      R = xf1.get$rotation();
      dLocal1x = $.add($.mul(dx, R.get$col1().get$x()), $.mul(dy, R.get$col1().get$y()));
    case 3:
      state0 = 0;
      dLocal1y = $.add($.mul(dx, R.get$col2().get$x()), $.mul(dy, R.get$col2().get$y()));
    case 4:
      state0 = 0;
      for (edge = 0, maxDot = 1e-12, i = 0; $.ltB(i, count1); ++i) {
        norm = $.index(normals1, i);
        dot = $.add($.mul(norm.get$x(), dLocal1x), $.mul(norm.get$y(), dLocal1y));
        if ($.gtB(dot, maxDot)) {
          maxDot = dot;
          edge = i;
        }
      }
      s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
      prevEdge = edge - 1;
      prevEdge = prevEdge >= 0 ? prevEdge : $.sub(count1, 1);
      sPrev = this.edgeSeparation$5(poly1, xf1, prevEdge, poly2, xf2);
      nextEdge = edge + 1;
      nextEdge = $.ltB(nextEdge, count1) ? nextEdge : 0;
      sNext = this.edgeSeparation$5(poly1, xf1, nextEdge, poly2, xf2);
      if ($.gtB(sPrev, s) && $.gtB(sPrev, sNext)) {
        bestSeparation = sPrev;
        bestEdge = prevEdge;
        increment = -1;
      } else {
        if ($.gtB(sNext, s))
          ;
        else {
          results.edgeIndex = edge;
          results.separation = s;
          return;
        }
        bestSeparation = sNext;
        bestEdge = nextEdge;
        increment = 1;
      }
    case 5:
      var count1, xf2, poly2, xf1, poly1, results, normals1, v, predy, predx, v1, tempy, dx, dy, R, dLocal1x, dLocal1y, edge, maxDot, i, norm, dot, s, prevEdge, sPrev, nextEdge, sNext, bestSeparation, bestEdge, increment, t1;
      state0 = 0;
      for (t1 = increment === -1; true; bestSeparation = s, bestEdge = edge) {
        if (t1)
          edge = $.geB($.sub(bestEdge, 1), 0) ? $.sub(bestEdge, 1) : $.sub(count1, 1);
        else
          edge = $.ltB($.add(bestEdge, 1), count1) ? $.add(bestEdge, 1) : 0;
        s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
        if ($.gtB(s, bestSeparation))
          ;
        else
          break;
      }
      results.edgeIndex = bestEdge;
      results.separation = bestSeparation;
  }
},
 findIncidentEdge$6: function(c, poly1, xf1, edge1, poly2, xf2) {
  var normals1, count2, vertices2, normals2, t3, t4, t5, index, minDot, i, t1, dot, i2;
  poly1.get$vertexCount();
  normals1 = poly1.get$normals();
  count2 = poly2.get$vertexCount();
  if (typeof count2 !== 'number')
    return this.findIncidentEdge$6$bailout(1, c, xf1, edge1, poly2, xf2, normals1, count2);
  vertices2 = poly2.get$vertices();
  normals2 = poly2.get$normals();
  if (typeof normals2 !== 'string' && (typeof normals2 !== 'object' || normals2 === null || normals2.constructor !== Array && !normals2.is$JavaScriptIndexingBehavior()))
    return this.findIncidentEdge$6$bailout(2, c, xf1, edge1, xf2, normals1, count2, vertices2, normals2);
  t3 = xf1.get$rotation();
  t4 = $.index(normals1, edge1);
  t5 = this.normal1;
  $.Matrix22_mulMatrixAndVectorToOut(t3, t4, t5);
  $.Matrix22_mulTransMatrixAndVectorToOut(xf2.get$rotation(), t5, t5);
  for (index = 0, minDot = 99999999999999, i = 0; i < count2; ++i) {
    if (i >= normals2.length)
      throw $.ioore(i);
    t1 = normals2[i];
    dot = $.add($.mul(t5.x, t1.get$x()), $.mul(t5.y, t1.get$y()));
    if ($.ltB(dot, minDot)) {
      minDot = dot;
      index = i;
    }
  }
  i2 = index + 1;
  i2 = i2 < count2 ? i2 : 0;
  $.Transform_mulToOut(xf2, $.index(vertices2, index), $.index(c, 0).get$v());
  $.index(c, 0).get$id().get$features().set$referenceEdge(edge1);
  $.index(c, 0).get$id().get$features().set$incidentEdge(index);
  $.index(c, 0).get$id().get$features().set$incidentVertex(0);
  $.Transform_mulToOut(xf2, $.index(vertices2, i2), $.index(c, 1).get$v());
  $.index(c, 1).get$id().get$features().set$referenceEdge(edge1);
  $.index(c, 1).get$id().get$features().set$incidentEdge(i2);
  $.index(c, 1).get$id().get$features().set$incidentVertex(1);
},
 findIncidentEdge$6$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      count2 = env6;
      normals1 = env5;
      xf2 = env4;
      poly2 = env3;
      edge1 = env2;
      xf1 = env1;
      c = env0;
      break;
    case 2:
      normals2 = env7;
      vertices2 = env6;
      count2 = env5;
      normals1 = env4;
      xf2 = env3;
      edge1 = env2;
      xf1 = env1;
      c = env0;
      break;
  }
  switch (state0) {
    case 0:
      poly1.get$vertexCount();
      normals1 = poly1.get$normals();
      count2 = poly2.get$vertexCount();
    case 1:
      state0 = 0;
      vertices2 = poly2.get$vertices();
      normals2 = poly2.get$normals();
    case 2:
      var normals1, count2, xf2, poly2, edge1, xf1, c, vertices2, normals2, t3, t4, t5, index, minDot, i, t1, dot, i2;
      state0 = 0;
      t3 = xf1.get$rotation();
      t4 = $.index(normals1, edge1);
      t5 = this.normal1;
      $.Matrix22_mulMatrixAndVectorToOut(t3, t4, t5);
      $.Matrix22_mulTransMatrixAndVectorToOut(xf2.get$rotation(), t5, t5);
      for (index = 0, minDot = 99999999999999, i = 0; $.ltB(i, count2); ++i) {
        t1 = $.index(normals2, i);
        dot = $.add($.mul(t5.x, t1.get$x()), $.mul(t5.y, t1.get$y()));
        if ($.ltB(dot, minDot)) {
          minDot = dot;
          index = i;
        }
      }
      i2 = index + 1;
      i2 = $.ltB(i2, count2) ? i2 : 0;
      $.Transform_mulToOut(xf2, $.index(vertices2, index), $.index(c, 0).get$v());
      $.index(c, 0).get$id().get$features().set$referenceEdge(edge1);
      $.index(c, 0).get$id().get$features().set$incidentEdge(index);
      $.index(c, 0).get$id().get$features().set$incidentVertex(0);
      $.Transform_mulToOut(xf2, $.index(vertices2, i2), $.index(c, 1).get$v());
      $.index(c, 1).get$id().get$features().set$referenceEdge(edge1);
      $.index(c, 1).get$id().get$features().set$incidentEdge(i2);
      $.index(c, 1).get$id().get$features().set$incidentVertex(1);
  }
},
 collidePolygons$5: function(manifold, polyA, xfA, polyB, xfB) {
  var totalRadius, t2, t1, t3, t4, edge1, xf2, xf1, poly2, poly1, flip, count1, vertices1, t5, t6, t7, t8, frontOffset, sideOffset1, sideOffset2, t9, np, pointCount, i, cp;
  manifold.set$pointCount(0);
  totalRadius = $.add(polyA.get$radius(), polyB.get$radius());
  if (typeof totalRadius !== 'number')
    return this.collidePolygons$5$bailout(1, manifold, polyA, xfA, polyB, xfB, totalRadius);
  t2 = this.results1;
  this.findMaxSeparation$5(t2, polyA, xfA, polyB, xfB);
  if ($.gtB(t2.separation, totalRadius))
    return;
  t1 = this.results2;
  this.findMaxSeparation$5(t1, polyB, xfB, polyA, xfA);
  if ($.gtB(t1.separation, totalRadius))
    return;
  t3 = t1.separation;
  t4 = t2.separation;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  if ($.gtB(t3, 0.98 * t4 + 0.001)) {
    edge1 = t1.edgeIndex;
    manifold.set$type(2);
    xf2 = xfA;
    xf1 = xfB;
    poly2 = polyA;
    poly1 = polyB;
    flip = 1;
  } else {
    edge1 = t2.edgeIndex;
    manifold.set$type(1);
    xf2 = xfB;
    xf1 = xfA;
    poly2 = polyB;
    poly1 = polyA;
    flip = 0;
  }
  t1 = this.incidentEdge;
  this.findIncidentEdge$6(t1, poly1, xf1, edge1, poly2, xf2);
  count1 = poly1.get$vertexCount();
  vertices1 = poly1.get$vertices();
  t2 = this.v11;
  t2.setFrom$1($.index(vertices1, edge1));
  t3 = this.v12;
  t3.setFrom$1($.ltB($.add(edge1, 1), count1) ? $.index(vertices1, $.add(edge1, 1)) : $.index(vertices1, 0));
  t4 = this.localTangent;
  t4.setFrom$1(t3).subLocal$1(t2);
  t4.normalize$0();
  t5 = this.localNormal;
  $.Vector_crossVectorAndNumToOut(t4, 1, t5);
  t6 = this.planePoint;
  t6.setFrom$1(t2).addLocal$1(t3).mulLocal$1(0.5);
  t7 = xf1.get$rotation();
  t8 = this.tangent;
  $.Matrix22_mulMatrixAndVectorToOut(t7, t4, t8);
  t4 = this.normal;
  $.Vector_crossVectorAndNumToOut(t8, 1, t4);
  $.Transform_mulToOut(xf1, t2, t2);
  $.Transform_mulToOut(xf1, t3, t3);
  frontOffset = $.add($.mul(t4.x, t2.x), $.mul(t4.y, t2.y));
  if (typeof frontOffset !== 'number')
    return this.collidePolygons$5$bailout(2, xf2, manifold, flip, t4, t8, frontOffset, totalRadius, t1, t2, t3, t5, t6);
  sideOffset1 = $.add($.neg($.add($.mul(t8.x, t2.x), $.mul(t8.y, t2.y))), totalRadius);
  sideOffset2 = $.add($.add($.mul(t8.x, t3.x), $.mul(t8.y, t3.y)), totalRadius);
  t8.negateLocal$0();
  t9 = this.clipPoints1;
  np = $.Collision_clipSegmentToLine(t9, t1, t8, sideOffset1);
  t8.negateLocal$0();
  if (np < 2)
    return;
  t1 = this.clipPoints2;
  if ($.Collision_clipSegmentToLine(t1, t9, t8, sideOffset2) < 2)
    return;
  manifold.get$localNormal().setFrom$1(t5);
  manifold.get$localPoint().setFrom$1(t6);
  for (t2 = t1.length, pointCount = 0, i = 0; i < 2; ++i) {
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i].get$v();
    if ($.leB($.sub($.add($.mul(t4.x, t3.get$x()), $.mul(t4.y, t3.get$y())), frontOffset), totalRadius)) {
      cp = $.index(manifold.get$points(), pointCount);
      $.Transform_mulTransToOut(xf2, t1[i].get$v(), cp.get$localPoint());
      cp.get$id().setFrom$1(t1[i].get$id());
      cp.get$id().get$features().set$flip(flip);
      ++pointCount;
    }
  }
  manifold.set$pointCount(pointCount);
},
 collidePolygons$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state0) {
    case 1:
      totalRadius = env5;
      xfB = env4;
      polyB = env3;
      xfA = env2;
      polyA = env1;
      manifold = env0;
      break;
    case 2:
      t6 = env11;
      t5 = env10;
      t3 = env9;
      t2 = env8;
      t1 = env7;
      totalRadius = env6;
      frontOffset = env5;
      t8 = env4;
      t4 = env3;
      flip = env2;
      manifold = env1;
      xf2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      manifold.set$pointCount(0);
      totalRadius = $.add(polyA.get$radius(), polyB.get$radius());
    case 1:
      state0 = 0;
      t2 = this.results1;
      this.findMaxSeparation$5(t2, polyA, xfA, polyB, xfB);
      if ($.gtB(t2.separation, totalRadius))
        return;
      t1 = this.results2;
      this.findMaxSeparation$5(t1, polyB, xfB, polyA, xfA);
      if ($.gtB(t1.separation, totalRadius))
        return;
      t3 = t1.separation;
      t4 = t2.separation;
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      if ($.gtB(t3, 0.98 * t4 + 0.001)) {
        edge1 = t1.edgeIndex;
        manifold.set$type(2);
        xf2 = xfA;
        xf1 = xfB;
        poly2 = polyA;
        poly1 = polyB;
        flip = 1;
      } else {
        edge1 = t2.edgeIndex;
        manifold.set$type(1);
        xf2 = xfB;
        xf1 = xfA;
        poly2 = polyB;
        poly1 = polyA;
        flip = 0;
      }
      t1 = this.incidentEdge;
      this.findIncidentEdge$6(t1, poly1, xf1, edge1, poly2, xf2);
      count1 = poly1.get$vertexCount();
      vertices1 = poly1.get$vertices();
      t2 = this.v11;
      t2.setFrom$1($.index(vertices1, edge1));
      t3 = this.v12;
      t3.setFrom$1($.ltB($.add(edge1, 1), count1) ? $.index(vertices1, $.add(edge1, 1)) : $.index(vertices1, 0));
      t4 = this.localTangent;
      t4.setFrom$1(t3).subLocal$1(t2);
      t4.normalize$0();
      t5 = this.localNormal;
      $.Vector_crossVectorAndNumToOut(t4, 1, t5);
      t6 = this.planePoint;
      t6.setFrom$1(t2).addLocal$1(t3).mulLocal$1(0.5);
      t7 = xf1.get$rotation();
      t8 = this.tangent;
      $.Matrix22_mulMatrixAndVectorToOut(t7, t4, t8);
      t4 = this.normal;
      $.Vector_crossVectorAndNumToOut(t8, 1, t4);
      $.Transform_mulToOut(xf1, t2, t2);
      $.Transform_mulToOut(xf1, t3, t3);
      frontOffset = $.add($.mul(t4.x, t2.x), $.mul(t4.y, t2.y));
    case 2:
      var totalRadius, xfB, polyB, xfA, polyA, manifold, t2, t1, t3, t4, edge1, xf2, xf1, poly2, poly1, flip, count1, vertices1, t5, t6, t7, t8, frontOffset, sideOffset1, sideOffset2, t9, np, pointCount, i, cp;
      state0 = 0;
      sideOffset1 = $.add($.neg($.add($.mul(t8.x, t2.x), $.mul(t8.y, t2.y))), totalRadius);
      sideOffset2 = $.add($.add($.mul(t8.x, t3.x), $.mul(t8.y, t3.y)), totalRadius);
      t8.negateLocal$0();
      t9 = this.clipPoints1;
      np = $.Collision_clipSegmentToLine(t9, t1, t8, sideOffset1);
      t8.negateLocal$0();
      if (np < 2)
        return;
      t1 = this.clipPoints2;
      if ($.Collision_clipSegmentToLine(t1, t9, t8, sideOffset2) < 2)
        return;
      manifold.get$localNormal().setFrom$1(t5);
      manifold.get$localPoint().setFrom$1(t6);
      for (t2 = t1.length, pointCount = 0, i = 0; i < 2; ++i) {
        if (i >= t2)
          throw $.ioore(i);
        t3 = t1[i].get$v();
        if ($.leB($.sub($.add($.mul(t4.x, t3.get$x()), $.mul(t4.y, t3.get$y())), frontOffset), totalRadius)) {
          cp = $.index(manifold.get$points(), pointCount);
          $.Transform_mulTransToOut(xf2, t1[i].get$v(), cp.get$localPoint());
          cp.get$id().setFrom$1(t1[i].get$id());
          cp.get$id().get$features().set$flip(flip);
          ++pointCount;
        }
      }
      manifold.set$pointCount(pointCount);
  }
},
 Collision$_construct$1: function(pool) {
  var t1, t2, t3, t4;
  t1 = this.incidentEdge;
  $.indexSet(t1, 0, $.ClipVertex$());
  $.indexSet(t1, 1, $.ClipVertex$());
  t1 = this.clipPoints1;
  t2 = $.ClipVertex$();
  t3 = t1.length;
  if (0 >= t3)
    throw $.ioore(0);
  t1[0] = t2;
  t2 = $.ClipVertex$();
  if (1 >= t3)
    throw $.ioore(1);
  t1[1] = t2;
  t2 = this.clipPoints2;
  t1 = $.ClipVertex$();
  t4 = t2.length;
  if (0 >= t4)
    throw $.ioore(0);
  t2[0] = t1;
  t1 = $.ClipVertex$();
  if (1 >= t4)
    throw $.ioore(1);
  t2[1] = t1;
}
};

$$.ClipVertex = {"": ["v?", "id?"],
 "super": "Object",
 setFrom$1: function(cv) {
  this.v.setFrom$1(cv.get$v());
  this.id.setFrom$1(cv.get$id());
}
};

$$.EdgeResults = {"": ["separation", "edgeIndex"],
 "super": "Object"
};

$$.ContactID = {"": ["features?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eq(other.get$features(), this.features);
},
 setFrom$1: function(other) {
  this.features.setFrom$1(other.get$features());
},
 isEqual$1: function(other) {
  return $.eq(other.get$features(), this.features);
},
 zero$0: function() {
  this.features.zero$0();
}
};

$$.Distance = {"": ["calls", "iters", "maxIters", "simplex", "saveA", "saveB", "closestPoint", "searchDirection", "temp", "normal?"],
 "super": "Object",
 distance$3: function(output, cache, input) {
  var proxyA, proxyB, transformA, transformB, t1, vertices, t2, t3, t4, t5, t6, t7, t8, t9, iter, saveCount, i, t10, vertex, duplicate, rA, rB;
  this.calls = this.calls + 1;
  proxyA = input.get$proxyA();
  proxyB = input.get$proxyB();
  transformA = input.get$transformA();
  transformB = input.get$transformB();
  t1 = this.simplex;
  t1.readCache$5(cache, proxyA, transformA, proxyB, transformB);
  vertices = t1.vertices;
  t2 = this.closestPoint;
  t1.getClosestPoint$1(t2);
  t2.get$lengthSquared();
  for (t3 = this.saveB, t4 = t3.length, t5 = this.saveA, t6 = t5.length, t7 = vertices.length, t8 = this.searchDirection, t9 = this.temp, iter = 0; iter < this.maxIters;) {
    saveCount = t1.count;
    for (i = 0; $.ltB(i, saveCount); ++i) {
      if (i >= t7)
        throw $.ioore(i);
      t10 = vertices[i].get$indexA();
      if (i >= t6)
        throw $.ioore(i);
      t5[i] = t10;
      t10 = vertices[i].get$indexB();
      if (i >= t4)
        throw $.ioore(i);
      t3[i] = t10;
    }
    switch (t1.count) {
      case 1:
        break;
      case 2:
        t1.solve2$0();
        break;
      case 3:
        t1.solve3$0();
        break;
      default:
    }
    if ($.eqB(t1.count, 3))
      break;
    t1.getClosestPoint$1(t2);
    t2.get$lengthSquared();
    t1.getSearchDirection$1(t8);
    if ($.ltB(t8.get$lengthSquared(), 1.4208639999999999e-14))
      break;
    t10 = t1.count;
    if (t10 !== (t10 | 0))
      throw $.iae(t10);
    if (t10 < 0 || t10 >= t7)
      throw $.ioore(t10);
    vertex = vertices[t10];
    $.Matrix22_mulTransMatrixAndVectorToOut(transformA.get$rotation(), t8.negateLocal$0(), t9);
    vertex.set$indexA(proxyA.getSupport$1(t9));
    $.Transform_mulToOut(transformA, $.index(proxyA.get$vertices(), vertex.get$indexA()), vertex.get$wA());
    $.Matrix22_mulTransMatrixAndVectorToOut(transformB.get$rotation(), t8.negateLocal$0(), t9);
    vertex.set$indexB(proxyB.getSupport$1(t9));
    $.Transform_mulToOut(transformB, $.index(proxyB.get$vertices(), vertex.get$indexB()), vertex.get$wB());
    vertex.get$w().setFrom$1(vertex.get$wB()).subLocal$1(vertex.get$wA());
    ++iter;
    this.iters = this.iters + 1;
    for (i = 0; duplicate = false, $.ltB(i, saveCount); ++i) {
      t10 = vertex.get$indexA();
      if (i >= t6)
        throw $.ioore(i);
      if ($.eqB(t10, t5[i])) {
        t10 = vertex.get$indexB();
        if (i >= t4)
          throw $.ioore(i);
        t10 = $.eqB(t10, t3[i]);
      } else
        t10 = false;
      if (t10) {
        duplicate = true;
        break;
      }
    }
    if (duplicate)
      break;
    t1.count = $.add(t1.count, 1);
  }
  this.maxIters = $.max(this.maxIters, iter);
  t1.getWitnessPoints$2(output.get$pointA(), output.get$pointB());
  output.set$distance($.sqrt($.MathBox_distanceSquared(output.get$pointA(), output.get$pointB())));
  output.set$iterations(iter);
  t1.writeCache$1(cache);
  if (input.get$useRadii() === true) {
    rA = proxyA.get$radius();
    rB = proxyB.get$radius();
    if ($.gtB(output.get$distance(), $.add(rA, rB)) && $.gtB(output.get$distance(), 1.192e-7)) {
      output.set$distance($.sub(output.get$distance(), $.add(rA, rB)));
      this.normal.setFrom$1(output.get$pointB()).subLocal$1(output.get$pointA());
      this.normal.normalize$0();
      t9.setFrom$1(this.normal).mulLocal$1(rA);
      output.get$pointA().addLocal$1(t9);
      t9.setFrom$1(this.normal).mulLocal$1(rB);
      output.get$pointB().subLocal$1(t9);
    } else {
      output.get$pointA().addLocal$1(output.get$pointB()).mulLocal$1(0.5);
      output.get$pointB().setFrom$1(output.get$pointA());
      output.set$distance(0);
    }
  }
},
 get$distance: function() { return new $.BoundClosure1(this, 'distance$3'); }
};

$$.DistanceInput = {"": ["proxyA=", "proxyB=", "transformA?", "transformB?", "useRadii?"],
 "super": "Object"
};

$$.DistanceOutput = {"": ["pointA?", "pointB?", "distance=", "iterations!"],
 "super": "Object",
 distance$3: function(arg0, arg1, arg2) { return this.distance.call$3(arg0, arg1, arg2); }
};

$$.DistanceProxy = {"": ["vertices?", "count=", "radius="],
 "super": "Object",
 setFromShape$1: function(shape) {
  var t1, t2, i, t3, t4;
  t1 = shape.get$type();
  if (typeof t1 !== 'number')
    return this.setFromShape$1$bailout(1, shape, t1);
  if (t1 === 0) {
    t1 = this.vertices;
    if (0 >= t1.length)
      throw $.ioore(0);
    t1[0].setFrom$1(shape.get$position());
    this.count = 1;
    this.radius = shape.get$radius();
  } else {
    t1 = shape.get$type();
    if (typeof t1 !== 'number')
      return this.setFromShape$1$bailout(2, shape, t1);
    if (t1 === 1) {
      this.count = shape.get$vertexCount();
      this.radius = shape.get$radius();
      t1 = this.vertices;
      t2 = t1.length;
      i = 0;
      while (true) {
        t3 = this.count;
        if (typeof t3 !== 'number')
          return this.setFromShape$1$bailout(3, shape, i, t3, t1, t2);
        if (!(i < t3))
          break;
        if (i >= t2)
          throw $.ioore(i);
        t3 = t1[i];
        t4 = shape.get$vertices();
        if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
          return this.setFromShape$1$bailout(4, shape, i, t1, t2, t3, t4);
        if (i >= t4.length)
          throw $.ioore(i);
        t3.setFrom$1(t4[i]);
        ++i;
      }
    }
  }
},
 setFromShape$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env1;
      shape = env0;
      break;
    case 2:
      t1 = env1;
      shape = env0;
      break;
    case 3:
      t2 = env4;
      t1 = env3;
      t3 = env2;
      i = env1;
      shape = env0;
      break;
    case 4:
      t4 = env5;
      t3 = env4;
      t2 = env3;
      t1 = env2;
      i = env1;
      shape = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = shape.get$type();
    case 1:
      state0 = 0;
    default:
      var t1, shape, t2, i, t3, t4;
      if (state0 === 0 && $.eqB(t1, 0)) {
        t1 = this.vertices;
        if (0 >= t1.length)
          throw $.ioore(0);
        t1[0].setFrom$1(shape.get$position());
        this.count = 1;
        this.radius = shape.get$radius();
      } else
        switch (state0) {
          case 0:
            t1 = shape.get$type();
          case 2:
            state0 = 0;
          default:
            if (state0 === 4 || state0 === 3 || state0 === 0 && $.eqB(t1, 1))
              switch (state0) {
                case 0:
                  this.count = shape.get$vertexCount();
                  this.radius = shape.get$radius();
                  t1 = this.vertices;
                  t2 = t1.length;
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          t3 = this.count;
                        case 3:
                          state0 = 0;
                          if (!$.ltB(i, t3))
                            break L0;
                          if (i >= t2)
                            throw $.ioore(i);
                          t3 = t1[i];
                          t4 = shape.get$vertices();
                        case 4:
                          state0 = 0;
                          t3.setFrom$1($.index(t4, i));
                          ++i;
                      }
              }
        }
  }
},
 getSupport$1: function(direction) {
  var t1, t2, t3, t4, t6, t8, bestValue, i, bestIndex, value;
  t1 = this.vertices;
  t2 = t1.length;
  if (0 >= t2)
    throw $.ioore(0);
  t3 = t1[0];
  t4 = t3.get$x();
  if (typeof t4 !== 'number')
    return this.getSupport$1$bailout(1, direction, t4, t1, t2, t3);
  t6 = direction.x;
  if (typeof t6 !== 'number')
    return this.getSupport$1$bailout(2, direction, t2, t3, t4, t1, t6);
  t6 = t4 * t6;
  t3 = t3.get$y();
  if (typeof t3 !== 'number')
    return this.getSupport$1$bailout(3, direction, t6, t3, t2, t1);
  t8 = direction.y;
  if (typeof t8 !== 'number')
    return this.getSupport$1$bailout(4, direction, t2, t6, t3, t1, t8);
  bestValue = t6 + t3 * t8;
  i = 1;
  bestIndex = 0;
  while (true) {
    t3 = this.count;
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(5, direction, t3, t2, i, bestIndex, bestValue, t1);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    t4 = t3.get$x();
    if (typeof t4 !== 'number')
      return this.getSupport$1$bailout(6, direction, t3, t4, t2, i, bestIndex, bestValue, t1);
    t6 = direction.x;
    if (typeof t6 !== 'number')
      return this.getSupport$1$bailout(7, direction, t3, t4, t2, i, bestIndex, bestValue, t6, t1);
    t6 = t4 * t6;
    t3 = t3.get$y();
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(8, direction, t2, i, t6, t3, bestIndex, bestValue, t1);
    t8 = direction.y;
    if (typeof t8 !== 'number')
      return this.getSupport$1$bailout(9, direction, t2, i, t6, t3, bestIndex, bestValue, t8, t1);
    value = t6 + t3 * t8;
    if (value > bestValue) {
      bestValue = value;
      bestIndex = i;
    }
    ++i;
  }
  return bestIndex;
},
 getSupport$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      t3 = env4;
      t2 = env3;
      t1 = env2;
      t4 = env1;
      direction = env0;
      break;
    case 2:
      t6 = env5;
      t1 = env4;
      t4 = env3;
      t3 = env2;
      t2 = env1;
      direction = env0;
      break;
    case 3:
      t1 = env4;
      t2 = env3;
      t3 = env2;
      t6 = env1;
      direction = env0;
      break;
    case 4:
      t8 = env5;
      t1 = env4;
      t3 = env3;
      t6 = env2;
      t2 = env1;
      direction = env0;
      break;
    case 5:
      t1 = env6;
      bestValue = env5;
      bestIndex = env4;
      i = env3;
      t2 = env2;
      t3 = env1;
      direction = env0;
      break;
    case 6:
      t1 = env7;
      bestValue = env6;
      bestIndex = env5;
      i = env4;
      t2 = env3;
      t4 = env2;
      t3 = env1;
      direction = env0;
      break;
    case 7:
      t1 = env8;
      t6 = env7;
      bestValue = env6;
      bestIndex = env5;
      i = env4;
      t2 = env3;
      t4 = env2;
      t3 = env1;
      direction = env0;
      break;
    case 8:
      t1 = env7;
      bestValue = env6;
      bestIndex = env5;
      t3 = env4;
      t6 = env3;
      i = env2;
      t2 = env1;
      direction = env0;
      break;
    case 9:
      t1 = env8;
      t8 = env7;
      bestValue = env6;
      bestIndex = env5;
      t3 = env4;
      t6 = env3;
      i = env2;
      t2 = env1;
      direction = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
      t2 = t1.length;
      if (0 >= t2)
        throw $.ioore(0);
      t3 = t1[0];
      t4 = t3.get$x();
    case 1:
      state0 = 0;
      t6 = direction.x;
    case 2:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t3 = t3.get$y();
    case 3:
      state0 = 0;
      t8 = direction.y;
    case 4:
      state0 = 0;
      bestValue = $.add(t6, $.mul(t3, t8));
      i = 1;
      bestIndex = 0;
    default:
      var t1, t2, t3, t4, direction, t6, t8, bestValue, i, bestIndex, value;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = this.count;
            case 5:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              t4 = t3.get$x();
            case 6:
              state0 = 0;
              t6 = direction.x;
            case 7:
              state0 = 0;
              t6 = $.mul(t4, t6);
              t3 = t3.get$y();
            case 8:
              state0 = 0;
              t8 = direction.y;
            case 9:
              state0 = 0;
              value = $.add(t6, $.mul(t3, t8));
              if ($.gtB(value, bestValue)) {
                bestValue = value;
                bestIndex = i;
              }
              ++i;
          }
      return bestIndex;
  }
},
 DistanceProxy$0: function() {
  var t1, t2, i;
  for (t1 = this.vertices, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.Features = {"": ["referenceEdge=", "incidentEdge=", "incidentVertex=", "flip="],
 "super": "Object",
 setFrom$1: function(f) {
  this.referenceEdge = f.get$referenceEdge();
  this.incidentEdge = f.get$incidentEdge();
  this.incidentVertex = f.get$incidentVertex();
  this.flip = f.get$flip();
},
 operator$eq$1: function(other) {
  return $.eqB(this.referenceEdge, other.get$referenceEdge()) && $.eqB(this.incidentEdge, other.get$incidentEdge()) && $.eqB(this.incidentVertex, other.get$incidentVertex()) && $.eqB(this.flip, other.get$flip());
},
 toString$0: function() {
  return 'Features: (' + $.S(this.flip) + ', ' + $.S(this.incidentEdge) + ', ' + $.S(this.incidentVertex) + ' ' + $.S(this.referenceEdge) + ')';
},
 zero$0: function() {
  this.referenceEdge = 0;
  this.incidentEdge = 0;
  this.incidentVertex = 0;
  this.flip = 0;
}
};

$$.Manifold = {"": ["points?", "localNormal?", "localPoint?", "type=", "pointCount="],
 "super": "Object",
 setFrom$1: function(other) {
  var t1, t2, i, t3, t4;
  t1 = this.points;
  t2 = t1.length;
  i = 0;
  while (true) {
    t3 = other.get$pointCount();
    if (typeof t3 !== 'number')
      return this.setFrom$1$bailout(1, other, t1, i, t3, t2);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    t4 = other.get$points();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(2, other, t4, t1, i, t2, t3);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
    ++i;
  }
  this.type = other.get$type();
  this.localNormal.setFrom$1(other.get$localNormal());
  this.localPoint.setFrom$1(other.get$localPoint());
  this.pointCount = other.get$pointCount();
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t2 = env4;
      t3 = env3;
      i = env2;
      t1 = env1;
      other = env0;
      break;
    case 2:
      t3 = env5;
      t2 = env4;
      i = env3;
      t1 = env2;
      t4 = env1;
      other = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.points;
      t2 = t1.length;
      i = 0;
    default:
      var t1, t2, i, t3, other, t4;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = other.get$pointCount();
            case 1:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              t4 = other.get$points();
            case 2:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
      this.type = other.get$type();
      this.localNormal.setFrom$1(other.get$localNormal());
      this.localPoint.setFrom$1(other.get$localPoint());
      this.pointCount = other.get$pointCount();
  }
},
 Manifold$0: function() {
  var t1, t2, i, t3;
  for (t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    t3 = $.ManifoldPoint$();
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.ManifoldPoint = {"": ["localPoint?", "normalImpulse=", "tangentImpulse=", "id?"],
 "super": "Object",
 setFrom$1: function(other) {
  this.localPoint.setFrom$1(other.get$localPoint());
  this.normalImpulse = other.get$normalImpulse();
  this.tangentImpulse = other.get$tangentImpulse();
  this.id.setFrom$1(other.get$id());
}
};

$$.Simplex = {"": ["v1?", "v2?", "v3?", "vertices?", "count=", "e13", "e23", "e12", "case2", "case22", "case3", "case33"],
 "super": "Object",
 readCache$5: function(cache, proxyA, transformA, proxyB, transformB) {
  var t1, t2, i, v, wALocal, wBLocal, metric1, metric2;
  this.count = cache.get$count();
  for (t1 = this.vertices, t2 = t1.length, i = 0; $.ltB(i, this.count); ++i) {
    if (i >= t2)
      throw $.ioore(i);
    v = t1[i];
    v.set$indexA($.index(cache.get$indexA(), i));
    v.set$indexB($.index(cache.get$indexB(), i));
    wALocal = $.index(proxyA.get$vertices(), v.get$indexA());
    wBLocal = $.index(proxyB.get$vertices(), v.get$indexB());
    $.Transform_mulToOut(transformA, wALocal, v.get$wA());
    $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
    v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
    v.set$a(0);
  }
  if ($.gtB(this.count, 1)) {
    metric1 = cache.get$metric();
    metric2 = this.getMetric$0();
    if (typeof metric1 !== 'number')
      throw $.iae(metric1);
    if ($.ltB(metric2, 0.5 * metric1) || $.ltB(2 * metric1, metric2) || $.ltB(metric2, 1.192e-7))
      this.count = 0;
  }
  if ($.eqB(this.count, 0)) {
    if (0 >= t2)
      throw $.ioore(0);
    v = t1[0];
    v.set$indexA(0);
    v.set$indexB(0);
    wALocal = $.index(proxyA.get$vertices(), 0);
    wBLocal = $.index(proxyB.get$vertices(), 0);
    $.Transform_mulToOut(transformA, wALocal, v.get$wA());
    $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
    v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
    this.count = 1;
  }
},
 writeCache$1: function(cache) {
  var t1, t2, i, t3;
  cache.set$metric(this.getMetric$0());
  cache.set$count(this.count);
  for (t1 = this.vertices, t2 = t1.length, i = 0; $.ltB(i, this.count); ++i) {
    t3 = cache.get$indexA();
    if (i >= t2)
      throw $.ioore(i);
    $.indexSet(t3, i, t1[i].get$indexA());
    $.indexSet(cache.get$indexB(), i, t1[i].get$indexB());
  }
},
 getSearchDirection$1: function(out) {
  var t1, t2, t3;
  switch (this.count) {
    case 1:
      out.setFrom$1(this.v1.w).negateLocal$0();
      return;
    case 2:
      t1 = this.e12;
      t2 = t1.setFrom$1(this.v2.w);
      t3 = this.v1.w;
      t2.subLocal$1(t3);
      out.setFrom$1(t3).negateLocal$0();
      if ($.gtB($.sub($.mul(t1.x, out.y), $.mul(t1.y, out.x)), 0))
        $.Vector_crossNumAndVectorToOut(1, t1, out);
      else
        $.Vector_crossVectorAndNumToOut(t1, 1, out);
      break;
    default:
      out.setZero$0();
      return;
  }
},
 getClosestPoint$1: function(out) {
  var t1, t2, t3, t4;
  switch (this.count) {
    case 0:
      out.setZero$0();
      return;
    case 1:
      out.setFrom$1(this.v1.w);
      return;
    case 2:
      t1 = this.case22;
      t2 = this.v2;
      t1.setFrom$1(t2.w).mulLocal$1(t2.a);
      t3 = this.case2;
      t4 = this.v1;
      t3.setFrom$1(t4.w).mulLocal$1(t4.a).addLocal$1(t1);
      out.setFrom$1(t3);
      return;
    case 3:
      out.setZero$0();
      return;
    default:
      out.setZero$0();
      return;
  }
},
 getWitnessPoints$2: function(pA, pB) {
  var t1, t2, t3, t4, t5;
  switch (this.count) {
    case 0:
      break;
    case 1:
      t1 = this.v1;
      pA.setFrom$1(t1.wA);
      pB.setFrom$1(t1.wB);
      break;
    case 2:
      t1 = this.case2;
      t2 = this.v1;
      t1.setFrom$1(t2.wA).mulLocal$1(t2.a);
      t3 = this.v2;
      pA.setFrom$1(t3.wA).mulLocal$1(t3.a).addLocal$1(t1);
      t1.setFrom$1(t2.wB).mulLocal$1(t2.a);
      pB.setFrom$1(t3.wB).mulLocal$1(t3.a).addLocal$1(t1);
      break;
    case 3:
      t1 = this.v1;
      pA.setFrom$1(t1.wA).mulLocal$1(t1.a);
      t2 = this.case3;
      t3 = this.v2;
      t2.setFrom$1(t3.wA).mulLocal$1(t3.a);
      t4 = this.case33;
      t5 = this.v3;
      t4.setFrom$1(t5.wA).mulLocal$1(t5.a);
      pA.addLocal$1(t2).addLocal$1(t4);
      pB.setFrom$1(pA);
      break;
    default:
      break;
  }
},
 getMetric$0: function() {
  var t1, t2, t3;
  switch (this.count) {
    case 0:
      return 0;
    case 1:
      return 0;
    case 2:
      return $.sqrt($.MathBox_distanceSquared(this.v1.w, this.v2.w));
    case 3:
      t1 = this.case3;
      t2 = t1.setFrom$1(this.v2.w);
      t3 = this.v1.w;
      t2.subLocal$1(t3);
      t2 = this.case33;
      t2.setFrom$1(this.v3.w).subLocal$1(t3);
      return $.sub($.mul(t1.x, t2.y), $.mul(t1.y, t2.x));
    default:
      return 0;
  }
},
 solve2$0: function() {
  var t1, w1, t2, w2, t3, t4, t6, t9, d12_2, d12_1, inv_d12;
  t1 = this.v1;
  w1 = t1.w;
  t2 = this.v2;
  w2 = t2.w;
  t3 = this.e12;
  t3.setFrom$1(w2).subLocal$1(w1);
  t4 = w1.get$x();
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(1, t3, t4, t1, w1, t2, w2);
  t6 = t3.x;
  if (typeof t6 !== 'number')
    return this.solve2$0$bailout(2, t3, t6, t4, t1, w1, t2, w2);
  t6 = t4 * t6;
  t4 = w1.get$y();
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(3, t3, w2, t1, t2, t6, t4);
  t9 = t3.y;
  if (typeof t9 !== 'number')
    return this.solve2$0$bailout(4, t3, w2, t9, t1, t2, t6, t4);
  d12_2 = -(t6 + t4 * t9);
  if (d12_2 <= 0) {
    t1.a = 1;
    this.count = 1;
    return;
  }
  t4 = w2.get$x();
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(5, t4, d12_2, t1, t2, w2, t3);
  t6 = t3.x;
  if (typeof t6 !== 'number')
    return this.solve2$0$bailout(6, t4, d12_2, t6, t1, t2, w2, t3);
  t6 = t4 * t6;
  t4 = w2.get$y();
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(7, d12_2, t6, t4, t1, t2, t3);
  t3 = t3.y;
  if (typeof t3 !== 'number')
    return this.solve2$0$bailout(8, d12_2, t6, t4, t3, t1, t2);
  d12_1 = t6 + t4 * t3;
  if (d12_1 <= 0) {
    t2.a = 1;
    this.count = 1;
    t1.setFrom$1(t2);
    return;
  }
  inv_d12 = 1 / (d12_1 + d12_2);
  t1.a = d12_1 * inv_d12;
  t2.a = d12_2 * inv_d12;
  this.count = 2;
},
 solve2$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      t4 = env1;
      t3 = env0;
      break;
    case 2:
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      t4 = env2;
      t6 = env1;
      t3 = env0;
      break;
    case 3:
      t4 = env5;
      t6 = env4;
      t2 = env3;
      t1 = env2;
      w2 = env1;
      t3 = env0;
      break;
    case 4:
      t4 = env6;
      t6 = env5;
      t2 = env4;
      t1 = env3;
      t9 = env2;
      w2 = env1;
      t3 = env0;
      break;
    case 5:
      t3 = env5;
      w2 = env4;
      t2 = env3;
      t1 = env2;
      d12_2 = env1;
      t4 = env0;
      break;
    case 6:
      t3 = env6;
      w2 = env5;
      t2 = env4;
      t1 = env3;
      t6 = env2;
      d12_2 = env1;
      t4 = env0;
      break;
    case 7:
      t3 = env5;
      t2 = env4;
      t1 = env3;
      t4 = env2;
      t6 = env1;
      d12_2 = env0;
      break;
    case 8:
      t2 = env5;
      t1 = env4;
      t3 = env3;
      t4 = env2;
      t6 = env1;
      d12_2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.v1;
      w1 = t1.w;
      t2 = this.v2;
      w2 = t2.w;
      t3 = this.e12;
      t3.setFrom$1(w2).subLocal$1(w1);
      t4 = w1.get$x();
    case 1:
      state0 = 0;
      t6 = t3.x;
    case 2:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t4 = w1.get$y();
    case 3:
      state0 = 0;
      t9 = t3.y;
    case 4:
      state0 = 0;
      d12_2 = $.neg($.add(t6, $.mul(t4, t9)));
      if ($.leB(d12_2, 0)) {
        t1.a = 1;
        this.count = 1;
        return;
      }
      t4 = w2.get$x();
    case 5:
      state0 = 0;
      t6 = t3.x;
    case 6:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t4 = w2.get$y();
    case 7:
      state0 = 0;
      t3 = t3.y;
    case 8:
      var t1, w1, t2, w2, t3, t4, t6, t9, d12_2, d12_1, inv_d12;
      state0 = 0;
      d12_1 = $.add(t6, $.mul(t4, t3));
      if ($.leB(d12_1, 0)) {
        t2.a = 1;
        this.count = 1;
        t1.setFrom$1(t2);
        return;
      }
      t3 = $.add(d12_1, d12_2);
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      inv_d12 = 1 / t3;
      t1.a = $.mul(d12_1, inv_d12);
      t2.a = $.mul(d12_2, inv_d12);
      this.count = 2;
  }
},
 solve3$0: function() {
  var t1, w1, t2, w2, t3, w3, t4, t5, t7, t10, w1e12, t13, t16, w2e12, d12_2, t18, t20, t23, w1e13, t26, t29, w3e13, d13_2, t31, t33, t36, w2e23, t39, w3e23, d23_2, t44, n123, t48, t51, d123_1, t53, t55, t58, d123_2, t60, t62, t65, d123_3, inv_d12, inv_d13, inv_d23, inv_d123;
  t1 = this.v1;
  w1 = t1.w;
  t2 = this.v2;
  w2 = t2.w;
  t3 = this.v3;
  w3 = t3.w;
  t4 = this.e12;
  t4.setFrom$1(w2).subLocal$1(w1);
  t5 = w1.get$x();
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(1, t1, w1, t2, w2, t3, w3, t4, t5);
  t7 = t4.x;
  if (typeof t7 !== 'number')
    return this.solve3$0$bailout(2, t1, w1, t2, w2, t3, w3, t4, t7, t5);
  t7 = t5 * t7;
  t5 = w1.get$y();
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(3, t7, t5, t1, w1, t2, w2, t3, w3, t4);
  t10 = t4.y;
  if (typeof t10 !== 'number')
    return this.solve3$0$bailout(4, t7, t5, t1, w1, t2, w2, t3, w3, t4, t10);
  w1e12 = t7 + t5 * t10;
  t7 = w2.get$x();
  if (typeof t7 !== 'number')
    return this.solve3$0$bailout(5, t1, w1, t2, w2, t3, w3, t4, t7, w1e12);
  t13 = t4.x;
  if (typeof t13 !== 'number')
    return this.solve3$0$bailout(6, t1, w1, t2, w2, t3, w3, t4, t7, w1e12, t13);
  t13 = t7 * t13;
  t7 = w2.get$y();
  if (typeof t7 !== 'number')
    return this.solve3$0$bailout(7, t1, w1, t2, w2, t3, w3, t4, t13, w1e12, t7);
  t16 = t4.y;
  if (typeof t16 !== 'number')
    return this.solve3$0$bailout(8, t16, t1, w1, t2, w2, t3, w3, t4, t13, w1e12, t7);
  w2e12 = t13 + t7 * t16;
  d12_2 = -w1e12;
  t13 = this.e13;
  t13.setFrom$1(w3).subLocal$1(w1);
  t18 = w1.get$x();
  if (typeof t18 !== 'number')
    return this.solve3$0$bailout(9, w2e12, t13, d12_2, t1, w1, t2, w2, t3, w3, t4, t18);
  t20 = t13.x;
  if (typeof t20 !== 'number')
    return this.solve3$0$bailout(10, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t18, t13, t20);
  t20 = t18 * t20;
  t18 = w1.get$y();
  if (typeof t18 !== 'number')
    return this.solve3$0$bailout(11, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t20, t18, t13);
  t23 = t13.y;
  if (typeof t23 !== 'number')
    return this.solve3$0$bailout(12, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t20, t18, t13, t23);
  w1e13 = t20 + t18 * t23;
  t20 = w3.get$x();
  if (typeof t20 !== 'number')
    return this.solve3$0$bailout(13, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t13, w1e13, t20);
  t26 = t13.x;
  if (typeof t26 !== 'number')
    return this.solve3$0$bailout(14, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t13, w1e13, t20, t26);
  t26 = t20 * t26;
  t20 = w3.get$y();
  if (typeof t20 !== 'number')
    return this.solve3$0$bailout(15, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t13, w1e13, t26, t20);
  t29 = t13.y;
  if (typeof t29 !== 'number')
    return this.solve3$0$bailout(16, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t13, w1e13, t26, t20, t29);
  w3e13 = t26 + t20 * t29;
  d13_2 = -w1e13;
  t26 = this.e23;
  t26.setFrom$1(w3).subLocal$1(w2);
  t31 = w2.get$x();
  if (typeof t31 !== 'number')
    return this.solve3$0$bailout(17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t31, t13, t26, w3e13, d13_2);
  t33 = t26.x;
  if (typeof t33 !== 'number')
    return this.solve3$0$bailout(18, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t31, t13, t26, t33, w3e13, d13_2);
  t33 = t31 * t33;
  t31 = w2.get$y();
  if (typeof t31 !== 'number')
    return this.solve3$0$bailout(19, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t33, t31, t13, t26, w3e13, d13_2);
  t36 = t26.y;
  if (typeof t36 !== 'number')
    return this.solve3$0$bailout(20, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t33, t31, t13, t26, t36, w3e13, d13_2);
  w2e23 = t33 + t31 * t36;
  t33 = w3.get$x();
  if (typeof t33 !== 'number')
    return this.solve3$0$bailout(21, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t33, t13, t26, w3e13, d13_2);
  t39 = t26.x;
  if (typeof t39 !== 'number')
    return this.solve3$0$bailout(22, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t33, t13, t26, w3e13, t39, d13_2);
  t39 = t33 * t39;
  t33 = w3.get$y();
  if (typeof t33 !== 'number')
    return this.solve3$0$bailout(23, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t13, t39, t33, t26, w3e13, d13_2);
  t26 = t26.y;
  if (typeof t26 !== 'number')
    return this.solve3$0$bailout(24, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t13, t39, t33, w3e13, d13_2, t26);
  w3e23 = t39 + t33 * t26;
  d23_2 = -w2e23;
  t39 = t4.x;
  if (typeof t39 !== 'number')
    return this.solve3$0$bailout(25, w2e12, t39, d12_2, t1, w1, t2, w2, t3, w3, t4, t13, w3e23, d23_2, w3e13, d13_2);
  t44 = t13.y;
  if (typeof t44 !== 'number')
    return this.solve3$0$bailout(26, w2e12, t39, d12_2, t1, t44, t2, w2, t3, w3, t4, w1, t13, w3e23, d23_2, w3e13, d13_2);
  t44 = t39 * t44;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    return this.solve3$0$bailout(27, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t13, w3e23, d23_2, w3e13, d13_2, t44);
  t13 = t13.x;
  if (typeof t13 !== 'number')
    return this.solve3$0$bailout(28, w2e12, d12_2, t1, t13, t2, w2, t3, w3, w1, t4, w3e23, d23_2, w3e13, d13_2, t44);
  n123 = t44 - t4 * t13;
  t44 = w2.get$x();
  if (typeof t44 !== 'number')
    return this.solve3$0$bailout(29, w2e12, d12_2, t1, n123, t2, w2, t3, w3, w1, t44, w3e23, d23_2, w3e13, d13_2);
  t48 = w3.get$y();
  if (typeof t48 !== 'number')
    return this.solve3$0$bailout(30, w2e12, d12_2, t1, n123, t2, w2, t3, w3, t48, w1, t44, w3e23, d23_2, w3e13, d13_2);
  t48 = t44 * t48;
  t44 = w2.get$y();
  if (typeof t44 !== 'number')
    return this.solve3$0$bailout(31, w2e12, d12_2, t1, n123, t2, w2, t3, w3, t48, w1, t44, w3e23, d23_2, w3e13, d13_2);
  t51 = w3.get$x();
  if (typeof t51 !== 'number')
    return this.solve3$0$bailout(32, w2e12, d12_2, t1, n123, t2, w2, t3, w3, t48, w1, t51, t44, w3e23, d23_2, w3e13, d13_2);
  d123_1 = n123 * (t48 - t44 * t51);
  t53 = w3.get$x();
  if (typeof t53 !== 'number')
    return this.solve3$0$bailout(33, w2e12, d12_2, t1, n123, t2, w2, t3, w3, w1, d123_1, t53, w3e23, d23_2, w3e13, d13_2);
  t55 = w1.get$y();
  if (typeof t55 !== 'number')
    return this.solve3$0$bailout(34, w2e12, d12_2, t1, n123, t2, w2, t3, w3, w1, d123_1, t53, t55, w3e23, d23_2, w3e13, d13_2);
  t55 = t53 * t55;
  t53 = w3.get$y();
  if (typeof t53 !== 'number')
    return this.solve3$0$bailout(35, w2e12, d12_2, t1, n123, t2, w2, t3, w1, d123_1, t55, t53, w3e23, d23_2, w3e13, d13_2);
  t58 = w1.get$x();
  if (typeof t58 !== 'number')
    return this.solve3$0$bailout(36, w2e12, d12_2, t1, n123, t2, w2, t3, w1, d123_1, t55, t53, w3e23, t58, d23_2, w3e13, d13_2);
  d123_2 = n123 * (t55 - t53 * t58);
  t60 = w1.get$x();
  if (typeof t60 !== 'number')
    return this.solve3$0$bailout(37, w2e12, d12_2, t1, n123, t2, w2, t3, w1, d123_1, w3e23, d23_2, w3e13, d123_2, t60, d13_2);
  t62 = w2.get$y();
  if (typeof t62 !== 'number')
    return this.solve3$0$bailout(38, t62, w2e12, d12_2, t1, n123, t2, w2, t3, w1, d123_1, w3e23, d23_2, w3e13, d123_2, t60, d13_2);
  t62 = t60 * t62;
  t60 = w1.get$y();
  if (typeof t60 !== 'number')
    return this.solve3$0$bailout(39, w2e12, t62, d12_2, t1, n123, t2, w2, t3, t60, d123_1, w3e23, d23_2, w3e13, d123_2, d13_2);
  t65 = w2.get$x();
  if (typeof t65 !== 'number')
    return this.solve3$0$bailout(40, w2e12, t62, d12_2, t1, n123, t2, t3, t65, t60, d123_1, w3e23, d23_2, w3e13, d123_2, d13_2);
  d123_3 = n123 * (t62 - t60 * t65);
  if (d12_2 <= 0 && d13_2 <= 0) {
    t1.a = 1;
    this.count = 1;
    return;
  }
  if (w2e12 > 0 && d12_2 > 0 && d123_3 <= 0) {
    inv_d12 = 1 / (w2e12 + d12_2);
    t1.a = w2e12 * inv_d12;
    t2.a = d12_2 * inv_d12;
    this.count = 2;
    return;
  }
  if (w3e13 > 0 && d13_2 > 0 && d123_2 <= 0) {
    inv_d13 = 1 / (w3e13 + d13_2);
    t1.a = w3e13 * inv_d13;
    t3.a = d13_2 * inv_d13;
    this.count = 2;
    t2.setFrom$1(t3);
    return;
  }
  if (w2e12 <= 0 && d23_2 <= 0) {
    t2.a = 1;
    this.count = 1;
    t1.setFrom$1(t2);
    return;
  }
  if (w3e13 <= 0 && w3e23 <= 0) {
    t3.a = 1;
    this.count = 1;
    t1.setFrom$1(t3);
    return;
  }
  if (w3e23 > 0 && d23_2 > 0 && d123_1 <= 0) {
    inv_d23 = 1 / (w3e23 + d23_2);
    t2.a = w3e23 * inv_d23;
    t3.a = d23_2 * inv_d23;
    this.count = 2;
    t1.setFrom$1(t3);
    return;
  }
  inv_d123 = 1 / (d123_1 + d123_2 + d123_3);
  t1.a = d123_1 * inv_d123;
  t2.a = d123_2 * inv_d123;
  t3.a = d123_3 * inv_d123;
  this.count = 3;
},
 solve3$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15) {
  switch (state0) {
    case 1:
      t5 = env7;
      t4 = env6;
      w3 = env5;
      t3 = env4;
      w2 = env3;
      t2 = env2;
      w1 = env1;
      t1 = env0;
      break;
    case 2:
      t5 = env8;
      t7 = env7;
      t4 = env6;
      w3 = env5;
      t3 = env4;
      w2 = env3;
      t2 = env2;
      w1 = env1;
      t1 = env0;
      break;
    case 3:
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      t5 = env1;
      t7 = env0;
      break;
    case 4:
      t10 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      t5 = env1;
      t7 = env0;
      break;
    case 5:
      w1e12 = env8;
      t7 = env7;
      t4 = env6;
      w3 = env5;
      t3 = env4;
      w2 = env3;
      t2 = env2;
      w1 = env1;
      t1 = env0;
      break;
    case 6:
      t13 = env9;
      w1e12 = env8;
      t7 = env7;
      t4 = env6;
      w3 = env5;
      t3 = env4;
      w2 = env3;
      t2 = env2;
      w1 = env1;
      t1 = env0;
      break;
    case 7:
      t7 = env9;
      w1e12 = env8;
      t13 = env7;
      t4 = env6;
      w3 = env5;
      t3 = env4;
      w2 = env3;
      t2 = env2;
      w1 = env1;
      t1 = env0;
      break;
    case 8:
      t7 = env10;
      w1e12 = env9;
      t13 = env8;
      t4 = env7;
      w3 = env6;
      t3 = env5;
      w2 = env4;
      t2 = env3;
      w1 = env2;
      t1 = env1;
      t16 = env0;
      break;
    case 9:
      t18 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      d12_2 = env2;
      t13 = env1;
      w2e12 = env0;
      break;
    case 10:
      t20 = env11;
      t13 = env10;
      t18 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 11:
      t13 = env11;
      t18 = env10;
      t20 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 12:
      t23 = env12;
      t13 = env11;
      t18 = env10;
      t20 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 13:
      t20 = env11;
      w1e13 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 14:
      t26 = env12;
      t20 = env11;
      w1e13 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 15:
      t20 = env12;
      t26 = env11;
      w1e13 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 16:
      t29 = env13;
      t20 = env12;
      t26 = env11;
      w1e13 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 17:
      d13_2 = env13;
      w3e13 = env12;
      t26 = env11;
      t13 = env10;
      t31 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 18:
      d13_2 = env14;
      w3e13 = env13;
      t33 = env12;
      t26 = env11;
      t13 = env10;
      t31 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 19:
      d13_2 = env14;
      w3e13 = env13;
      t26 = env12;
      t13 = env11;
      t31 = env10;
      t33 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 20:
      d13_2 = env15;
      w3e13 = env14;
      t36 = env13;
      t26 = env12;
      t13 = env11;
      t31 = env10;
      t33 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 21:
      d13_2 = env14;
      w3e13 = env13;
      t26 = env12;
      t13 = env11;
      t33 = env10;
      w2e23 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 22:
      d13_2 = env15;
      t39 = env14;
      w3e13 = env13;
      t26 = env12;
      t13 = env11;
      t33 = env10;
      w2e23 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 23:
      d13_2 = env15;
      w3e13 = env14;
      t26 = env13;
      t33 = env12;
      t39 = env11;
      t13 = env10;
      w2e23 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 24:
      t26 = env15;
      d13_2 = env14;
      w3e13 = env13;
      t33 = env12;
      t39 = env11;
      t13 = env10;
      w2e23 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 25:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t13 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      d12_2 = env2;
      t39 = env1;
      w2e12 = env0;
      break;
    case 26:
      d13_2 = env15;
      w3e13 = env14;
      d23_2 = env13;
      w3e23 = env12;
      t13 = env11;
      w1 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      t44 = env4;
      t1 = env3;
      d12_2 = env2;
      t39 = env1;
      w2e12 = env0;
      break;
    case 27:
      t44 = env14;
      d13_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 28:
      t44 = env14;
      d13_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      t4 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      t13 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 29:
      d13_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      t44 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 30:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t44 = env10;
      w1 = env9;
      t48 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 31:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t44 = env10;
      w1 = env9;
      t48 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 32:
      d13_2 = env15;
      w3e13 = env14;
      d23_2 = env13;
      w3e23 = env12;
      t44 = env11;
      t51 = env10;
      w1 = env9;
      t48 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 33:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t53 = env10;
      d123_1 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 34:
      d13_2 = env15;
      w3e13 = env14;
      d23_2 = env13;
      w3e23 = env12;
      t55 = env11;
      t53 = env10;
      d123_1 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 35:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t53 = env10;
      t55 = env9;
      d123_1 = env8;
      w1 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 36:
      d13_2 = env15;
      w3e13 = env14;
      d23_2 = env13;
      t58 = env12;
      w3e23 = env11;
      t53 = env10;
      t55 = env9;
      d123_1 = env8;
      w1 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 37:
      d13_2 = env14;
      t60 = env13;
      d123_2 = env12;
      w3e13 = env11;
      d23_2 = env10;
      w3e23 = env9;
      d123_1 = env8;
      w1 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 38:
      d13_2 = env15;
      t60 = env14;
      d123_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      d123_1 = env9;
      w1 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      n123 = env4;
      t1 = env3;
      d12_2 = env2;
      w2e12 = env1;
      t62 = env0;
      break;
    case 39:
      d13_2 = env14;
      d123_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      d123_1 = env9;
      t60 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      n123 = env4;
      t1 = env3;
      d12_2 = env2;
      t62 = env1;
      w2e12 = env0;
      break;
    case 40:
      d13_2 = env14;
      d123_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      d123_1 = env9;
      t60 = env8;
      t65 = env7;
      t3 = env6;
      t2 = env5;
      n123 = env4;
      t1 = env3;
      d12_2 = env2;
      t62 = env1;
      w2e12 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.v1;
      w1 = t1.w;
      t2 = this.v2;
      w2 = t2.w;
      t3 = this.v3;
      w3 = t3.w;
      t4 = this.e12;
      t4.setFrom$1(w2).subLocal$1(w1);
      t5 = w1.get$x();
    case 1:
      state0 = 0;
      t7 = t4.x;
    case 2:
      state0 = 0;
      t7 = $.mul(t5, t7);
      t5 = w1.get$y();
    case 3:
      state0 = 0;
      t10 = t4.y;
    case 4:
      state0 = 0;
      w1e12 = $.add(t7, $.mul(t5, t10));
      t7 = w2.get$x();
    case 5:
      state0 = 0;
      t13 = t4.x;
    case 6:
      state0 = 0;
      t13 = $.mul(t7, t13);
      t7 = w2.get$y();
    case 7:
      state0 = 0;
      t16 = t4.y;
    case 8:
      state0 = 0;
      w2e12 = $.add(t13, $.mul(t7, t16));
      d12_2 = $.neg(w1e12);
      t13 = this.e13;
      t13.setFrom$1(w3).subLocal$1(w1);
      t18 = w1.get$x();
    case 9:
      state0 = 0;
      t20 = t13.x;
    case 10:
      state0 = 0;
      t20 = $.mul(t18, t20);
      t18 = w1.get$y();
    case 11:
      state0 = 0;
      t23 = t13.y;
    case 12:
      state0 = 0;
      w1e13 = $.add(t20, $.mul(t18, t23));
      t20 = w3.get$x();
    case 13:
      state0 = 0;
      t26 = t13.x;
    case 14:
      state0 = 0;
      t26 = $.mul(t20, t26);
      t20 = w3.get$y();
    case 15:
      state0 = 0;
      t29 = t13.y;
    case 16:
      state0 = 0;
      w3e13 = $.add(t26, $.mul(t20, t29));
      d13_2 = $.neg(w1e13);
      t26 = this.e23;
      t26.setFrom$1(w3).subLocal$1(w2);
      t31 = w2.get$x();
    case 17:
      state0 = 0;
      t33 = t26.x;
    case 18:
      state0 = 0;
      t33 = $.mul(t31, t33);
      t31 = w2.get$y();
    case 19:
      state0 = 0;
      t36 = t26.y;
    case 20:
      state0 = 0;
      w2e23 = $.add(t33, $.mul(t31, t36));
      t33 = w3.get$x();
    case 21:
      state0 = 0;
      t39 = t26.x;
    case 22:
      state0 = 0;
      t39 = $.mul(t33, t39);
      t33 = w3.get$y();
    case 23:
      state0 = 0;
      t26 = t26.y;
    case 24:
      state0 = 0;
      w3e23 = $.add(t39, $.mul(t33, t26));
      d23_2 = $.neg(w2e23);
      t39 = t4.x;
    case 25:
      state0 = 0;
      t44 = t13.y;
    case 26:
      state0 = 0;
      t44 = $.mul(t39, t44);
      t4 = t4.y;
    case 27:
      state0 = 0;
      t13 = t13.x;
    case 28:
      state0 = 0;
      n123 = $.sub(t44, $.mul(t4, t13));
      t44 = w2.get$x();
    case 29:
      state0 = 0;
      t48 = w3.get$y();
    case 30:
      state0 = 0;
      t48 = $.mul(t44, t48);
      t44 = w2.get$y();
    case 31:
      state0 = 0;
      t51 = w3.get$x();
    case 32:
      state0 = 0;
      d123_1 = $.mul(n123, $.sub(t48, $.mul(t44, t51)));
      t53 = w3.get$x();
    case 33:
      state0 = 0;
      t55 = w1.get$y();
    case 34:
      state0 = 0;
      t55 = $.mul(t53, t55);
      t53 = w3.get$y();
    case 35:
      state0 = 0;
      t58 = w1.get$x();
    case 36:
      state0 = 0;
      d123_2 = $.mul(n123, $.sub(t55, $.mul(t53, t58)));
      t60 = w1.get$x();
    case 37:
      state0 = 0;
      t62 = w2.get$y();
    case 38:
      state0 = 0;
      t62 = $.mul(t60, t62);
      t60 = w1.get$y();
    case 39:
      state0 = 0;
      t65 = w2.get$x();
    case 40:
      var t1, w1, t2, w2, t3, w3, t4, t5, t7, t10, w1e12, t13, t16, w2e12, d12_2, t18, t20, t23, w1e13, t26, t29, w3e13, d13_2, t31, t33, t36, w2e23, t39, w3e23, d23_2, t44, n123, t48, t51, d123_1, t53, t55, t58, d123_2, t60, t62, t65, d123_3, inv_d12, inv_d13, inv_d23, inv_d123;
      state0 = 0;
      d123_3 = $.mul(n123, $.sub(t62, $.mul(t60, t65)));
      if ($.leB(d12_2, 0) && $.leB(d13_2, 0)) {
        t1.a = 1;
        this.count = 1;
        return;
      }
      if ($.gtB(w2e12, 0) && $.gtB(d12_2, 0) && $.leB(d123_3, 0)) {
        t3 = $.add(w2e12, d12_2);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        inv_d12 = 1 / t3;
        t1.a = $.mul(w2e12, inv_d12);
        t2.a = $.mul(d12_2, inv_d12);
        this.count = 2;
        return;
      }
      if ($.gtB(w3e13, 0) && $.gtB(d13_2, 0) && $.leB(d123_2, 0)) {
        t4 = $.add(w3e13, d13_2);
        if (typeof t4 !== 'number')
          throw $.iae(t4);
        inv_d13 = 1 / t4;
        t1.a = $.mul(w3e13, inv_d13);
        t3.a = $.mul(d13_2, inv_d13);
        this.count = 2;
        t2.setFrom$1(t3);
        return;
      }
      if ($.leB(w2e12, 0) && $.leB(d23_2, 0)) {
        t2.a = 1;
        this.count = 1;
        t1.setFrom$1(t2);
        return;
      }
      if ($.leB(w3e13, 0) && $.leB(w3e23, 0)) {
        t3.a = 1;
        this.count = 1;
        t1.setFrom$1(t3);
        return;
      }
      if ($.gtB(w3e23, 0) && $.gtB(d23_2, 0) && $.leB(d123_1, 0)) {
        t4 = $.add(w3e23, d23_2);
        if (typeof t4 !== 'number')
          throw $.iae(t4);
        inv_d23 = 1 / t4;
        t2.a = $.mul(w3e23, inv_d23);
        t3.a = $.mul(d23_2, inv_d23);
        this.count = 2;
        t1.setFrom$1(t3);
        return;
      }
      t4 = $.add($.add(d123_1, d123_2), d123_3);
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      inv_d123 = 1 / t4;
      t1.a = $.mul(d123_1, inv_d123);
      t2.a = $.mul(d123_2, inv_d123);
      t3.a = $.mul(d123_3, inv_d123);
      this.count = 3;
  }
},
 Simplex$0: function() {
  var t1, t2, t3;
  t1 = this.vertices;
  t2 = this.v1;
  t3 = t1.length;
  if (0 >= t3)
    throw $.ioore(0);
  t1[0] = t2;
  t2 = this.v2;
  if (1 >= t3)
    throw $.ioore(1);
  t1[1] = t2;
  t2 = this.v3;
  if (2 >= t3)
    throw $.ioore(2);
  t1[2] = t2;
}
};

$$.SimplexCache = {"": ["metric=", "count=", "indexA?", "indexB?"],
 "super": "Object",
 setFrom$1: function(sc) {
  var t1 = this.indexA;
  $.setRange$3(t1, 0, $.get$length(t1), sc.get$indexA());
  t1 = this.indexB;
  $.setRange$3(t1, 0, $.get$length(t1), sc.get$indexB());
  this.metric = sc.get$metric();
  this.count = sc.get$count();
},
 SimplexCache$0: function() {
  var t1, t3, t5, t6, i;
  t1 = this.indexA;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.SimplexCache$0$bailout(1, t1);
  t3 = this.indexB;
  if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
    return this.SimplexCache$0$bailout(2, t1, t3);
  t5 = t1.length;
  t6 = t3.length;
  i = 0;
  for (; i < 3; ++i) {
    if (i >= t5)
      throw $.ioore(i);
    t1[i] = 2147483647;
    if (i >= t6)
      throw $.ioore(i);
    t3[i] = 2147483647;
  }
},
 SimplexCache$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.indexA;
    case 1:
      state0 = 0;
      t3 = this.indexB;
    case 2:
      var t1, t3, i;
      state0 = 0;
      i = 0;
      for (; i < 3; ++i) {
        $.indexSet(t1, i, 2147483647);
        $.indexSet(t3, i, 2147483647);
      }
  }
}
};

$$.SimplexVertex = {"": ["wA?", "wB?", "w?", "a=", "indexA=", "indexB="],
 "super": "Object",
 setFrom$1: function(sv) {
  this.wA.setFrom$1(sv.get$wA());
  this.wB.setFrom$1(sv.get$wB());
  this.w.setFrom$1(sv.get$w());
  this.a = sv.get$a();
  this.indexA = sv.get$indexA();
  this.indexB = sv.get$indexB();
},
 toString$0: function() {
  return 'wA: ' + $.S(this.wA) + ', wB: ' + $.S(this.wB) + ', w: ' + $.S(this.w);
}
};

$$.TimeOfImpact = {"": ["cache", "distanceInput", "xfA", "xfB", "distanceOutput", "fcn", "indexes", "sweepA", "sweepB", "pool"],
 "super": "Object",
 timeOfImpact$2: function(output, input) {
  var t1, proxyA, proxyB, t3, t4, tMax, t5, t7, target, t9, t10, t2, t6, t8, t11, t12, t13, t14, iter, t15, t20, pushBackIter, done, s2, s1, a2, a1, rootIterCount, t, s;
  t1 = $.TimeOfImpact_toiCalls;
  if (typeof t1 !== 'number')
    return this.timeOfImpact$2$bailout(1, output, input, t1);
  $.TimeOfImpact_toiCalls = t1 + 1;
  output.state = 0;
  output.t = input.tMax;
  proxyA = input.proxyA;
  proxyB = input.proxyB;
  t3 = this.sweepA;
  t3.setFrom$1(input.sweepA);
  t4 = this.sweepB;
  t4.setFrom$1(input.sweepB);
  t3.normalize$0();
  t4.normalize$0();
  tMax = input.tMax;
  t5 = proxyA.get$radius();
  if (typeof t5 !== 'number')
    return this.timeOfImpact$2$bailout(2, output, proxyA, proxyB, t3, t4, t5, tMax);
  t7 = proxyB.get$radius();
  if (typeof t7 !== 'number')
    return this.timeOfImpact$2$bailout(3, output, proxyA, proxyB, t3, t4, t5, tMax, t7);
  target = $.max(0.005, t5 + t7 - 0.015);
  t9 = this.cache;
  t9.count = 0;
  t10 = this.distanceInput;
  t10.proxyA = proxyA;
  t10.proxyB = proxyB;
  t10.useRadii = false;
  for (t1 = this.fcn, t2 = this.indexes, t5 = t2.length, t6 = target + 0.00125, t7 = target - 0.00125, t8 = this.distanceOutput, t11 = this.xfA, t12 = this.xfB, t13 = this.pool, t14 = 0, iter = 0; true;) {
    t3.getTransform$2(t11, t14);
    t4.getTransform$2(t12, t14);
    t10.transformA = t11;
    t10.transformB = t12;
    t13.distance.distance$3(t8, t9, t10);
    t15 = t8.distance;
    if (typeof t15 !== 'number')
      return this.timeOfImpact$2$bailout(4, output, t10, target, t7, t11, t1, t2, t12, t6, proxyA, proxyB, t3, t13, t4, t15, t8, tMax, t14, t5, iter, t9);
    if (t15 <= 0) {
      output.state = 2;
      output.t = 0;
      break;
    }
    if (t15 < t6) {
      output.state = 3;
      output.t = t14;
      break;
    }
    t1.initialize$6(t9, proxyA, t3, proxyB, t4, t14);
    for (t20 = tMax, pushBackIter = 0; done = false, true;) {
      s2 = t1.findMinSeparation$2(t2, t20);
      if (typeof s2 !== 'number')
        return this.timeOfImpact$2$bailout(6, output, t10, s2, t11, t12, t13, t8, target, t7, t1, t2, t6, proxyA, proxyB, t3, t20, pushBackIter, t4, tMax, t14, t5, t9, iter);
      if (s2 > t6) {
        output.state = 4;
        output.t = tMax;
        done = true;
        break;
      }
      if (s2 > t7) {
        t14 = t20;
        done = false;
        break;
      }
      if (0 >= t5)
        throw $.ioore(0);
      t15 = t2[0];
      if (1 >= t5)
        throw $.ioore(1);
      s1 = t1.evaluate$3(t15, t2[1], t14);
      if (typeof s1 !== 'number')
        return this.timeOfImpact$2$bailout(7, output, t10, s2, t11, t12, t13, t8, s1, target, t7, t1, t2, t6, proxyA, proxyB, t3, t20, pushBackIter, t4, tMax, t14, t5, iter, t9);
      if (s1 < t7) {
        output.state = 1;
        output.t = t14;
        done = true;
        break;
      }
      if (s1 <= t6) {
        output.state = 3;
        output.t = t14;
        done = true;
        break;
      }
      for (a2 = t20, a1 = t14, rootIterCount = 0; true;) {
        t = (rootIterCount & 1) === 1 ? a1 + (target - s1) * (a2 - a1) / (s2 - s1) : 0.5 * (a1 + a2);
        s = t1.evaluate$3(t2[0], t2[1], t);
        if (typeof s !== 'number')
          return this.timeOfImpact$2$bailout(8, output, rootIterCount, a1, a2, t10, s1, t9, t11, t12, t13, t8, target, t7, t, t1, t2, t6, s, proxyA, proxyB, t20, pushBackIter, t3, t4, tMax, t14, t5, iter, s2);
        t15 = $.abs(s - target);
        if (typeof t15 !== 'number')
          return this.timeOfImpact$2$bailout(9, output, rootIterCount, a1, a2, t10, tMax, s1, t9, t11, t12, t13, t8, target, t7, t, t1, t2, t6, s, proxyA, proxyB, t20, pushBackIter, t15, t4, t3, t14, t5, iter, s2);
        if (t15 < 0.00125) {
          t20 = t;
          break;
        }
        if (s > target) {
          a1 = t;
          s1 = s;
        } else {
          a2 = t;
          s2 = s;
        }
        ++rootIterCount;
        t15 = $.TimeOfImpact_toiRootIters;
        if (typeof t15 !== 'number')
          return this.timeOfImpact$2$bailout(10, output, t10, s2, s1, a1, a2, t11, rootIterCount, t15, t12, t13, t8, target, t7, t1, t2, t6, proxyA, proxyB, t3, t20, pushBackIter, t4, tMax, t14, t5, iter, t9);
        $.TimeOfImpact_toiRootIters = t15 + 1;
        if (rootIterCount === 50)
          break;
      }
      $.TimeOfImpact_toiMaxRootIters = $.max($.TimeOfImpact_toiMaxRootIters, rootIterCount);
      ++pushBackIter;
      if (pushBackIter === 8) {
        done = false;
        break;
      }
    }
    ++iter;
    t15 = $.TimeOfImpact_toiIters;
    if (typeof t15 !== 'number')
      return this.timeOfImpact$2$bailout(11, output, t10, t14, target, t7, done, t11, iter, t15, t1, t2, t12, t6, proxyA, proxyB, t3, t4, t13, t8, tMax, t5, t9);
    $.TimeOfImpact_toiIters = t15 + 1;
    if (done)
      break;
    if (iter === 1000) {
      output.state = 1;
      output.t = t14;
      break;
    }
  }
  $.TimeOfImpact_toiMaxIters = $.max($.TimeOfImpact_toiMaxIters, iter);
},
 timeOfImpact$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22, env23, env24, env25, env26, env27, env28, env29) {
  switch (state0) {
    case 1:
      t1 = env2;
      input = env1;
      output = env0;
      break;
    case 2:
      tMax = env6;
      t5 = env5;
      t4 = env4;
      t3 = env3;
      proxyB = env2;
      proxyA = env1;
      output = env0;
      break;
    case 3:
      t7 = env7;
      tMax = env6;
      t5 = env5;
      t4 = env4;
      t3 = env3;
      proxyB = env2;
      proxyA = env1;
      output = env0;
      break;
    case 4:
      t9 = env20;
      iter = env19;
      t5 = env18;
      t14 = env17;
      tMax = env16;
      t8 = env15;
      t15 = env14;
      t4 = env13;
      t13 = env12;
      t3 = env11;
      proxyB = env10;
      proxyA = env9;
      t6 = env8;
      t12 = env7;
      t2 = env6;
      t1 = env5;
      t11 = env4;
      t7 = env3;
      target = env2;
      t10 = env1;
      output = env0;
      break;
    case 5:
      t5 = env20;
      iter = env19;
      t14 = env18;
      tMax = env17;
      t15 = env16;
      t8 = env15;
      t13 = env14;
      t4 = env13;
      t3 = env12;
      proxyB = env11;
      proxyA = env10;
      t6 = env9;
      t12 = env8;
      t2 = env7;
      t1 = env6;
      t11 = env5;
      t7 = env4;
      target = env3;
      t10 = env2;
      t9 = env1;
      output = env0;
      break;
    case 6:
      iter = env22;
      t9 = env21;
      t5 = env20;
      t14 = env19;
      tMax = env18;
      t4 = env17;
      pushBackIter = env16;
      t20 = env15;
      t3 = env14;
      proxyB = env13;
      proxyA = env12;
      t6 = env11;
      t2 = env10;
      t1 = env9;
      t7 = env8;
      target = env7;
      t8 = env6;
      t13 = env5;
      t12 = env4;
      t11 = env3;
      s2 = env2;
      t10 = env1;
      output = env0;
      break;
    case 7:
      t9 = env23;
      iter = env22;
      t5 = env21;
      t14 = env20;
      tMax = env19;
      t4 = env18;
      pushBackIter = env17;
      t20 = env16;
      t3 = env15;
      proxyB = env14;
      proxyA = env13;
      t6 = env12;
      t2 = env11;
      t1 = env10;
      t7 = env9;
      target = env8;
      s1 = env7;
      t8 = env6;
      t13 = env5;
      t12 = env4;
      t11 = env3;
      s2 = env2;
      t10 = env1;
      output = env0;
      break;
    case 8:
      s2 = env28;
      iter = env27;
      t5 = env26;
      t14 = env25;
      tMax = env24;
      t4 = env23;
      t3 = env22;
      pushBackIter = env21;
      t20 = env20;
      proxyB = env19;
      proxyA = env18;
      s = env17;
      t6 = env16;
      t2 = env15;
      t1 = env14;
      t = env13;
      t7 = env12;
      target = env11;
      t8 = env10;
      t13 = env9;
      t12 = env8;
      t11 = env7;
      t9 = env6;
      s1 = env5;
      t10 = env4;
      a2 = env3;
      a1 = env2;
      rootIterCount = env1;
      output = env0;
      break;
    case 9:
      s2 = env29;
      iter = env28;
      t5 = env27;
      t14 = env26;
      t3 = env25;
      t4 = env24;
      t15 = env23;
      pushBackIter = env22;
      t20 = env21;
      proxyB = env20;
      proxyA = env19;
      s = env18;
      t6 = env17;
      t2 = env16;
      t1 = env15;
      t = env14;
      t7 = env13;
      target = env12;
      t8 = env11;
      t13 = env10;
      t12 = env9;
      t11 = env8;
      t9 = env7;
      s1 = env6;
      tMax = env5;
      t10 = env4;
      a2 = env3;
      a1 = env2;
      rootIterCount = env1;
      output = env0;
      break;
    case 10:
      t9 = env27;
      iter = env26;
      t5 = env25;
      t14 = env24;
      tMax = env23;
      t4 = env22;
      pushBackIter = env21;
      t20 = env20;
      t3 = env19;
      proxyB = env18;
      proxyA = env17;
      t6 = env16;
      t2 = env15;
      t1 = env14;
      t7 = env13;
      target = env12;
      t8 = env11;
      t13 = env10;
      t12 = env9;
      t15 = env8;
      rootIterCount = env7;
      t11 = env6;
      a2 = env5;
      a1 = env4;
      s1 = env3;
      s2 = env2;
      t10 = env1;
      output = env0;
      break;
    case 11:
      t9 = env21;
      t5 = env20;
      tMax = env19;
      t8 = env18;
      t13 = env17;
      t4 = env16;
      t3 = env15;
      proxyB = env14;
      proxyA = env13;
      t6 = env12;
      t12 = env11;
      t2 = env10;
      t1 = env9;
      t15 = env8;
      iter = env7;
      t11 = env6;
      done = env5;
      t7 = env4;
      target = env3;
      t14 = env2;
      t10 = env1;
      output = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $.TimeOfImpact_toiCalls;
    case 1:
      state0 = 0;
      $.TimeOfImpact_toiCalls = $.add(t1, 1);
      output.state = 0;
      output.t = input.tMax;
      proxyA = input.proxyA;
      proxyB = input.proxyB;
      t3 = this.sweepA;
      t3.setFrom$1(input.sweepA);
      t4 = this.sweepB;
      t4.setFrom$1(input.sweepB);
      t3.normalize$0();
      t4.normalize$0();
      tMax = input.tMax;
      t5 = proxyA.get$radius();
    case 2:
      state0 = 0;
      t7 = proxyB.get$radius();
    case 3:
      state0 = 0;
      target = $.max(0.005, $.sub($.add(t5, t7), 0.015));
      t9 = this.cache;
      t9.count = 0;
      t10 = this.distanceInput;
      t10.proxyA = proxyA;
      t10.proxyB = proxyB;
      t10.useRadii = false;
      t1 = this.fcn;
      t2 = this.indexes;
      t5 = t2.length;
      t6 = target + 0.00125;
      t7 = target - 0.00125;
      t8 = this.distanceOutput;
      t11 = this.xfA;
      t12 = this.xfB;
      t13 = this.pool;
      t14 = 0;
      iter = 0;
    default:
      var t1, input, output, proxyA, proxyB, t3, t4, tMax, t5, t7, target, t9, t10, t2, t6, t8, t11, t12, t13, t14, iter, t15, t20, pushBackIter, done, s2, s1, a2, a1, rootIterCount, t16, t, s;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t3.getTransform$2(t11, t14);
              t4.getTransform$2(t12, t14);
              t10.transformA = t11;
              t10.transformB = t12;
              t13.distance.distance$3(t8, t9, t10);
              t15 = t8.distance;
            case 4:
              state0 = 0;
              if ($.leB(t15, 0)) {
                output.state = 2;
                output.t = 0;
                break L0;
              }
              t15 = t8.distance;
            case 5:
              state0 = 0;
              if ($.ltB(t15, t6)) {
                output.state = 3;
                output.t = t14;
                break L0;
              }
              t1.initialize$6(t9, proxyA, t3, proxyB, t4, t14);
              t20 = tMax;
              pushBackIter = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      done = false;
                      if (!true)
                        break L1;
                      s2 = t1.findMinSeparation$2(t2, t20);
                    case 6:
                      state0 = 0;
                      if ($.gtB(s2, t6)) {
                        output.state = 4;
                        output.t = tMax;
                        done = true;
                        break L1;
                      }
                      if ($.gtB(s2, t7)) {
                        t14 = t20;
                        done = false;
                        break L1;
                      }
                      if (0 >= t5)
                        throw $.ioore(0);
                      t15 = t2[0];
                      if (1 >= t5)
                        throw $.ioore(1);
                      s1 = t1.evaluate$3(t15, t2[1], t14);
                    case 7:
                      state0 = 0;
                      if ($.ltB(s1, t7)) {
                        output.state = 1;
                        output.t = t14;
                        done = true;
                        break L1;
                      }
                      if ($.leB(s1, t6)) {
                        output.state = 3;
                        output.t = t14;
                        done = true;
                        break L1;
                      }
                      a2 = t20;
                      a1 = t14;
                      rootIterCount = 0;
                    default:
                      L2:
                        while (true)
                          switch (state0) {
                            case 0:
                              if (!true)
                                break L2;
                              if ((rootIterCount & 1) === 1) {
                                if (typeof s1 !== 'number')
                                  throw $.iae(s1);
                                t15 = (target - s1) * (a2 - a1);
                                t16 = $.sub(s2, s1);
                                if (typeof t16 !== 'number')
                                  throw $.iae(t16);
                                t = a1 + t15 / t16;
                              } else
                                t = 0.5 * (a1 + a2);
                              s = t1.evaluate$3(t2[0], t2[1], t);
                            case 8:
                              state0 = 0;
                              t15 = $.abs($.sub(s, target));
                            case 9:
                              state0 = 0;
                              if ($.ltB(t15, 0.00125)) {
                                t20 = t;
                                break L2;
                              }
                              if ($.gtB(s, target)) {
                                a1 = t;
                                s1 = s;
                              } else {
                                a2 = t;
                                s2 = s;
                              }
                              ++rootIterCount;
                              t15 = $.TimeOfImpact_toiRootIters;
                            case 10:
                              state0 = 0;
                              $.TimeOfImpact_toiRootIters = $.add(t15, 1);
                              if (rootIterCount === 50)
                                break L2;
                          }
                      $.TimeOfImpact_toiMaxRootIters = $.max($.TimeOfImpact_toiMaxRootIters, rootIterCount);
                      ++pushBackIter;
                      if (pushBackIter === 8) {
                        done = false;
                        break L1;
                      }
                  }
              ++iter;
              t15 = $.TimeOfImpact_toiIters;
            case 11:
              state0 = 0;
              $.TimeOfImpact_toiIters = $.add(t15, 1);
              if (done)
                break L0;
              if (iter === 1000) {
                output.state = 1;
                output.t = t14;
                break L0;
              }
          }
      $.TimeOfImpact_toiMaxIters = $.max($.TimeOfImpact_toiMaxIters, iter);
  }
},
 TimeOfImpact$_construct$1: function(argPool) {
  var t1, t2;
  t1 = this.indexes;
  t2 = t1.length;
  if (0 >= t2)
    throw $.ioore(0);
  t1[0] = 0;
  if (1 >= t2)
    throw $.ioore(1);
  t1[1] = 0;
  $.TimeOfImpact_toiCalls = 0;
  $.TimeOfImpact_toiIters = 0;
  $.TimeOfImpact_toiMaxIters = 0;
  $.TimeOfImpact_toiRootIters = 0;
  $.TimeOfImpact_toiMaxRootIters = 0;
}
};

$$.SeparationFunction = {"": ["proxyA=", "proxyB=", "type=", "localPoint?", "axis", "sweepA", "sweepB", "localPointA", "localPointB", "pointA?", "pointB?", "localPointA1", "localPointA2", "normal?", "localPointB1", "localPointB2", "axisA", "axisB", "temp", "xfa", "xfb"],
 "super": "Object",
 initialize$6: function(cache, argProxyA, argSweepA, argProxyB, argSweepB, t1) {
  var count, t3, t4, t5, t2, t6, t8, t9, t11, t13, t7, t10, t12, t14, t15, t16, s;
  this.proxyA = argProxyA;
  this.proxyB = argProxyB;
  count = cache.count;
  if (typeof count !== 'number')
    return this.initialize$6$bailout(1, cache, argSweepA, argSweepB, t1, count);
  this.sweepA = argSweepA;
  this.sweepB = argSweepB;
  t3 = this.sweepA;
  t4 = this.xfa;
  t3.getTransform$2(t4, t1);
  t3 = this.sweepB;
  t5 = this.xfb;
  t3.getTransform$2(t5, t1);
  if (count === 1) {
    this.type = 0;
    t1 = this.localPointA;
    t2 = this.proxyA.get$vertices();
    if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(2, cache, t4, t5, t1, t2);
    t6 = cache.indexA;
    if (typeof t6 !== 'string' && (typeof t6 !== 'object' || t6 === null || t6.constructor !== Array && !t6.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(3, cache, t4, t5, t1, t6, t2);
    if (0 >= t6.length)
      throw $.ioore(0);
    t6 = t6[0];
    if (t6 !== (t6 | 0))
      throw $.iae(t6);
    if (t6 < 0 || t6 >= t2.length)
      throw $.ioore(t6);
    t1.setFrom$1(t2[t6]);
    t8 = this.localPointB;
    t9 = this.proxyB.get$vertices();
    if (typeof t9 !== 'string' && (typeof t9 !== 'object' || t9 === null || t9.constructor !== Array && !t9.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(4, cache, t4, t5, t1, t9, t8);
    t11 = cache.indexB;
    if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(5, t4, t5, t1, t9, t8, t11);
    if (0 >= t11.length)
      throw $.ioore(0);
    t11 = t11[0];
    if (t11 !== (t11 | 0))
      throw $.iae(t11);
    if (t11 < 0 || t11 >= t9.length)
      throw $.ioore(t11);
    t8.setFrom$1(t9[t11]);
    t13 = this.pointA;
    $.Transform_mulToOut(t4, t1, t13);
    t1 = this.pointB;
    $.Transform_mulToOut(t5, t8, t1);
    t8 = this.axis;
    t8.setFrom$1(t1).subLocal$1(t13);
    return t8.normalize$0();
  } else {
    t1 = cache.indexA;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(6, cache, t4, t5, t1);
    t3 = t1.length;
    if (0 >= t3)
      throw $.ioore(0);
    t6 = t1[0];
    if (1 >= t3)
      throw $.ioore(1);
    t6 = $.eqB(t6, t1[1]);
    t7 = cache.indexB;
    if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(7, t6, t4, t5, t7, t1);
    t9 = this.pointA;
    t10 = this.axis;
    t11 = this.temp;
    t12 = this.normal;
    t13 = this.localPoint;
    t14 = this.pointB;
    if (t6) {
      this.type = 2;
      t2 = this.localPointB1;
      t3 = this.proxyB.get$vertices();
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(8, t14, t1, t9, t2, t7, t11, t4, t5, t10, t3, t12, t13);
      if (0 >= t7.length)
        throw $.ioore(0);
      t8 = t7[0];
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t3.length)
        throw $.ioore(t8);
      t2.setFrom$1(t3[t8]);
      t15 = this.localPointB2;
      t16 = this.proxyB.get$vertices();
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(9, t14, t1, t9, t2, t7, t15, t11, t4, t5, t10, t12, t13, t16);
      if (1 >= t7.length)
        throw $.ioore(1);
      t7 = t7[1];
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t16.length)
        throw $.ioore(t7);
      t15.setFrom$1(t16[t7]);
      t11.setFrom$1(t15).subLocal$1(t2);
      $.Vector_crossVectorAndNumToOut(t11, 1, t10);
      t10.normalize$0();
      $.Matrix22_mulMatrixAndVectorToOut(t5.rotation, t10, t12);
      t13.setFrom$1(t2);
      t13.addLocal$1(t15);
      t13.mulLocal$1(0.5);
      $.Transform_mulToOut(t5, t13, t14);
      t13 = this.localPointA;
      t5 = this.proxyA.get$vertices();
      if (typeof t5 !== 'string' && (typeof t5 !== 'object' || t5 === null || t5.constructor !== Array && !t5.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(10, t11, t14, t4, t13, t10, t1, t9, t12, t5);
      if (0 >= t1.length)
        throw $.ioore(0);
      t1 = t1[0];
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t5.length)
        throw $.ioore(t1);
      t13.setFrom$1(t5[t1]);
      $.Transform_mulToOut(t4, t13, t9);
      t11.setFrom$1(t9);
      t11.subLocal$1(t14);
      t14 = t11.x;
      if (typeof t14 !== 'number')
        return this.initialize$6$bailout(11, t11, t12, t10, t14);
      t13 = t12.x;
      if (typeof t13 !== 'number')
        return this.initialize$6$bailout(12, t11, t12, t10, t14, t13);
      t13 = t14 * t13;
      t11 = t11.y;
      if (typeof t11 !== 'number')
        return this.initialize$6$bailout(13, t11, t12, t10, t13);
      t12 = t12.y;
      if (typeof t12 !== 'number')
        return this.initialize$6$bailout(14, t11, t12, t10, t13);
      s = t13 + t11 * t12;
      if (s < 0) {
        t10.negateLocal$0();
        s = -s;
      }
      return s;
    } else {
      this.type = 1;
      t2 = this.localPointA1;
      t3 = this.proxyA.get$vertices();
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(15, t14, t1, t9, t7, t3, t11, t4, t5, t10, t2, t12, t13);
      if (0 >= t1.length)
        throw $.ioore(0);
      t8 = t1[0];
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t3.length)
        throw $.ioore(t8);
      t2.setFrom$1(t3[t8]);
      t15 = this.localPointA2;
      t16 = this.proxyA.get$vertices();
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(16, t14, t1, t9, t7, t11, t4, t5, t10, t2, t15, t12, t13, t16);
      if (1 >= t1.length)
        throw $.ioore(1);
      t1 = t1[1];
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t16.length)
        throw $.ioore(t1);
      t15.setFrom$1(t16[t1]);
      t11.setFrom$1(t15);
      t11.subLocal$1(t2);
      $.Vector_crossVectorAndNumToOut(t11, 1, t10);
      t10.normalize$0();
      $.Matrix22_mulMatrixAndVectorToOut(t4.rotation, t10, t12);
      t13.setFrom$1(t2);
      t13.addLocal$1(t15);
      t13.mulLocal$1(0.5);
      $.Transform_mulToOut(t4, t13, t9);
      t13 = this.localPointB;
      t4 = this.proxyB.get$vertices();
      if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(17, t11, t14, t5, t10, t4, t9, t12, t7, t13);
      if (0 >= t7.length)
        throw $.ioore(0);
      t7 = t7[0];
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t4.length)
        throw $.ioore(t7);
      t13.setFrom$1(t4[t7]);
      $.Transform_mulToOut(t5, t13, t14);
      t11.setFrom$1(t14);
      t11.subLocal$1(t9);
      t9 = t11.x;
      if (typeof t9 !== 'number')
        return this.initialize$6$bailout(18, t11, t12, t9, t10);
      t13 = t12.x;
      if (typeof t13 !== 'number')
        return this.initialize$6$bailout(19, t11, t12, t9, t13, t10);
      t13 = t9 * t13;
      t11 = t11.y;
      if (typeof t11 !== 'number')
        return this.initialize$6$bailout(20, t12, t11, t10, t13);
      t12 = t12.y;
      if (typeof t12 !== 'number')
        return this.initialize$6$bailout(21, t11, t12, t13, t10);
      s = t13 + t11 * t12;
      if (s < 0) {
        t10.negateLocal$0();
        s = -s;
      }
      return s;
    }
  }
},
 initialize$6$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12) {
  switch (state0) {
    case 1:
      count = env4;
      t1 = env3;
      argSweepB = env2;
      argSweepA = env1;
      cache = env0;
      break;
    case 2:
      t2 = env4;
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 3:
      t2 = env5;
      t6 = env4;
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 4:
      t8 = env5;
      t9 = env4;
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 5:
      t11 = env5;
      t8 = env4;
      t9 = env3;
      t1 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 6:
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 7:
      t1 = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      t3 = env0;
      break;
    case 8:
      t12 = env11;
      t11 = env10;
      t3 = env9;
      t9 = env8;
      t5 = env7;
      t4 = env6;
      t10 = env5;
      t6 = env4;
      t2 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 9:
      t15 = env12;
      t12 = env11;
      t11 = env10;
      t9 = env9;
      t5 = env8;
      t4 = env7;
      t10 = env6;
      t14 = env5;
      t6 = env4;
      t2 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 10:
      t5 = env8;
      t11 = env7;
      t8 = env6;
      t1 = env5;
      t9 = env4;
      t12 = env3;
      t4 = env2;
      t13 = env1;
      t10 = env0;
      break;
    case 11:
      t13 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 12:
      t12 = env4;
      t13 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 13:
      t12 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 14:
      t12 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 15:
      t12 = env11;
      t11 = env10;
      t2 = env9;
      t9 = env8;
      t5 = env7;
      t4 = env6;
      t10 = env5;
      t3 = env4;
      t6 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 16:
      t15 = env12;
      t12 = env11;
      t11 = env10;
      t14 = env9;
      t2 = env8;
      t9 = env7;
      t5 = env6;
      t4 = env5;
      t10 = env4;
      t6 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 17:
      t12 = env8;
      t6 = env7;
      t11 = env6;
      t8 = env5;
      t4 = env4;
      t9 = env3;
      t5 = env2;
      t13 = env1;
      t10 = env0;
      break;
    case 18:
      t9 = env3;
      t8 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 19:
      t9 = env4;
      t12 = env3;
      t8 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 20:
      t12 = env3;
      t9 = env2;
      t10 = env1;
      t11 = env0;
      break;
    case 21:
      t9 = env3;
      t12 = env2;
      t11 = env1;
      t10 = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.proxyA = argProxyA;
      this.proxyB = argProxyB;
      count = cache.count;
    case 1:
      state0 = 0;
      this.sweepA = argSweepA;
      this.sweepB = argSweepB;
      t3 = this.sweepA;
      t4 = this.xfa;
      t3.getTransform$2(t4, t1);
      t3 = this.sweepB;
      t5 = this.xfb;
      t3.getTransform$2(t5, t1);
    default:
      var count, t1, argSweepB, argSweepA, cache, t3, t4, t5, t2, t6, t8, t9, t11, t13, t10, t12, t14, t15, s;
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && $.eqB(count, 1))
        switch (state0) {
          case 0:
            this.type = 0;
            t1 = this.localPointA;
            t2 = this.proxyA.get$vertices();
          case 2:
            state0 = 0;
            t6 = cache.indexA;
          case 3:
            state0 = 0;
            t1.setFrom$1($.index(t2, $.index(t6, 0)));
            t8 = this.localPointB;
            t9 = this.proxyB.get$vertices();
          case 4:
            state0 = 0;
            t11 = cache.indexB;
          case 5:
            state0 = 0;
            t8.setFrom$1($.index(t9, $.index(t11, 0)));
            t13 = this.pointA;
            $.Transform_mulToOut(t4, t1, t13);
            t1 = this.pointB;
            $.Transform_mulToOut(t5, t8, t1);
            t8 = this.axis;
            t8.setFrom$1(t1).subLocal$1(t13);
            return t8.normalize$0();
        }
      else
        switch (state0) {
          case 0:
            t1 = cache.indexA;
          case 6:
            state0 = 0;
            t3 = $.eqB($.index(t1, 0), $.index(t1, 1));
            t6 = cache.indexB;
          case 7:
            state0 = 0;
            t8 = this.pointA;
            t9 = this.axis;
            t10 = this.temp;
            t11 = this.normal;
            t12 = this.localPoint;
            t13 = this.pointB;
          default:
            if (state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 0 && t3)
              switch (state0) {
                case 0:
                  this.type = 2;
                  t2 = this.localPointB1;
                  t3 = this.proxyB.get$vertices();
                case 8:
                  state0 = 0;
                  t2.setFrom$1($.index(t3, $.index(t6, 0)));
                  t14 = this.localPointB2;
                  t15 = this.proxyB.get$vertices();
                case 9:
                  state0 = 0;
                  t14.setFrom$1($.index(t15, $.index(t6, 1)));
                  t10.setFrom$1(t14).subLocal$1(t2);
                  $.Vector_crossVectorAndNumToOut(t10, 1, t9);
                  t9.normalize$0();
                  $.Matrix22_mulMatrixAndVectorToOut(t5.rotation, t9, t11);
                  t12.setFrom$1(t2);
                  t12.addLocal$1(t14);
                  t12.mulLocal$1(0.5);
                  $.Transform_mulToOut(t5, t12, t13);
                  t12 = this.localPointA;
                  t5 = this.proxyA.get$vertices();
                case 10:
                  state0 = 0;
                  t12.setFrom$1($.index(t5, $.index(t1, 0)));
                  $.Transform_mulToOut(t4, t12, t8);
                  t10.setFrom$1(t8);
                  t10.subLocal$1(t13);
                  t13 = t10.x;
                case 11:
                  state0 = 0;
                  t12 = t11.x;
                case 12:
                  state0 = 0;
                  t12 = $.mul(t13, t12);
                  t10 = t10.y;
                case 13:
                  state0 = 0;
                  t11 = t11.y;
                case 14:
                  state0 = 0;
                  s = $.add(t12, $.mul(t10, t11));
                  if ($.ltB(s, 0)) {
                    t9.negateLocal$0();
                    s = $.neg(s);
                  }
                  return s;
              }
            else
              switch (state0) {
                case 0:
                  this.type = 1;
                  t2 = this.localPointA1;
                  t3 = this.proxyA.get$vertices();
                case 15:
                  state0 = 0;
                  t2.setFrom$1($.index(t3, $.index(t1, 0)));
                  t14 = this.localPointA2;
                  t15 = this.proxyA.get$vertices();
                case 16:
                  state0 = 0;
                  t14.setFrom$1($.index(t15, $.index(t1, 1)));
                  t10.setFrom$1(t14);
                  t10.subLocal$1(t2);
                  $.Vector_crossVectorAndNumToOut(t10, 1, t9);
                  t9.normalize$0();
                  $.Matrix22_mulMatrixAndVectorToOut(t4.rotation, t9, t11);
                  t12.setFrom$1(t2);
                  t12.addLocal$1(t14);
                  t12.mulLocal$1(0.5);
                  $.Transform_mulToOut(t4, t12, t8);
                  t12 = this.localPointB;
                  t4 = this.proxyB.get$vertices();
                case 17:
                  state0 = 0;
                  t12.setFrom$1($.index(t4, $.index(t6, 0)));
                  $.Transform_mulToOut(t5, t12, t13);
                  t10.setFrom$1(t13);
                  t10.subLocal$1(t8);
                  t8 = t10.x;
                case 18:
                  state0 = 0;
                  t12 = t11.x;
                case 19:
                  state0 = 0;
                  t12 = $.mul(t8, t12);
                  t10 = t10.y;
                case 20:
                  state0 = 0;
                  t11 = t11.y;
                case 21:
                  state0 = 0;
                  s = $.add(t12, $.mul(t10, t11));
                  if ($.ltB(s, 0)) {
                    t9.negateLocal$0();
                    s = $.neg(s);
                  }
                  return s;
              }
        }
  }
},
 findMinSeparation$2: function(indexes, t) {
  var t1, t2, t3, t4, t5, t6, t7;
  t1 = this.sweepA;
  t2 = this.xfa;
  t1.getTransform$2(t2, t);
  t1 = this.sweepB;
  t3 = this.xfb;
  t1.getTransform$2(t3, t);
  switch (this.type) {
    case 0:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.axisA;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t4, t5);
      t1 = t3.rotation;
      t6 = t4.negateLocal$0();
      t7 = this.axisB;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t6, t7);
      t4.negateLocal$0();
      t5 = this.proxyA.getSupport$1(t5);
      t6 = indexes.length;
      if (0 >= t6)
        throw $.ioore(0);
      indexes[0] = t5;
      t7 = this.proxyB.getSupport$1(t7);
      if (1 >= t6)
        throw $.ioore(1);
      indexes[1] = t7;
      t7 = this.localPointA;
      t7.setFrom$1($.index(this.proxyA.get$vertices(), indexes[0]));
      t5 = this.localPointB;
      t5.setFrom$1($.index(this.proxyB.get$vertices(), indexes[1]));
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t7, t1);
      t7 = this.pointB;
      $.Transform_mulToOut(t3, t5, t7);
      t1 = t7.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t4.x), $.mul(t1.get$y(), t4.y));
    case 1:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t4, t1);
      t5.negateLocal$0();
      t4 = t3.rotation;
      t2 = this.axisB;
      $.Matrix22_mulTransMatrixAndVectorToOut(t4, t5, t2);
      t5.negateLocal$0();
      t4 = indexes.length;
      if (0 >= t4)
        throw $.ioore(0);
      indexes[0] = -1;
      t2 = this.proxyB.getSupport$1(t2);
      if (1 >= t4)
        throw $.ioore(1);
      indexes[1] = t2;
      t2 = this.localPointB;
      t2.setFrom$1($.index(this.proxyB.get$vertices(), indexes[1]));
      t6 = this.pointB;
      $.Transform_mulToOut(t3, t2, t6);
      t1 = t6.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    case 2:
      t1 = t3.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t4, t1);
      t4 = t2.rotation;
      t3 = t5.negateLocal$0();
      t6 = this.axisA;
      $.Matrix22_mulTransMatrixAndVectorToOut(t4, t3, t6);
      t5.negateLocal$0();
      if (1 >= indexes.length)
        throw $.ioore(1);
      indexes[1] = -1;
      indexes[0] = this.proxyA.getSupport$1(t6);
      t3 = this.localPointA;
      t3.setFrom$1($.index(this.proxyA.get$vertices(), indexes[0]));
      t4 = this.pointA;
      $.Transform_mulToOut(t2, t3, t4);
      t1 = t4.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    default:
      t1 = indexes.length;
      if (0 >= t1)
        throw $.ioore(0);
      indexes[0] = -1;
      if (1 >= t1)
        throw $.ioore(1);
      indexes[1] = -1;
      return 0;
  }
},
 evaluate$3: function(indexA, indexB, t) {
  var t1, t2, t3, t4, t5, t6;
  t1 = this.sweepA;
  t2 = this.xfa;
  t1.getTransform$2(t2, t);
  t1 = this.sweepB;
  t3 = this.xfb;
  t1.getTransform$2(t3, t);
  switch (this.type) {
    case 0:
      t1 = t2.rotation;
      t4 = this.axis;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t4, this.axisA);
      $.Matrix22_mulTransMatrixAndVectorToOut(t3.rotation, t4.negateLocal$0(), this.axisB);
      t4.negateLocal$0();
      t1 = this.localPointA;
      t1.setFrom$1($.index(this.proxyA.get$vertices(), indexA));
      t5 = this.localPointB;
      t5.setFrom$1($.index(this.proxyB.get$vertices(), indexB));
      t6 = this.pointA;
      $.Transform_mulToOut(t2, t1, t6);
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t5, t1);
      t6 = t1.subLocal$1(t6);
      return $.add($.mul(t6.get$x(), t4.x), $.mul(t6.get$y(), t4.y));
    case 1:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t4, t1);
      t5.negateLocal$0();
      $.Matrix22_mulTransMatrixAndVectorToOut(t3.rotation, t5, this.axisB);
      t5.negateLocal$0();
      t4 = this.localPointB;
      t4.setFrom$1($.index(this.proxyB.get$vertices(), indexB));
      t2 = this.pointB;
      $.Transform_mulToOut(t3, t4, t2);
      t1 = t2.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    case 2:
      t1 = t3.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t4, t1);
      $.Matrix22_mulTransMatrixAndVectorToOut(t2.rotation, t5.negateLocal$0(), this.axisA);
      t5.negateLocal$0();
      t4 = this.localPointA;
      t4.setFrom$1($.index(this.proxyA.get$vertices(), indexA));
      t3 = this.pointA;
      $.Transform_mulToOut(t2, t4, t3);
      t1 = t3.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    default:
      return 0;
  }
}
};

$$.TimeOfImpactInput = {"": ["proxyA?", "proxyB?", "sweepA", "sweepB", "tMax"],
 "super": "Object"
};

$$.TimeOfImpactOutput = {"": ["state", "t"],
 "super": "Object"
};

$$.WorldManifold = {"": ["normal?", "points?", "pool3", "pool4"],
 "super": "Object",
 initialize$5: function(manifold, xfA, radiusA, xfB, radiusB) {
  var pointA, pointB, t1, cAx, cAy, cBx, cBy, t2, t3, planePoint, clipPoint, i, scalar, t4, R, v;
  switch (manifold.get$type()) {
    case 0:
      pointA = this.pool3;
      pointB = this.pool4;
      t1 = this.normal;
      t1.x = 1;
      t1.y = 0;
      pointA.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localPoint().get$y()));
      pointA.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localPoint().get$y()));
      pointB.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), 0).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), 0).get$localPoint().get$y()));
      pointB.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), 0).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), 0).get$localPoint().get$y()));
      if ($.gtB($.MathBox_distanceSquared(pointA, pointB), 1.4208639999999999e-14)) {
        t1.x = $.sub(pointB.x, pointA.x);
        t1.y = $.sub(pointB.y, pointA.y);
        t1.normalize$0();
      }
      cAx = $.add($.mul(t1.x, radiusA), pointA.x);
      cAy = $.add($.mul(t1.y, radiusA), pointA.y);
      cBx = $.add($.mul($.neg(t1.x), radiusB), pointB.x);
      cBy = $.add($.mul($.neg(t1.y), radiusB), pointB.y);
      t2 = $.mul($.add(cAx, cBx), 0.5);
      t3 = this.points;
      if (0 >= t3.length)
        throw $.ioore(0);
      t3[0].set$x(t2);
      t2 = $.mul($.add(cAy, cBy), 0.5);
      t3[0].set$y(t2);
      return;
    case 1:
      planePoint = this.pool3;
      t1 = $.add($.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localNormal().get$x()), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localNormal().get$y()));
      t2 = this.normal;
      t2.x = t1;
      t2.y = $.add($.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localNormal().get$x()), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localNormal().get$y()));
      planePoint.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localPoint().get$y()));
      planePoint.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localPoint().get$y()));
      clipPoint = this.pool4;
      for (t1 = this.points, t3 = t1.length, i = 0; $.ltB(i, manifold.get$pointCount()); ++i) {
        clipPoint.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        clipPoint.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        scalar = $.sub(radiusA, $.add($.mul($.sub(clipPoint.x, planePoint.x), t2.x), $.mul($.sub(clipPoint.y, planePoint.y), t2.y)));
        cAx = $.add($.mul(t2.x, scalar), clipPoint.x);
        cAy = $.add($.mul(t2.y, scalar), clipPoint.y);
        cBx = $.add($.mul($.neg(t2.x), radiusB), clipPoint.x);
        cBy = $.add($.mul($.neg(t2.y), radiusB), clipPoint.y);
        t4 = $.mul($.add(cAx, cBx), 0.5);
        if (i >= t3)
          throw $.ioore(i);
        t1[i].set$x(t4);
        t4 = $.mul($.add(cAy, cBy), 0.5);
        t1[i].set$y(t4);
      }
      return;
    case 2:
      planePoint = this.pool3;
      R = xfB.get$rotation();
      t1 = $.add($.mul(R.get$col1().get$x(), manifold.get$localNormal().get$x()), $.mul(R.get$col2().get$x(), manifold.get$localNormal().get$y()));
      t2 = this.normal;
      t2.x = t1;
      t2.y = $.add($.mul(R.get$col1().get$y(), manifold.get$localNormal().get$x()), $.mul(R.get$col2().get$y(), manifold.get$localNormal().get$y()));
      v = manifold.get$localPoint();
      planePoint.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y()));
      planePoint.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
      clipPoint = this.pool4;
      for (t1 = this.points, t3 = t1.length, i = 0; $.ltB(i, manifold.get$pointCount()); ++i) {
        clipPoint.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        clipPoint.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        scalar = $.sub(radiusB, $.add($.mul($.sub(clipPoint.x, planePoint.x), t2.x), $.mul($.sub(clipPoint.y, planePoint.y), t2.y)));
        cBx = $.add($.mul(t2.x, scalar), clipPoint.x);
        cBy = $.add($.mul(t2.y, scalar), clipPoint.y);
        cAx = $.add($.mul($.neg(t2.x), radiusA), clipPoint.x);
        cAy = $.add($.mul($.neg(t2.y), radiusA), clipPoint.y);
        t4 = $.mul($.add(cAx, cBx), 0.5);
        if (i >= t3)
          throw $.ioore(i);
        t1[i].set$x(t4);
        t4 = $.mul($.add(cAy, cBy), 0.5);
        t1[i].set$y(t4);
      }
      t2.x = $.neg(t2.x);
      t2.y = $.neg(t2.y);
      break;
  }
},
 WorldManifold$0: function() {
  var t1, t2, i, t3;
  for (t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    t3 = $.Vector$(0, 0);
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.BroadPhase = {"": ["_tree", "proxyCount", "moveBuffer", "_pairBuffer", "_pairCapacity", "_pairCount", "queryProxy"],
 "super": "Object",
 createProxy$2: function(box, userData) {
  var node = this._tree.createProxy$2(box, userData);
  this.proxyCount = this.proxyCount + 1;
  this.moveBuffer.push(node);
  return node;
},
 destroyProxy$1: function(proxy) {
  this._unbufferMove$1(proxy);
  this.proxyCount = this.proxyCount - 1;
  this._tree.destroyProxy$1(proxy);
},
 moveProxy$3: function(proxy, box, displacement) {
  if (this._tree.moveProxy$3(proxy, box, displacement) === true)
    this.moveBuffer.push(proxy);
},
 testOverlap$2: function(proxyA, proxyB) {
  return $.AxisAlignedBox_testOverlap(proxyA.get$box(), proxyB.get$box());
},
 updatePairs$1: function(callback) {
  var t1, i, t2, pairBuffer, primaryPair, t3, t4, t5, pair, t6, t7;
  this._pairCount = 0;
  for (t1 = this._tree, i = 0; t2 = this.moveBuffer, i < t2.length; ++i) {
    this.queryProxy = t2[i];
    t2 = this.queryProxy;
    if (t2 == null)
      continue;
    t1.query$2(this, t2.get$box());
  }
  this.moveBuffer = $._ListImpl_List(null);
  pairBuffer = $._ListImpl_List$from($.getRange(this._pairBuffer, 0, this._pairCount));
  $.sort$1(pairBuffer, new $.BroadPhase_updatePairs_anon());
  $.setRange$3(this._pairBuffer, 0, this._pairCount, pairBuffer);
  for (i = 0; i < this._pairCount;) {
    t2 = this._pairBuffer;
    if (i < 0 || i >= t2.length)
      throw $.ioore(i);
    primaryPair = t2[i];
    callback.addPair$2(primaryPair.get$proxyA().get$userData(), primaryPair.get$proxyB().get$userData());
    ++i;
    for (t2 = primaryPair.get$proxyB(), t3 = primaryPair.get$proxyA(), t4 = this._pairBuffer, t5 = t4.length; i < this._pairCount;) {
      if (i >= t5)
        throw $.ioore(i);
      pair = t4[i];
      t6 = pair.get$proxyA();
      if (t6 == null ? t3 == null : t6 === t3) {
        t6 = pair.get$proxyB();
        t7 = !(t6 == null ? t2 == null : t6 === t2);
        t6 = t7;
      } else
        t6 = true;
      if (t6)
        break;
      ++i;
    }
  }
  t1.rebalance$1(4);
},
 treeCallback$1: function(proxy) {
  var t1, t2, oldBuffer, i, i0, t3, t4, t5;
  if ($.eqB(proxy, this.queryProxy))
    return true;
  t1 = this._pairCount;
  t2 = this._pairCapacity;
  if (t1 === t2) {
    oldBuffer = this._pairBuffer;
    this._pairCapacity = t2 * 2;
    this._pairBuffer = $._ListImpl_List(this._pairCapacity);
    for (t1 = this._pairBuffer, i = oldBuffer.length, t2 = t1.length, i0 = 0; i0 < i; ++i0) {
      t3 = oldBuffer[i0];
      if (i0 >= t2)
        throw $.ioore(i0);
      t1[i0] = t3;
    }
    for (; i < this._pairCapacity; ++i) {
      t1 = this._pairBuffer;
      t2 = $.Pair$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  t1 = $.ltB(proxy.get$key(), this.queryProxy.get$key());
  t2 = this._pairBuffer;
  t3 = this._pairCount;
  if (t1) {
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3].set$proxyA(proxy);
    t1 = this.queryProxy;
    t4 = this._pairBuffer;
    t5 = this._pairCount;
    if (t5 < 0 || t5 >= t4.length)
      throw $.ioore(t5);
    t4[t5].set$proxyB(t1);
  } else {
    t1 = this.queryProxy;
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3].set$proxyA(t1);
    t1 = this._pairBuffer;
    t4 = this._pairCount;
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    t1[t4].set$proxyB(proxy);
  }
  this._pairCount = this._pairCount + 1;
  return true;
},
 _unbufferMove$1: function(proxy) {
  var index = $.indexOf$1(this.moveBuffer, proxy);
  if (!(index === -1))
    $.removeRange(this.moveBuffer, index, 1);
},
 BroadPhase$0: function() {
  var i, t1, t2;
  this.moveBuffer = $._ListImpl_List(null);
  this._pairBuffer = $._ListImpl_List(this._pairCapacity);
  for (i = 0; i < this._pairCapacity; ++i) {
    t1 = this._pairBuffer;
    t2 = $.Pair$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
}
};

$$.DynamicTree = {"": ["_root", "_nodeCount", "_lastLeaf", "_insertionCount", "_path", "_nodeStack", "_drawVectors", "_nodeCounter", "_tempVector", "_tempBox", "center?", "deltaOne", "deltaTwo"],
 "super": "Object",
 createProxy$2: function(box, userData) {
  var proxy, t1, iterationCount, height, tryCount;
  proxy = this._allocateNode$0();
  t1 = $.sub(box.get$lowerBound().get$x(), 0.1);
  proxy.get$box().get$lowerBound().set$x(t1);
  t1 = $.sub(box.get$lowerBound().get$y(), 0.1);
  proxy.get$box().get$lowerBound().set$y(t1);
  t1 = $.add(box.get$upperBound().get$x(), 0.1);
  proxy.get$box().get$upperBound().set$x(t1);
  t1 = $.add(box.get$upperBound().get$y(), 0.1);
  proxy.get$box().get$upperBound().set$y(t1);
  proxy.set$userData(userData);
  this._insertLeaf$1(proxy);
  iterationCount = $.shr(this._nodeCount, 4);
  height = this._computeHeight$1(this._root);
  if (typeof height !== 'number')
    return this.createProxy$2$bailout(1, height, proxy, iterationCount);
  tryCount = 0;
  while (true) {
    if (!($.gtB(height, 64) && tryCount < 10))
      break;
    this.rebalance$1(iterationCount);
    height = this._computeHeight$1(this._root);
    ++tryCount;
  }
  return proxy;
},
 createProxy$2$bailout: function(state0, height, proxy, iterationCount) {
  var tryCount = 0;
  while (true) {
    if (!($.gtB(height, 64) && tryCount < 10))
      break;
    this.rebalance$1(iterationCount);
    height = this._computeHeight$1(this._root);
    ++tryCount;
  }
  return proxy;
},
 destroyProxy$1: function(toDestroy) {
  this._removeLeaf$1(toDestroy);
  this._freeNode$1(toDestroy);
},
 moveProxy$3: function(argProxy, argBox, displacement) {
  var t1, t2;
  if ($.contains$1(argProxy.get$box(), argBox) === true)
    return false;
  this._removeLeaf$1(argProxy);
  t1 = argBox.lowerBound;
  t1.set$x($.sub(t1.get$x(), 0.1));
  t1 = argBox.lowerBound;
  t1.set$y($.sub(t1.get$y(), 0.1));
  t1 = argBox.upperBound;
  t1.set$x($.add(t1.get$x(), 0.1));
  t1 = argBox.upperBound;
  t1.set$y($.add(t1.get$y(), 0.1));
  t1 = this._tempVector;
  t1.setFrom$1(displacement);
  t1.mulLocal$1(2);
  if ($.ltB(t1.x, 0)) {
    t2 = argBox.lowerBound;
    t2.set$x($.add(t2.get$x(), t1.x));
  } else {
    t2 = argBox.upperBound;
    t2.set$x($.add(t2.get$x(), t1.x));
  }
  if ($.ltB(t1.y, 0)) {
    t2 = argBox.lowerBound;
    t2.set$y($.add(t2.get$y(), t1.y));
  } else {
    t2 = argBox.upperBound;
    t2.set$y($.add(t2.get$y(), t1.y));
  }
  argProxy.get$box().setFrom$1(argBox);
  this._insertLeaf$1(argProxy);
  return true;
},
 _allocateNode$0: function() {
  var t1, i, node;
  t1 = this._nodeStack;
  if ($.get$isEmpty(t1) === true)
    for (i = 0; i < 6; ++i)
      t1.addFirst$1($.DynamicTreeNode$_construct());
  node = t1.removeFirst$0();
  node.set$parent(null);
  node.set$childOne(null);
  node.set$childTwo(null);
  node.set$userData(null);
  node.set$key(this._nodeCounter);
  this._nodeCounter = this._nodeCounter + 1;
  this._nodeCount = this._nodeCount + 1;
  return node;
},
 query$2: function(callback, argBox) {
  this._query$4(callback, argBox, this._root, 1);
},
 _query$4: function(callback, argBox, node, count) {
  if (node == null)
    return true;
  if ($.AxisAlignedBox_testOverlap(argBox, node.get$box()))
    if (node.get$isLeaf() === true) {
      if (callback.treeCallback$1(node) !== true)
        return false;
    } else {
      if (count < 64) {
        ++count;
        if (this._query$4(callback, argBox, node.get$childOne(), count) !== true)
          return false;
      }
      if (count < 64) {
        ++count;
        if (this._query$4(callback, argBox, node.get$childTwo(), count) !== true)
          return false;
      }
    }
  return true;
},
 _insertLeaf$1: function(node) {
  var t1, sibling, childOne, childTwo, t2, t3, t4, normOne, node1, node2, node10;
  this._insertionCount = this._insertionCount + 1;
  if (this._root == null) {
    this._root = node;
    node.set$parent(null);
    return;
  }
  t1 = this.center;
  t1.setFrom$1(node.get$box().get$center());
  sibling = this._root;
  if (sibling.get$isLeaf() !== true)
    while (true) {
      childOne = sibling.get$childOne();
      childTwo = sibling.get$childTwo();
      t2 = this.deltaOne;
      t2.setFrom$1(childOne.get$box().get$center());
      t3 = this.deltaTwo;
      t3.setFrom$1(childTwo.get$box().get$center());
      t2.subLocal$1(t1).absLocal$0();
      t3.subLocal$1(t1).absLocal$0();
      t4 = t2.x;
      if (typeof t4 !== 'number')
        return this._insertLeaf$1$bailout(1, node, t3, childOne, childTwo, t4, t1, t2);
      t2 = t2.y;
      if (typeof t2 !== 'number')
        return this._insertLeaf$1$bailout(2, node, t3, childOne, childTwo, t4, t2, t1);
      normOne = t4 + t2;
      t2 = t3.x;
      if (typeof t2 !== 'number')
        return this._insertLeaf$1$bailout(3, node, t3, childOne, childTwo, normOne, t2, t1);
      t3 = t3.y;
      if (typeof t3 !== 'number')
        return this._insertLeaf$1$bailout(4, node, childOne, childTwo, normOne, t2, t3, t1);
      sibling = normOne < t2 + t3 ? childOne : childTwo;
      t2 = sibling.get$isLeaf();
      if (typeof t2 !== 'boolean')
        return this._insertLeaf$1$bailout(5, sibling, node, t2, t1);
      if (!!t2)
        break;
    }
  node1 = sibling.get$parent();
  node2 = this._allocateNode$0();
  node2.set$parent(node1);
  node2.set$userData(null);
  node2.get$box().setFromCombination$2(node.get$box(), sibling.get$box());
  if (!(node1 == null)) {
    t1 = sibling.get$parent().get$childOne();
    if (t1 == null ? sibling == null : t1 === sibling)
      node1.set$childOne(node2);
    else
      node1.set$childTwo(node2);
    node2.set$childOne(sibling);
    node2.set$childTwo(node);
    sibling.set$parent(node2);
    node.set$parent(node2);
    while (true) {
      if ($.contains$1(node1.get$box(), node2.get$box()) === true)
        break;
      node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
      node10 = node1.get$parent();
      if (!!(node10 == null))
        break;
      node2 = node1;
      node1 = node10;
    }
  } else {
    node2.set$childOne(sibling);
    node2.set$childTwo(node);
    sibling.set$parent(node2);
    node.set$parent(node2);
    this._root = node2;
  }
},
 _insertLeaf$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t2 = env6;
      t1 = env5;
      t4 = env4;
      childTwo = env3;
      childOne = env2;
      t3 = env1;
      node = env0;
      break;
    case 2:
      t1 = env6;
      t2 = env5;
      t4 = env4;
      childTwo = env3;
      childOne = env2;
      t3 = env1;
      node = env0;
      break;
    case 3:
      t1 = env6;
      t2 = env5;
      normOne = env4;
      childTwo = env3;
      childOne = env2;
      t3 = env1;
      node = env0;
      break;
    case 4:
      t1 = env6;
      t3 = env5;
      t2 = env4;
      normOne = env3;
      childTwo = env2;
      childOne = env1;
      node = env0;
      break;
    case 5:
      t1 = env3;
      t2 = env2;
      node = env1;
      sibling = env0;
      break;
  }
  switch (state0) {
    case 0:
      this._insertionCount = this._insertionCount + 1;
      if (this._root == null) {
        this._root = node;
        node.set$parent(null);
        return;
      }
      t1 = this.center;
      t1.setFrom$1(node.get$box().get$center());
      sibling = this._root;
    default:
      var t1, sibling, childOne, childTwo, t2, t3, t4, node, normOne, node1, node2, node10;
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && sibling.get$isLeaf() !== true)
        switch (state0) {
          case 0:
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    childOne = sibling.get$childOne();
                    childTwo = sibling.get$childTwo();
                    t2 = this.deltaOne;
                    t2.setFrom$1(childOne.get$box().get$center());
                    t3 = this.deltaTwo;
                    t3.setFrom$1(childTwo.get$box().get$center());
                    t2.subLocal$1(t1).absLocal$0();
                    t3.subLocal$1(t1).absLocal$0();
                    t4 = t2.x;
                  case 1:
                    state0 = 0;
                    t2 = t2.y;
                  case 2:
                    state0 = 0;
                    normOne = $.add(t4, t2);
                    t2 = t3.x;
                  case 3:
                    state0 = 0;
                    t3 = t3.y;
                  case 4:
                    state0 = 0;
                    sibling = $.ltB(normOne, $.add(t2, t3)) ? childOne : childTwo;
                    t2 = sibling.get$isLeaf();
                  case 5:
                    state0 = 0;
                    if (!$.eqB(t2, false))
                      break L0;
                }
        }
      node1 = sibling.get$parent();
      node2 = this._allocateNode$0();
      node2.set$parent(node1);
      node2.set$userData(null);
      node2.get$box().setFromCombination$2(node.get$box(), sibling.get$box());
      if (!(node1 == null)) {
        t1 = sibling.get$parent().get$childOne();
        if (t1 == null ? sibling == null : t1 === sibling)
          node1.set$childOne(node2);
        else
          node1.set$childTwo(node2);
        node2.set$childOne(sibling);
        node2.set$childTwo(node);
        sibling.set$parent(node2);
        node.set$parent(node2);
        L1:
          while (true) {
            if ($.contains$1(node1.get$box(), node2.get$box()) === true)
              break;
            node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
            node10 = node1.get$parent();
            if (!!(node10 == null))
              break L1;
            node2 = node1;
            node1 = node10;
          }
      } else {
        node2.set$childOne(sibling);
        node2.set$childTwo(node);
        sibling.set$parent(node2);
        node.set$parent(node2);
        this._root = node2;
      }
  }
},
 _removeLeaf$1: function(argNode) {
  var t1, node2, node1, sibling;
  t1 = this._root;
  if (argNode == null ? t1 == null : argNode === t1) {
    this._root = null;
    t1 = this._lastLeaf;
    if (t1 == null ? argNode == null : t1 === argNode)
      this._lastLeaf = null;
    return;
  }
  node2 = argNode.get$parent();
  node1 = node2.get$parent();
  sibling = node2.get$childOne();
  if (sibling == null ? argNode == null : sibling === argNode)
    sibling = node2.get$childTwo();
  if (!(node1 == null)) {
    t1 = node1.get$childOne();
    if (t1 == null ? node2 == null : t1 === node2)
      node1.set$childOne(sibling);
    else
      node1.set$childTwo(sibling);
    sibling.set$parent(node1);
    this._freeNode$1(node2);
    for (t1 = this._tempBox; !(node1 == null);) {
      t1.setFrom$1(node1.get$box());
      node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
      if (t1.contains$1(node1.get$box()) === true)
        break;
      node1 = node1.get$parent();
    }
  } else {
    this._root = sibling;
    sibling.set$parent(null);
    this._freeNode$1(node2);
  }
  t1 = this._lastLeaf;
  if (t1 == null ? argNode == null : t1 === argNode)
    this._lastLeaf = this._root;
},
 _computeHeight$1: function(node) {
  if (node == null)
    return 0;
  return 1 + $.max(this._computeHeight$1(node.get$childOne()), this._computeHeight$1(node.get$childTwo()));
},
 rebalance$1: function(iterations) {
  var i, current, bit, t1, t2, bit0;
  if (this._root == null)
    return;
  for (i = 0; i < iterations; ++i) {
    current = this._root;
    for (bit = 0; t1 = current.get$isLeaf() !== true, t2 = this._path, t1; bit = bit0) {
      current = ($.shr(t2, bit) & 1) === 0 ? current.get$childOne() : current.get$childTwo();
      bit0 = bit + 1 & 31;
    }
    this._path = t2 + 1;
    this._removeLeaf$1(current);
    this._insertLeaf$1(current);
  }
},
 _freeNode$1: function(node) {
  this._nodeStack.addFirst$1(node);
  this._nodeCount = this._nodeCount - 1;
},
 DynamicTree$0: function() {
  var t1, t2, i;
  for (t1 = this._drawVectors, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.DynamicTreeNode = {"": ["box?", "parent=", "next=", "childOne=", "childTwo=", "userData=", "key="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 get$isLeaf: function() {
  return this.childOne == null;
},
 toString$0: function() {
  return this.box.toString$0();
}
};

$$.Pair = {"": ["proxyA=", "proxyB="],
 "super": "Object",
 compareTo$1: function(pair2) {
  var t1;
  if ($.ltB(this.proxyA.get$key(), pair2.get$proxyA().get$key()))
    return -1;
  if ($.eqB(this.proxyA.get$key(), pair2.get$proxyA().get$key())) {
    if ($.ltB(this.proxyB.get$key(), pair2.get$proxyB().get$key()))
      t1 = -1;
    else
      t1 = $.eqB(this.proxyB.get$key(), pair2.get$proxyB().get$key()) ? 0 : 1;
    return t1;
  }
  return 1;
}
};

$$.CircleShape = {"": ["position?", "type", "radius"],
 "super": "Shape",
 computeAxisAlignedBox$2: function(argBox, argTransform) {
  var p = $.Vector$(0, 0);
  $.Matrix22_mulMatrixAndVectorToOut(argTransform.get$rotation(), this.position, p);
  p.addLocal$1(argTransform.get$position());
  argBox.get$lowerBound().setCoords$2($.sub(p.x, this.radius), $.sub(p.y, this.radius));
  argBox.get$upperBound().setCoords$2($.add(p.x, this.radius), $.add(p.y, this.radius));
},
 clone$0: function() {
  return $.CircleShape$copy(this);
},
 computeMass$2: function(massData, density) {
  var t1, t2, t3, t4;
  massData.mass = $.mul($.mul($.mul(density, 3.141592653589793), this.radius), this.radius);
  t1 = massData.center;
  t2 = this.position;
  t1.setFrom$1(t2);
  t1 = massData.mass;
  t3 = this.radius;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = 0.5 * t3 * t3;
  t4 = $.add($.mul(t2.get$x(), t2.get$x()), $.mul(t2.get$y(), t2.get$y()));
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  massData.inertia = $.mul(t1, t3 + t4);
}
};

$$.MassData = {"": ["mass?", "center?", "inertia?"],
 "super": "Object",
 setFrom$1: function(md) {
  this.mass = md.get$mass();
  this.inertia = md.get$inertia();
  this.center.setFrom$1(md.get$center());
}
};

$$.PolygonShape = {"": ["centroid?", "vertices?", "normals?", "vertexCount?", "type", "radius"],
 "super": "Shape",
 getSupport$1: function(d) {
  var t1, t3, t4, t6, t8, bestValue, bestIndex, i, t2, t5, t7, value;
  t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getSupport$1$bailout(1, d, t1);
  if (0 >= t1.length)
    throw $.ioore(0);
  t3 = t1[0];
  t4 = t3.get$x();
  if (typeof t4 !== 'number')
    return this.getSupport$1$bailout(2, d, t4, t1, t3);
  t6 = d.x;
  if (typeof t6 !== 'number')
    return this.getSupport$1$bailout(3, d, t4, t1, t3, t6);
  t6 = t4 * t6;
  t3 = t3.get$y();
  if (typeof t3 !== 'number')
    return this.getSupport$1$bailout(4, d, t6, t3, t1);
  t8 = d.y;
  if (typeof t8 !== 'number')
    return this.getSupport$1$bailout(5, d, t6, t3, t1, t8);
  bestValue = t6 + t3 * t8;
  bestIndex = 0;
  i = 1;
  while (true) {
    t2 = this.vertexCount;
    if (typeof t2 !== 'number')
      return this.getSupport$1$bailout(6, d, t2, bestIndex, bestValue, i, t1);
    if (!(i < t2))
      break;
    if (i >= t1.length)
      throw $.ioore(i);
    t2 = t1[i];
    t3 = t2.get$x();
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(7, d, t2, t3, bestIndex, bestValue, i, t1);
    t5 = d.x;
    if (typeof t5 !== 'number')
      return this.getSupport$1$bailout(8, d, t2, t3, bestIndex, bestValue, i, t5, t1);
    t5 = t3 * t5;
    t2 = t2.get$y();
    if (typeof t2 !== 'number')
      return this.getSupport$1$bailout(9, d, bestIndex, bestValue, t2, i, t5, t1);
    t7 = d.y;
    if (typeof t7 !== 'number')
      return this.getSupport$1$bailout(10, d, bestIndex, t7, bestValue, t2, i, t5, t1);
    value = t5 + t2 * t7;
    if (value > bestValue) {
      bestValue = value;
      bestIndex = i;
    }
    ++i;
  }
  return bestIndex;
},
 getSupport$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      t1 = env1;
      d = env0;
      break;
    case 2:
      t3 = env3;
      t1 = env2;
      t4 = env1;
      d = env0;
      break;
    case 3:
      t6 = env4;
      t3 = env3;
      t1 = env2;
      t4 = env1;
      d = env0;
      break;
    case 4:
      t1 = env3;
      t3 = env2;
      t6 = env1;
      d = env0;
      break;
    case 5:
      t8 = env4;
      t1 = env3;
      t3 = env2;
      t6 = env1;
      d = env0;
      break;
    case 6:
      t1 = env5;
      i = env4;
      bestValue = env3;
      bestIndex = env2;
      t2 = env1;
      d = env0;
      break;
    case 7:
      t1 = env6;
      i = env5;
      bestValue = env4;
      bestIndex = env3;
      t3 = env2;
      t2 = env1;
      d = env0;
      break;
    case 8:
      t1 = env7;
      t5 = env6;
      i = env5;
      bestValue = env4;
      bestIndex = env3;
      t3 = env2;
      t2 = env1;
      d = env0;
      break;
    case 9:
      t1 = env6;
      t5 = env5;
      i = env4;
      t2 = env3;
      bestValue = env2;
      bestIndex = env1;
      d = env0;
      break;
    case 10:
      t1 = env7;
      t5 = env6;
      i = env5;
      t2 = env4;
      bestValue = env3;
      t7 = env2;
      bestIndex = env1;
      d = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
    case 1:
      state0 = 0;
      t3 = $.index(t1, 0);
      t4 = t3.get$x();
    case 2:
      state0 = 0;
      t6 = d.x;
    case 3:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t3 = t3.get$y();
    case 4:
      state0 = 0;
      t8 = d.y;
    case 5:
      state0 = 0;
      bestValue = $.add(t6, $.mul(t3, t8));
      bestIndex = 0;
      i = 1;
    default:
      var t1, d, t3, t4, t6, t8, bestValue, bestIndex, i, t2, t5, t7, value;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t2 = this.vertexCount;
            case 6:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L0;
              t2 = $.index(t1, i);
              t3 = t2.get$x();
            case 7:
              state0 = 0;
              t5 = d.x;
            case 8:
              state0 = 0;
              t5 = $.mul(t3, t5);
              t2 = t2.get$y();
            case 9:
              state0 = 0;
              t7 = d.y;
            case 10:
              state0 = 0;
              value = $.add(t5, $.mul(t2, t7));
              if ($.gtB(value, bestValue)) {
                bestValue = value;
                bestIndex = i;
              }
              ++i;
          }
      return bestIndex;
  }
},
 clone$0: function() {
  return $.PolygonShape$copy(this);
},
 setAsBox$2: function(hx, hy) {
  var t1, t2;
  this.vertexCount = 4;
  t1 = this.vertices;
  $.index(t1, 0).setCoords$2($.neg(hx), $.neg(hy));
  $.index(t1, 1).setCoords$2(hx, $.neg(hy));
  $.index(t1, 2).setCoords$2(hx, hy);
  $.index(t1, 3).setCoords$2($.neg(hx), hy);
  t2 = this.normals;
  $.index(t2, 0).setCoords$2(0, -1);
  $.index(t2, 1).setCoords$2(1, 0);
  $.index(t2, 2).setCoords$2(0, 1);
  $.index(t2, 3).setCoords$2(-1, 0);
  this.centroid.setZero$0();
},
 computeAxisAlignedBox$2: function(argAabb, argXf) {
  var lower, upper, v, t1, i;
  lower = $.Vector$(0, 0);
  upper = $.Vector$(0, 0);
  v = $.Vector$(0, 0);
  t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.computeAxisAlignedBox$2$bailout(1, argAabb, argXf, lower, t1, upper, v);
  if (0 >= t1.length)
    throw $.ioore(0);
  $.Transform_mulToOut(argXf, t1[0], lower);
  upper.setFrom$1(lower);
  for (i = 1; $.ltB(i, this.vertexCount); ++i) {
    if (i >= t1.length)
      throw $.ioore(i);
    $.Transform_mulToOut(argXf, t1[i], v);
    lower.x = $.ltB(lower.x, v.x) ? lower.x : v.x;
    lower.y = $.ltB(lower.y, v.y) ? lower.y : v.y;
    upper.x = $.gtB(upper.x, v.x) ? upper.x : v.x;
    upper.y = $.gtB(upper.y, v.y) ? upper.y : v.y;
  }
  t1 = $.sub(lower.x, this.radius);
  argAabb.get$lowerBound().set$x(t1);
  t1 = $.sub(lower.y, this.radius);
  argAabb.get$lowerBound().set$y(t1);
  t1 = $.add(upper.x, this.radius);
  argAabb.get$upperBound().set$x(t1);
  t1 = $.add(upper.y, this.radius);
  argAabb.get$upperBound().set$y(t1);
},
 computeAxisAlignedBox$2$bailout: function(state0, argAabb, argXf, lower, t1, upper, v) {
  var i;
  $.Transform_mulToOut(argXf, $.index(t1, 0), lower);
  upper.setFrom$1(lower);
  for (i = 1; $.ltB(i, this.vertexCount); ++i) {
    $.Transform_mulToOut(argXf, $.index(t1, i), v);
    lower.x = $.ltB(lower.x, v.x) ? lower.x : v.x;
    lower.y = $.ltB(lower.y, v.y) ? lower.y : v.y;
    upper.x = $.gtB(upper.x, v.x) ? upper.x : v.x;
    upper.y = $.gtB(upper.y, v.y) ? upper.y : v.y;
  }
  t1 = $.sub(lower.x, this.radius);
  argAabb.get$lowerBound().set$x(t1);
  t1 = $.sub(lower.y, this.radius);
  argAabb.get$lowerBound().set$y(t1);
  t1 = $.add(upper.x, this.radius);
  argAabb.get$upperBound().set$x(t1);
  t1 = $.add(upper.y, this.radius);
  argAabb.get$upperBound().set$y(t1);
},
 computeMass$2: function(massData, density) {
  var t1, t2, center, pRef, e1, e2, i, area, I, p2, t3, p3, D, triangleArea, t4, t5, t6, px, py, ex1, ey1, ex2, ey2, t7, t8, t9, intx2, t10, t11;
  if ($.eqB(this.vertexCount, 2)) {
    t1 = massData.center;
    t2 = this.vertices;
    t1.setFrom$1($.index(t2, 0)).addLocal$1($.index(t2, 1)).mulLocal$1(0.5);
    massData.mass = 0;
    massData.inertia = 0;
    return;
  }
  center = $.Vector$(0, 0);
  center.setZero$0();
  pRef = $.Vector$(0, 0);
  pRef.setZero$0();
  e1 = $.Vector$(0, 0);
  e2 = $.Vector$(0, 0);
  t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.computeMass$2$bailout(1, massData, pRef, density, t1, e1, e2, center);
  i = 0;
  area = 0;
  I = 0;
  for (; $.ltB(i, this.vertexCount);) {
    if (i >= t1.length)
      throw $.ioore(i);
    p2 = t1[i];
    ++i;
    t2 = $.ltB(i, this.vertexCount);
    t3 = t1.length;
    if (t2) {
      if (i >= t3)
        throw $.ioore(i);
      p3 = t1[i];
    } else {
      if (0 >= t3)
        throw $.ioore(0);
      p3 = t1[0];
    }
    e1.setFrom$1(p2);
    e1.subLocal$1(pRef);
    e2.setFrom$1(p3);
    e2.subLocal$1(pRef);
    D = $.sub($.mul(e1.x, e2.y), $.mul(e1.y, e2.x));
    if (typeof D !== 'number')
      throw $.iae(D);
    triangleArea = 0.5 * D;
    area += triangleArea;
    t2 = center.x;
    t3 = triangleArea * 0.3333333333333333;
    t4 = $.add($.add(pRef.x, p2.get$x()), p3.get$x());
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    center.x = $.add(t2, t3 * t4);
    t5 = center.y;
    t6 = $.add($.add(pRef.y, p2.get$y()), p3.get$y());
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    center.y = $.add(t5, t3 * t6);
    px = pRef.x;
    py = pRef.y;
    ex1 = e1.x;
    ey1 = e1.y;
    ex2 = e2.x;
    ey2 = e2.y;
    t7 = $.add($.add($.mul(ex1, ex1), $.mul(ex2, ex1)), $.mul(ex2, ex2));
    if (typeof t7 !== 'number')
      throw $.iae(t7);
    t7 = 0.25 * t7;
    t8 = $.add($.mul(px, ex1), $.mul(px, ex2));
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    t9 = 0.3333333333333333 * (t7 + t8);
    if (typeof px !== 'number')
      throw $.iae(px);
    intx2 = t9 + 0.5 * px * px;
    t9 = $.add($.add($.mul(ey1, ey1), $.mul(ey2, ey1)), $.mul(ey2, ey2));
    if (typeof t9 !== 'number')
      throw $.iae(t9);
    t9 = 0.25 * t9;
    t10 = $.add($.mul(py, ey1), $.mul(py, ey2));
    if (typeof t10 !== 'number')
      throw $.iae(t10);
    t11 = 0.3333333333333333 * (t9 + t10);
    if (typeof py !== 'number')
      throw $.iae(py);
    I += D * (intx2 + (t11 + 0.5 * py * py));
  }
  massData.mass = $.mul(density, area);
  center.mulLocal$1(1 / area);
  massData.center.setFrom$1(center);
  if (typeof density !== 'number')
    throw $.iae(density);
  massData.inertia = I * density;
},
 computeMass$2$bailout: function(state0, massData, pRef, density, t1, e1, e2, center) {
  var i, area, I, p2, p3, D, triangleArea, t2, t3, t4, t5, t6, px, py, ex1, ey1, ex2, ey2, t7, t8, t9, intx2, t10, t11;
  i = 0;
  area = 0;
  I = 0;
  for (; $.ltB(i, this.vertexCount);) {
    p2 = $.index(t1, i);
    ++i;
    p3 = $.ltB(i, this.vertexCount) ? $.index(t1, i) : $.index(t1, 0);
    e1.setFrom$1(p2);
    e1.subLocal$1(pRef);
    e2.setFrom$1(p3);
    e2.subLocal$1(pRef);
    D = $.sub($.mul(e1.x, e2.y), $.mul(e1.y, e2.x));
    if (typeof D !== 'number')
      throw $.iae(D);
    triangleArea = 0.5 * D;
    area += triangleArea;
    t2 = center.x;
    t3 = triangleArea * 0.3333333333333333;
    t4 = $.add($.add(pRef.x, p2.get$x()), p3.get$x());
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    center.x = $.add(t2, t3 * t4);
    t5 = center.y;
    t6 = $.add($.add(pRef.y, p2.get$y()), p3.get$y());
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    center.y = $.add(t5, t3 * t6);
    px = pRef.x;
    py = pRef.y;
    ex1 = e1.x;
    ey1 = e1.y;
    ex2 = e2.x;
    ey2 = e2.y;
    t7 = $.add($.add($.mul(ex1, ex1), $.mul(ex2, ex1)), $.mul(ex2, ex2));
    if (typeof t7 !== 'number')
      throw $.iae(t7);
    t7 = 0.25 * t7;
    t8 = $.add($.mul(px, ex1), $.mul(px, ex2));
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    t9 = 0.3333333333333333 * (t7 + t8);
    if (typeof px !== 'number')
      throw $.iae(px);
    intx2 = t9 + 0.5 * px * px;
    t9 = $.add($.add($.mul(ey1, ey1), $.mul(ey2, ey1)), $.mul(ey2, ey2));
    if (typeof t9 !== 'number')
      throw $.iae(t9);
    t9 = 0.25 * t9;
    t10 = $.add($.mul(py, ey1), $.mul(py, ey2));
    if (typeof t10 !== 'number')
      throw $.iae(t10);
    t11 = 0.3333333333333333 * (t9 + t10);
    if (typeof py !== 'number')
      throw $.iae(py);
    I += D * (intx2 + (t11 + 0.5 * py * py));
  }
  massData.mass = $.mul(density, area);
  center.mulLocal$1(1 / area);
  massData.center.setFrom$1(center);
  if (typeof density !== 'number')
    throw $.iae(density);
  massData.inertia = I * density;
},
 PolygonShape$copy$1: function(other) {
  var t1, i, t2;
  t1 = this.vertices;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$copy$1$bailout(1, other, t1);
  i = 0;
  for (; $.ltB(i, $.get$length(other.get$vertices())); ++i) {
    t2 = $.Vector$copy($.index(other.get$vertices(), i));
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  t1 = this.normals;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$copy$1$bailout(2, other, t1);
  i = 0;
  for (; $.ltB(i, $.get$length(other.get$normals())); ++i) {
    t2 = $.Vector$copy($.index(other.get$normals(), i));
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 PolygonShape$copy$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t1 = env1;
      other = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
    case 1:
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(other.get$vertices())); ++i)
        $.indexSet(t1, i, $.Vector$copy($.index(other.get$vertices(), i)));
      t1 = this.normals;
    case 2:
      var t1, other, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(other.get$normals())); ++i)
        $.indexSet(t1, i, $.Vector$copy($.index(other.get$normals(), i)));
  }
},
 PolygonShape$0: function() {
  var t1, i, t2;
  t1 = this.vertices;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$0$bailout(1, t1);
  i = 0;
  for (; i < t1.length; ++i) {
    t2 = $.Vector$(0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  t1 = this.normals;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$0$bailout(2, t1);
  i = 0;
  for (; i < t1.length; ++i) {
    t2 = $.Vector$(0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 PolygonShape$0$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
    case 1:
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        $.indexSet(t1, i, $.Vector$(0, 0));
      t1 = this.normals;
    case 2:
      var t1, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        $.indexSet(t1, i, $.Vector$(0, 0));
  }
}
};

$$.Shape = {"": ["type=", "radius="],
 "super": "Object"
};

$$.Color3 = {"": ["x=", "y=", "z="],
 "super": "Object",
 setFromRGBF$3: function(r, g, b) {
  this.x = $.toInt($.floor(r * 255));
  this.y = $.toInt($.floor(g * 255));
  this.z = $.toInt($.floor(b * 255));
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Color3)
    t1 = $.eqB(this.x, other.x) && $.eqB(this.y, other.y) && $.eqB(this.z, other.z);
  else
    t1 = false;
  return t1;
},
 is$Color3: true
};

$$.Matrix22 = {"": ["col1?", "col2?"],
 "super": "Object",
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Matrix22)
    t1 = $.eqB(this.col1, other.col1) && $.eqB(this.col2, other.col2);
  else
    t1 = false;
  return t1;
},
 setAngle$1: function(angle) {
  var cosin, sin;
  cosin = $.cos(angle);
  sin = $.sin(angle);
  this.col1.setCoords$2(cosin, sin);
  this.col2.setCoords$2(-sin, cosin);
},
 multiplyVectorToOut$2: function(v, out) {
  var tempy = $.add($.mul(this.col1.get$y(), v.x), $.mul(this.col2.get$y(), v.y));
  out.x = $.add($.mul(this.col1.get$x(), v.x), $.mul(this.col2.get$x(), v.y));
  out.y = tempy;
},
 setFrom$1: function(matrix) {
  this.col1.setFrom$1(matrix.get$col1());
  this.col2.setFrom$1(matrix.get$col2());
},
 invertLocal$0: function() {
  var a, b, c, d, det, t1, t2;
  a = this.col1.get$x();
  if (typeof a !== 'number')
    return this.invertLocal$0$bailout(1, a);
  b = this.col2.get$x();
  if (typeof b !== 'number')
    return this.invertLocal$0$bailout(2, a, b);
  c = this.col1.get$y();
  if (typeof c !== 'number')
    return this.invertLocal$0$bailout(3, a, b, c);
  d = this.col2.get$y();
  if (typeof d !== 'number')
    return this.invertLocal$0$bailout(4, d, a, b, c);
  det = a * d - b * c;
  if (!(det === 0))
    det = 1 / det;
  t1 = det * d;
  this.col1.set$x(t1);
  t1 = -det;
  t2 = t1 * b;
  this.col2.set$x(t2);
  t1 *= c;
  this.col1.set$y(t1);
  t1 = det * a;
  this.col2.set$y(t1);
  return this;
},
 invertLocal$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      a = env0;
      break;
    case 2:
      b = env1;
      a = env0;
      break;
    case 3:
      c = env2;
      b = env1;
      a = env0;
      break;
    case 4:
      c = env3;
      b = env2;
      a = env1;
      d = env0;
      break;
  }
  switch (state0) {
    case 0:
      a = this.col1.get$x();
    case 1:
      state0 = 0;
      b = this.col2.get$x();
    case 2:
      state0 = 0;
      c = this.col1.get$y();
    case 3:
      state0 = 0;
      d = this.col2.get$y();
    case 4:
      var a, b, c, d, det, t1;
      state0 = 0;
      det = $.sub($.mul(a, d), $.mul(b, c));
      if (!$.eqB(det, 0)) {
        if (typeof det !== 'number')
          throw $.iae(det);
        det = 1 / det;
      }
      t1 = $.mul(det, d);
      this.col1.set$x(t1);
      t1 = $.mul($.neg(det), b);
      this.col2.set$x(t1);
      t1 = $.mul($.neg(det), c);
      this.col1.set$y(t1);
      t1 = $.mul(det, a);
      this.col2.set$y(t1);
      return this;
  }
},
 addLocal$1: function(other) {
  var t1 = this.col1;
  t1.set$x($.add(t1.get$x(), other.get$col1().get$x()));
  t1 = this.col1;
  t1.set$y($.add(t1.get$y(), other.get$col1().get$y()));
  t1 = this.col2;
  t1.set$x($.add(t1.get$x(), other.get$col2().get$x()));
  t1 = this.col2;
  t1.set$y($.add(t1.get$y(), other.get$col2().get$y()));
  return this;
},
 toString$0: function() {
  return $.S(this.col1) + ', ' + $.S(this.col2);
},
 Matrix22$2: function(c1, c2) {
  if (c1 == null)
    c1 = $.Vector$(0, 0);
  if (c2 == null)
    c2 = $.Vector$(0, 0);
  this.col1 = c1;
  this.col2 = c2;
},
 is$Matrix22: true
};

$$.Sweep = {"": ["localCenter?", "centerZero?", "center?", "angleZero=", "angle="],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.localCenter, other.get$localCenter()) && $.eqB(this.centerZero, other.get$centerZero()) && $.eqB(this.center, other.get$center()) && $.eqB(this.angleZero, other.get$angleZero()) && $.eqB(this.angle, other.get$angle());
},
 setFrom$1: function(other) {
  this.localCenter.setFrom$1(other.get$localCenter());
  this.centerZero.setFrom$1(other.get$centerZero());
  this.center.setFrom$1(other.get$center());
  this.angleZero = other.get$angleZero();
  this.angle = other.get$angle();
},
 normalize$0: function() {
  var t1, t3, d, t5;
  t1 = this.angleZero;
  if (typeof t1 !== 'number')
    return this.normalize$0$bailout(1, t1);
  t3 = $.floor(t1 / 6.283185307179586);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  d = 6.283185307179586 * t3;
  t3 = this.angleZero;
  if (typeof t3 !== 'number')
    return this.normalize$0$bailout(2, d, t3);
  this.angleZero = t3 - d;
  t5 = this.angle;
  if (typeof t5 !== 'number')
    return this.normalize$0$bailout(3, d, t5);
  this.angle = t5 - d;
},
 normalize$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      d = env0;
      break;
    case 3:
      t5 = env1;
      d = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.angleZero;
    case 1:
      state0 = 0;
      t3 = $.floor($.div(t1, 6.283185307179586));
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      d = 6.283185307179586 * t3;
      t3 = this.angleZero;
    case 2:
      state0 = 0;
      this.angleZero = $.sub(t3, d);
      t5 = this.angle;
    case 3:
      var t1, t3, d, t5;
      state0 = 0;
      this.angle = $.sub(t5, d);
  }
},
 getTransform$2: function(xf, alpha) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t10, t12, t13, t16, t18, t20, t22;
  t1 = 1 - alpha;
  t2 = this.centerZero;
  t3 = t2.x;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = t1 * t3;
  t4 = this.center;
  t5 = t4.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t3 += alpha * t5;
  t6 = xf.position;
  t6.x = t3;
  t2 = t2.y;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t2 = t1 * t2;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  t6.y = t2 + alpha * t4;
  t3 = xf.rotation;
  t7 = this.angleZero;
  if (typeof t7 !== 'number')
    throw $.iae(t7);
  t7 = t1 * t7;
  t1 = this.angle;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t3.setAngle$1(t7 + alpha * t1);
  t8 = t6.x;
  if (typeof t8 !== 'number')
    return this.getTransform$2$bailout(1, t8, t3, t6);
  t10 = t3.get$col1().get$x();
  if (typeof t10 !== 'number')
    return this.getTransform$2$bailout(2, t10, t8, t3, t6);
  t12 = this.localCenter;
  t13 = t12.x;
  if (typeof t13 !== 'number')
    return this.getTransform$2$bailout(3, t10, t3, t8, t12, t13, t6);
  t13 = t10 * t13;
  t10 = t3.get$col2().get$x();
  if (typeof t10 !== 'number')
    return this.getTransform$2$bailout(4, t3, t13, t10, t8, t12, t6);
  t16 = t12.y;
  if (typeof t16 !== 'number')
    return this.getTransform$2$bailout(5, t16, t3, t13, t10, t8, t12, t6);
  t6.x = t8 - (t13 + t10 * t16);
  t18 = t6.y;
  if (typeof t18 !== 'number')
    return this.getTransform$2$bailout(6, t18, t12, t3, t6);
  t20 = t3.get$col1().get$y();
  if (typeof t20 !== 'number')
    return this.getTransform$2$bailout(7, t6, t18, t12, t3, t20);
  t22 = t12.x;
  if (typeof t22 !== 'number')
    return this.getTransform$2$bailout(8, t18, t22, t3, t20, t12, t6);
  t22 = t20 * t22;
  t20 = t3.get$col2().get$y();
  if (typeof t20 !== 'number')
    return this.getTransform$2$bailout(9, t18, t22, t12, t6, t20);
  t12 = t12.y;
  if (typeof t12 !== 'number')
    return this.getTransform$2$bailout(10, t12, t18, t22, t6, t20);
  t6.y = t18 - (t22 + t20 * t12);
},
 getTransform$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t6 = env2;
      t3 = env1;
      t8 = env0;
      break;
    case 2:
      t6 = env3;
      t3 = env2;
      t8 = env1;
      t10 = env0;
      break;
    case 3:
      t6 = env5;
      t13 = env4;
      t12 = env3;
      t8 = env2;
      t3 = env1;
      t10 = env0;
      break;
    case 4:
      t6 = env5;
      t12 = env4;
      t8 = env3;
      t10 = env2;
      t13 = env1;
      t3 = env0;
      break;
    case 5:
      t6 = env6;
      t12 = env5;
      t8 = env4;
      t10 = env3;
      t13 = env2;
      t3 = env1;
      t16 = env0;
      break;
    case 6:
      t6 = env3;
      t3 = env2;
      t12 = env1;
      t18 = env0;
      break;
    case 7:
      t20 = env4;
      t3 = env3;
      t12 = env2;
      t18 = env1;
      t6 = env0;
      break;
    case 8:
      t6 = env5;
      t12 = env4;
      t20 = env3;
      t3 = env2;
      t22 = env1;
      t18 = env0;
      break;
    case 9:
      t20 = env4;
      t6 = env3;
      t12 = env2;
      t22 = env1;
      t18 = env0;
      break;
    case 10:
      t20 = env4;
      t6 = env3;
      t22 = env2;
      t18 = env1;
      t12 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = 1 - alpha;
      t2 = this.centerZero;
      t3 = t2.x;
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      t3 = t1 * t3;
      t4 = this.center;
      t5 = t4.x;
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      t3 += alpha * t5;
      t6 = xf.position;
      t6.x = t3;
      t2 = t2.y;
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = t1 * t2;
      t4 = t4.y;
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      t6.y = t2 + alpha * t4;
      t3 = xf.rotation;
      t7 = this.angleZero;
      if (typeof t7 !== 'number')
        throw $.iae(t7);
      t7 = t1 * t7;
      t1 = this.angle;
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      t3.setAngle$1(t7 + alpha * t1);
      t8 = t6.x;
    case 1:
      state0 = 0;
      t10 = t3.get$col1().get$x();
    case 2:
      state0 = 0;
      t12 = this.localCenter;
      t13 = t12.x;
    case 3:
      state0 = 0;
      t13 = $.mul(t10, t13);
      t10 = t3.get$col2().get$x();
    case 4:
      state0 = 0;
      t16 = t12.y;
    case 5:
      state0 = 0;
      t6.x = $.sub(t8, $.add(t13, $.mul(t10, t16)));
      t18 = t6.y;
    case 6:
      state0 = 0;
      t20 = t3.get$col1().get$y();
    case 7:
      state0 = 0;
      t22 = t12.x;
    case 8:
      state0 = 0;
      t22 = $.mul(t20, t22);
      t20 = t3.get$col2().get$y();
    case 9:
      state0 = 0;
      t12 = t12.y;
    case 10:
      var t1, t2, t3, t4, t5, t6, t7, t8, t10, t12, t13, t16, t18, t20, t22;
      state0 = 0;
      t6.y = $.sub(t18, $.add(t22, $.mul(t20, t12)));
  }
},
 advance$1: function(time) {
  var t1, t2, t3, t4, t5, t6;
  t1 = 1 - time;
  t2 = this.centerZero;
  t3 = t2.x;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = t1 * t3;
  t4 = this.center;
  t5 = t4.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t2.x = t3 + time * t5;
  t6 = t2.y;
  if (typeof t6 !== 'number')
    throw $.iae(t6);
  t6 = t1 * t6;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  t2.y = t6 + time * t4;
  t2 = this.angleZero;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t2 = t1 * t2;
  t1 = this.angle;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  this.angleZero = t2 + time * t1;
}
};

$$.Transform = {"": ["position?", "rotation?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.position, other.get$position()) && $.eqB(this.rotation, other.get$rotation());
},
 setFrom$1: function(other) {
  this.position.setFrom$1(other.get$position());
  this.rotation.setFrom$1(other.get$rotation());
}
};

$$.Vector = {"": ["x=", "y="],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 addLocal$1: function(v) {
  this.x = $.add(this.x, v.get$x());
  this.y = $.add(this.y, v.get$y());
  return this;
},
 subLocal$1: function(other) {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.subLocal$1$bailout(1, other, t1);
  t3 = other.get$x();
  if (typeof t3 !== 'number')
    return this.subLocal$1$bailout(2, other, t3, t1);
  this.x = t1 - t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.subLocal$1$bailout(3, other, t5);
  t7 = other.get$y();
  if (typeof t7 !== 'number')
    return this.subLocal$1$bailout(4, t5, t7);
  this.y = t5 - t7;
  return this;
},
 subLocal$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      other = env0;
      break;
    case 3:
      t5 = env1;
      other = env0;
      break;
    case 4:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = other.get$x();
    case 2:
      state0 = 0;
      this.x = $.sub(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = other.get$y();
    case 4:
      var t1, other, t3, t5, t7;
      state0 = 0;
      this.y = $.sub(t5, t7);
      return this;
  }
},
 setCoords$2: function(xCoord, yCoord) {
  this.x = xCoord;
  this.y = yCoord;
  return this;
},
 setFrom$1: function(v) {
  var t1, t2;
  t1 = v.get$x();
  t2 = v.get$y();
  this.x = t1;
  this.y = t2;
  return this;
},
 mulLocal$1: function(d) {
  this.x = $.mul(this.x, d);
  this.y = $.mul(this.y, d);
  return this;
},
 setZero$0: function() {
  this.x = 0;
  this.y = 0;
  return this;
},
 get$length: function() {
  return $.sqrt(this.get$lengthSquared());
},
 length$0: function() { return this.get$length().call$0(); },
 get$lengthSquared: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.add(t1, $.mul(t2, t2));
},
 absLocal$0: function() {
  this.x = $.abs(this.x);
  this.y = $.abs(this.y);
},
 normalize$0: function() {
  var len, invLength, t1, t3;
  len = $.get$length(this);
  if (typeof len !== 'number')
    return this.normalize$0$bailout(1, len);
  if (len < 1.192e-7)
    return 0;
  invLength = 1 / len;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.normalize$0$bailout(2, len, t1, invLength);
  this.x = t1 * invLength;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.normalize$0$bailout(3, len, t3, invLength);
  this.y = t3 * invLength;
  return len;
},
 normalize$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      len = env0;
      break;
    case 2:
      invLength = env2;
      t1 = env1;
      len = env0;
      break;
    case 3:
      invLength = env2;
      t3 = env1;
      len = env0;
      break;
  }
  switch (state0) {
    case 0:
      len = $.get$length(this);
    case 1:
      state0 = 0;
      if ($.ltB(len, 1.192e-7))
        return 0;
      if (typeof len !== 'number')
        throw $.iae(len);
      invLength = 1 / len;
      t1 = this.x;
    case 2:
      state0 = 0;
      this.x = $.mul(t1, invLength);
      t3 = this.y;
    case 3:
      var len, invLength, t1, t3;
      state0 = 0;
      this.y = $.mul(t3, invLength);
      return len;
  }
},
 rotate$1: function(angle) {
  var mtx, temp;
  mtx = $.Matrix22$(null, null);
  mtx.setAngle$1(angle);
  temp = $.Vector$(0, 0);
  mtx.multiplyVectorToOut$2(this, temp);
  return temp;
},
 negateLocal$0: function() {
  var t1, t3;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.negateLocal$0$bailout(1, t1);
  this.x = -t1;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.negateLocal$0$bailout(2, t3);
  this.y = -t3;
  return this;
},
 negateLocal$0$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      this.x = $.neg(t1);
      t3 = this.y;
    case 2:
      var t1, t3;
      state0 = 0;
      this.y = $.neg(t3);
      return this;
  }
},
 toString$0: function() {
  return '(' + $.S(this.x) + ', ' + $.S(this.y) + ')';
}
};

$$.Body = {"": ["world", "flags=", "contactList=", "sleepTime=", "userData=", "_linearVelocity", "_angularVelocity", "mass?", "invMass?", "next=", "prev=", "fixtureList=", "fixtureCount!", "jointList=", "_force?", "_torque=", "_inertia", "invInertia?", "linearDamping=", "angularDamping?", "_lib2_type?", "islandIndex!", "originTransform?", "sweep?", "_fixDef", "_pmd", "_pxf", "oldCenter", "tempCenter"],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 createFixture$1: function(def) {
  var fixture, t1;
  fixture = $.Fixture$();
  fixture.create$2(this, def);
  if ($.eqB($.and(this.flags, 32), 32))
    fixture.createProxy$2(this.world._contactManager.get$broadPhase(), this.originTransform);
  fixture.next = this.fixtureList;
  this.fixtureList = fixture;
  this.fixtureCount = $.add(this.fixtureCount, 1);
  fixture.body = this;
  if ($.gtB(fixture.density, 0))
    this.resetMassData$0();
  t1 = this.world;
  t1._flags = (t1._flags | 1) >>> 0;
  return fixture;
},
 setTransform$2: function(argPosition, argAngle) {
  var t1, t2, t3, t4, t5, broadPhase, f;
  t1 = this.world;
  if ($.eqB(t1.get$locked(), true))
    return;
  t2 = this.originTransform;
  t2.rotation.setAngle$1(argAngle);
  t2.position.setFrom$1(argPosition);
  t3 = this.sweep;
  t4 = t3.localCenter;
  t5 = t3.centerZero;
  $.Transform_mulToOut(t2, t4, t5);
  t3.center.setFrom$1(t5);
  t3.angleZero = argAngle;
  t3.angle = argAngle;
  broadPhase = t1._contactManager.get$broadPhase();
  for (f = this.fixtureList; !(f == null); f = f.get$next())
    f.synchronize$3(broadPhase, t2, t2);
  t1._contactManager.findNewContacts$0();
},
 get$position: function() {
  return this.originTransform.position;
},
 get$angle: function() {
  return this.sweep.angle;
},
 get$worldCenter: function() {
  return this.sweep.center;
},
 get$localCenter: function() {
  return this.sweep.localCenter;
},
 get$linearVelocity: function() {
  return this._linearVelocity;
},
 get$angularVelocity: function() {
  return this._angularVelocity;
},
 set$angularVelocity: function(w) {
  if (!$.eqB(this._lib2_type, 0)) {
    if ($.gtB($.mul(w, w), 0))
      this.set$awake(true);
    this._angularVelocity = w;
  }
},
 applyLinearImpulse$2: function(impulse, point) {
  var t1, t2, t3, t4, t5;
  if (!$.eqB(this._lib2_type, 2))
    return;
  this.set$awake(true);
  t1 = this._linearVelocity;
  t1.x = $.add(t1.x, $.mul(impulse.x, this.invMass));
  t1.y = $.add(t1.y, $.mul(impulse.y, this.invMass));
  t1 = this._angularVelocity;
  t2 = this.invInertia;
  t3 = point.get$x();
  t4 = this.sweep.center;
  t5 = $.sub($.mul($.sub(t3, t4.x), impulse.y), $.mul($.sub(point.get$y(), t4.y), impulse.x));
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  this._angularVelocity = $.add(t1, t2 * t5);
},
 get$inertia: function() {
  var t1, t2, t3, t4;
  t1 = this._inertia;
  t2 = this.mass;
  t3 = this.sweep.localCenter;
  t4 = t3.x;
  t4 = $.mul(t4, t4);
  t3 = t3.y;
  t4 = $.add(t4, $.mul(t3, t3));
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  return t1 + t2 * t4;
},
 getMassData$1: function(data) {
  var lc, t1, t2, t3, t4, t5;
  data.mass = this.mass;
  lc = this.sweep.localCenter;
  t1 = this._inertia;
  t2 = this.mass;
  t3 = lc.get$lengthSquared();
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  data.inertia = t1 + t2 * t3;
  t4 = lc.x;
  t5 = data.center;
  t5.x = t4;
  t5.y = lc.y;
},
 resetMassData$0: function() {
  var t1, t2, t3, massData, f, t4, t5, t6, temp, t7, t8;
  this.mass = 0;
  this.invMass = 0;
  this._inertia = 0;
  this.invInertia = 0;
  t1 = this.sweep;
  t2 = t1.localCenter;
  t2.setZero$0();
  if ($.eqB(this._lib2_type, 0) || $.eqB(this._lib2_type, 1)) {
    t2 = t1.center;
    t3 = this.originTransform.position;
    t2.setFrom$1(t3);
    t1.centerZero.setFrom$1(t3);
    return;
  }
  t3 = this.tempCenter;
  t3.setZero$0();
  massData = this._pmd;
  for (f = this.fixtureList, t4 = massData.center; !(f == null); f = f.get$next()) {
    if ($.eqB(f.get$density(), 0))
      continue;
    f.getMassData$1(massData);
    t5 = this.mass;
    t6 = massData.mass;
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    this.mass = t5 + t6;
    temp = $.Vector$copy(t4);
    temp.mulLocal$1(massData.mass);
    t3.addLocal$1(temp);
    t7 = this._inertia;
    t8 = massData.inertia;
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    this._inertia = t7 + t8;
  }
  t4 = this.mass;
  if (t4 > 0) {
    this.invMass = 1 / t4;
    t3.mulLocal$1(this.invMass);
  } else {
    this.mass = 1;
    this.invMass = 1;
  }
  if (this._inertia > 0 && $.eqB($.and(this.flags, 16), 0)) {
    t4 = this._inertia;
    t5 = this.mass;
    t6 = t3.x;
    t6 = $.mul(t6, t6);
    t7 = t3.y;
    t6 = $.add(t6, $.mul(t7, t7));
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    this._inertia = t4 - t5 * t6;
    this.invInertia = 1 / this._inertia;
  } else {
    this._inertia = 0;
    this.invInertia = 0;
  }
  t4 = this.oldCenter;
  t5 = t1.center;
  t4.setFrom$1(t5);
  t2.setFrom$1(t3);
  t3 = this.originTransform;
  t1 = t1.centerZero;
  $.Transform_mulToOut(t3, t2, t1);
  t5.setFrom$1(t1);
  temp = $.Vector$copy(t5);
  temp.subLocal$1(t4);
  $.Vector_crossNumAndVectorToOut(this._angularVelocity, temp, temp);
  this._linearVelocity.addLocal$1(temp);
},
 getWorldPoint$1: function(localPoint) {
  var v = $.Vector$(0, 0);
  $.Transform_mulToOut(this.originTransform, localPoint, v);
  return v;
},
 getWorldPointToOut$2: function(localPoint, out) {
  $.Transform_mulToOut(this.originTransform, localPoint, out);
},
 getWorldVector$1: function(localVector) {
  var out = $.Vector$(0, 0);
  this.getWorldVectorToOut$2(localVector, out);
  return out;
},
 getWorldVectorToOut$2: function(localVector, out) {
  $.Matrix22_mulMatrixAndVectorToOut(this.originTransform.rotation, localVector, out);
},
 getLinearVelocityFromWorldPointToOut$2: function(worldPoint, out) {
  out.setFrom$1(worldPoint).subLocal$1(this.sweep.center);
  $.Vector_crossNumAndVectorToOut(this._angularVelocity, out, out);
  out.addLocal$1(this._linearVelocity);
},
 getLinearVelocityFromLocalPoint$1: function(localPoint) {
  var out = $.Vector$(0, 0);
  this.getLinearVelocityFromLocalPointToOut$2(localPoint, out);
  return out;
},
 getLinearVelocityFromLocalPointToOut$2: function(localPoint, out) {
  $.Transform_mulToOut(this.originTransform, localPoint, out);
  this.getLinearVelocityFromWorldPointToOut$2(out, out);
},
 get$type: function() {
  return this._lib2_type;
},
 set$type: function(otherType) {
  var ce;
  if ($.eqB(this._lib2_type, otherType))
    return;
  this._lib2_type = otherType;
  this.resetMassData$0();
  if ($.eqB(this._lib2_type, 0)) {
    this._linearVelocity.setZero$0();
    this._angularVelocity = 0;
  }
  this.set$awake(true);
  this._force.setZero$0();
  this._torque = 0;
  for (ce = this.contactList; !(ce == null); ce = ce.get$next())
    ce.get$contact().flagForFiltering$0();
},
 get$bullet: function() {
  return $.eq($.and(this.flags, 8), 8);
},
 set$bullet: function(flag) {
  var t1, t2;
  t1 = flag === true;
  t2 = this.flags;
  if (t1)
    this.flags = $.or(t2, 8);
  else
    this.flags = $.and(t2, 4294967287);
},
 set$awake: function(flag) {
  if (flag === true) {
    if ($.eqB($.and(this.flags, 2), 0)) {
      this.flags = $.or(this.flags, 2);
      this.sleepTime = 0;
    }
  } else {
    this.flags = $.and(this.flags, 4294967293);
    this.sleepTime = 0;
    this._linearVelocity.setZero$0();
    this._angularVelocity = 0;
    this._force.setZero$0();
    this._torque = 0;
  }
},
 get$awake: function() {
  return $.eq($.and(this.flags, 2), 2);
},
 get$active: function() {
  return $.eq($.and(this.flags, 32), 32);
},
 get$fixedRotation: function() {
  return $.eq($.and(this.flags, 16), 16);
},
 synchronizeFixtures$0: function() {
  var xf1, t1, t2, t3, t4, broadPhase, f;
  xf1 = this._pxf;
  t1 = xf1.rotation;
  t2 = this.sweep;
  t1.setAngle$1(t2.angleZero);
  t3 = t2.localCenter;
  t4 = xf1.position;
  $.Matrix22_mulMatrixAndVectorToOut(t1, t3, t4);
  t4.mulLocal$1(-1);
  t4.addLocal$1(t2.centerZero);
  broadPhase = this.world._contactManager.get$broadPhase();
  for (f = this.fixtureList, t1 = this.originTransform; !(f == null); f = f.get$next())
    f.synchronize$3(broadPhase, xf1, t1);
},
 synchronizeTransform$0: function() {
  var t1, c, s, t, r, p, t2, t4, t5, t8, t10, t11, t13, t15, t19;
  t1 = this.sweep;
  c = $.cos(t1.angle);
  s = $.sin(t1.angle);
  t = this.originTransform;
  r = t.rotation;
  p = t.position;
  r.get$col1().set$x(c);
  t2 = -s;
  r.get$col2().set$x(t2);
  r.get$col1().set$y(s);
  r.get$col2().set$y(c);
  t2 = r.get$col1().get$x();
  if (typeof t2 !== 'number')
    return this.synchronizeTransform$0$bailout(1, t2, r, p, t1);
  t4 = t1.localCenter;
  t5 = t4.x;
  if (typeof t5 !== 'number')
    return this.synchronizeTransform$0$bailout(2, r, p, t4, t2, t5, t1);
  t5 = t2 * t5;
  t2 = r.get$col2().get$x();
  if (typeof t2 !== 'number')
    return this.synchronizeTransform$0$bailout(3, t1, r, p, t4, t5, t2);
  t8 = t4.y;
  if (typeof t8 !== 'number')
    return this.synchronizeTransform$0$bailout(4, t1, r, p, t4, t8, t5, t2);
  t10 = (t5 + t2 * t8) * -1;
  t1 = t1.center;
  t11 = t1.x;
  if (typeof t11 !== 'number')
    return this.synchronizeTransform$0$bailout(5, r, p, t4, t10, t1, t11);
  p.x = t10 + t11;
  t13 = r.get$col1().get$y();
  if (typeof t13 !== 'number')
    return this.synchronizeTransform$0$bailout(6, t13, r, p, t1, t4);
  t15 = t4.x;
  if (typeof t15 !== 'number')
    return this.synchronizeTransform$0$bailout(7, t15, r, p, t13, t4, t1);
  t15 = t13 * t15;
  t13 = r.get$col2().get$y();
  if (typeof t13 !== 'number')
    return this.synchronizeTransform$0$bailout(8, t15, t13, p, t1, t4);
  t4 = t4.y;
  if (typeof t4 !== 'number')
    return this.synchronizeTransform$0$bailout(9, t1, t15, t13, t4, p);
  t19 = (t15 + t13 * t4) * -1;
  t1 = t1.y;
  if (typeof t1 !== 'number')
    return this.synchronizeTransform$0$bailout(10, t1, p, t19);
  p.y = t19 + t1;
},
 synchronizeTransform$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t1 = env3;
      p = env2;
      r = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env5;
      t5 = env4;
      t2 = env3;
      t4 = env2;
      p = env1;
      r = env0;
      break;
    case 3:
      t2 = env5;
      t5 = env4;
      t4 = env3;
      p = env2;
      r = env1;
      t1 = env0;
      break;
    case 4:
      t2 = env6;
      t5 = env5;
      t8 = env4;
      t4 = env3;
      p = env2;
      r = env1;
      t1 = env0;
      break;
    case 5:
      t11 = env5;
      t1 = env4;
      t10 = env3;
      t4 = env2;
      p = env1;
      r = env0;
      break;
    case 6:
      t4 = env4;
      t1 = env3;
      p = env2;
      r = env1;
      t13 = env0;
      break;
    case 7:
      t1 = env5;
      t4 = env4;
      t13 = env3;
      p = env2;
      r = env1;
      t15 = env0;
      break;
    case 8:
      t4 = env4;
      t1 = env3;
      p = env2;
      t13 = env1;
      t15 = env0;
      break;
    case 9:
      p = env4;
      t4 = env3;
      t13 = env2;
      t15 = env1;
      t1 = env0;
      break;
    case 10:
      t19 = env2;
      p = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.sweep;
      c = $.cos(t1.angle);
      s = $.sin(t1.angle);
      t = this.originTransform;
      r = t.rotation;
      p = t.position;
      r.get$col1().set$x(c);
      t2 = -s;
      r.get$col2().set$x(t2);
      r.get$col1().set$y(s);
      r.get$col2().set$y(c);
      t2 = r.get$col1().get$x();
    case 1:
      state0 = 0;
      t4 = t1.localCenter;
      t5 = t4.x;
    case 2:
      state0 = 0;
      t5 = $.mul(t2, t5);
      t2 = r.get$col2().get$x();
    case 3:
      state0 = 0;
      t8 = t4.y;
    case 4:
      state0 = 0;
      t10 = $.mul($.add(t5, $.mul(t2, t8)), -1);
      t1 = t1.center;
      t11 = t1.x;
    case 5:
      state0 = 0;
      p.x = $.add(t10, t11);
      t13 = r.get$col1().get$y();
    case 6:
      state0 = 0;
      t15 = t4.x;
    case 7:
      state0 = 0;
      t15 = $.mul(t13, t15);
      t13 = r.get$col2().get$y();
    case 8:
      state0 = 0;
      t4 = t4.y;
    case 9:
      state0 = 0;
      t19 = $.mul($.add(t15, $.mul(t13, t4)), -1);
      t1 = t1.y;
    case 10:
      var t1, c, s, t, r, p, t2, t4, t5, t8, t10, t11, t13, t15, t19;
      state0 = 0;
      p.y = $.add(t19, t1);
  }
},
 shouldCollide$1: function(other) {
  var t1, t3;
  t1 = this._lib2_type;
  if (typeof t1 !== 'number')
    return this.shouldCollide$1$bailout(1, other, t1);
  if (!(t1 === 2)) {
    t1 = other.get$_lib2_type();
    if (typeof t1 !== 'number')
      return this.shouldCollide$1$bailout(2, t1);
    t3 = !(t1 === 2);
    t1 = t3;
  } else
    t1 = false;
  return !t1;
},
 shouldCollide$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._lib2_type;
    case 1:
      state0 = 0;
    case 2:
      var t1, other, t3;
      if (state0 === 2 || state0 === 0 && !$.eqB(t1, 2))
        switch (state0) {
          case 0:
            t1 = other.get$_lib2_type();
          case 2:
            state0 = 0;
            t3 = !$.eqB(t1, 2);
            t1 = t3;
        }
      else
        t1 = false;
      return !t1;
  }
},
 advance$1: function(t) {
  var t1 = this.sweep;
  t1.advance$1(t);
  t1.center.setFrom$1(t1.centerZero);
  t1.angle = t1.angleZero;
  this.synchronizeTransform$0();
},
 Body$2: function(bd, world) {
  var t1, t2, t3, t4;
  if (bd.get$bullet() === true)
    this.flags = $.or(this.flags, 8);
  if (bd.get$fixedRotation() === true)
    this.flags = $.or(this.flags, 16);
  if (bd.get$allowSleep() === true)
    this.flags = $.or(this.flags, 4);
  if (bd.get$awake() === true)
    this.flags = $.or(this.flags, 2);
  if (bd.get$active() === true)
    this.flags = $.or(this.flags, 32);
  t1 = this.originTransform;
  t1.position.setFrom$1(bd.get$position());
  t1.rotation.setAngle$1(bd.get$angle());
  t2 = this.sweep;
  t3 = t2.localCenter;
  t3.setZero$0();
  t4 = t2.centerZero;
  $.Transform_mulToOut(t1, t3, t4);
  t2.center.setFrom$1(t4);
  t2.angle = bd.get$angle();
  t2.angleZero = bd.get$angle();
  if ($.eqB(this._lib2_type, 2)) {
    this.mass = 1;
    this.invMass = 1;
  } else {
    this.mass = 0;
    this.invMass = 0;
  }
}
};

$$.BodyDef = {"": ["type=", "angle=", "userData=", "position?", "linearVelocity?", "angularVelocity=", "fixedRotation?", "isSleeping", "bullet=", "allowSleep?", "linearDamping=", "angularDamping?", "awake=", "active?"],
 "super": "Object"
};

$$.ContactManager = {"": ["broadPhase?", "contactList=", "contactCount?", "contactFilter", "contactListener=", "pool"],
 "super": "Object",
 addPair$2: function(fixtureA, fixtureB) {
  var bodyA, bodyB, edge, t1, fA, fB, c;
  bodyA = fixtureA.get$body();
  bodyB = fixtureB.get$body();
  if (bodyA == null ? bodyB == null : bodyA === bodyB)
    return;
  edge = bodyB.get$contactList();
  for (; !(edge == null);) {
    if ($.eqB(edge.get$other(), bodyA)) {
      t1 = edge.get$contact();
      fA = t1.get$fixtureA();
      fB = t1.get$fixtureB();
      if ($.eqB(fA, fixtureA) && $.eqB(fB, fixtureB))
        return;
      if ($.eqB(fA, fixtureB) && $.eqB(fB, fixtureA))
        return;
    }
    edge = edge.get$next();
  }
  t1 = bodyB.shouldCollide$1(bodyA);
  if (typeof t1 !== 'boolean')
    return this.addPair$2$bailout(1, fixtureA, fixtureB, t1);
  if (!t1)
    return;
  t1 = this.contactFilter;
  t1 = t1.shouldCollide$2(fixtureA, fixtureB);
  if (typeof t1 !== 'boolean')
    return this.addPair$2$bailout(2, fixtureA, fixtureB, t1);
  t1 = !t1;
  if (t1)
    return;
  c = this.pool.popContact$2(fixtureA, fixtureB);
  fixtureA = c.get$fixtureA();
  fixtureB = c.get$fixtureB();
  bodyA = fixtureA.get$body();
  bodyB = fixtureB.get$body();
  c.set$prev(null);
  c.set$next(this.contactList);
  t1 = this.contactList;
  if (!(t1 == null))
    t1.set$prev(c);
  this.contactList = c;
  c.get$edge1().set$contact(c);
  c.get$edge1().set$other(bodyB);
  c.get$edge1().set$prev(null);
  t1 = bodyA.get$contactList();
  c.get$edge1().set$next(t1);
  if (!(bodyA.get$contactList() == null)) {
    t1 = c.get$edge1();
    bodyA.get$contactList().set$prev(t1);
  }
  bodyA.set$contactList(c.get$edge1());
  c.get$edge2().set$contact(c);
  c.get$edge2().set$other(bodyA);
  c.get$edge2().set$prev(null);
  t1 = bodyB.get$contactList();
  c.get$edge2().set$next(t1);
  if (!(bodyB.get$contactList() == null)) {
    t1 = c.get$edge2();
    bodyB.get$contactList().set$prev(t1);
  }
  bodyB.set$contactList(c.get$edge2());
  this.contactCount = this.contactCount + 1;
},
 addPair$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env2;
      fixtureB = env1;
      fixtureA = env0;
      break;
    case 2:
      t1 = env2;
      fixtureB = env1;
      fixtureA = env0;
      break;
  }
  switch (state0) {
    case 0:
      bodyA = fixtureA.get$body();
      bodyB = fixtureB.get$body();
      if (bodyA == null ? bodyB == null : bodyA === bodyB)
        return;
      edge = bodyB.get$contactList();
      for (; !(edge == null);) {
        if ($.eqB(edge.get$other(), bodyA)) {
          t1 = edge.get$contact();
          fA = t1.get$fixtureA();
          fB = t1.get$fixtureB();
          if ($.eqB(fA, fixtureA) && $.eqB(fB, fixtureB))
            return;
          if ($.eqB(fA, fixtureB) && $.eqB(fB, fixtureA))
            return;
        }
        edge = edge.get$next();
      }
      t1 = bodyB.shouldCollide$1(bodyA);
    case 1:
      state0 = 0;
      if ($.eqB(t1, false))
        return;
      t1 = this.contactFilter;
      t1 = t1.shouldCollide$2(fixtureA, fixtureB);
    case 2:
      var bodyA, bodyB, edge, t1, fA, fB, fixtureB, fixtureA, c;
      state0 = 0;
      t1 = $.eqB(t1, false);
      if (t1)
        return;
      c = this.pool.popContact$2(fixtureA, fixtureB);
      fixtureA = c.get$fixtureA();
      fixtureB = c.get$fixtureB();
      bodyA = fixtureA.get$body();
      bodyB = fixtureB.get$body();
      c.set$prev(null);
      c.set$next(this.contactList);
      t1 = this.contactList;
      if (!(t1 == null))
        t1.set$prev(c);
      this.contactList = c;
      c.get$edge1().set$contact(c);
      c.get$edge1().set$other(bodyB);
      c.get$edge1().set$prev(null);
      t1 = bodyA.get$contactList();
      c.get$edge1().set$next(t1);
      if (!(bodyA.get$contactList() == null)) {
        t1 = c.get$edge1();
        bodyA.get$contactList().set$prev(t1);
      }
      bodyA.set$contactList(c.get$edge1());
      c.get$edge2().set$contact(c);
      c.get$edge2().set$other(bodyA);
      c.get$edge2().set$prev(null);
      t1 = bodyB.get$contactList();
      c.get$edge2().set$next(t1);
      if (!(bodyB.get$contactList() == null)) {
        t1 = c.get$edge2();
        bodyB.get$contactList().set$prev(t1);
      }
      bodyB.set$contactList(c.get$edge2());
      this.contactCount = this.contactCount + 1;
  }
},
 findNewContacts$0: function() {
  this.broadPhase.updatePairs$1(this);
},
 destroy$1: function(c) {
  var fixtureA, fixtureB, bodyA, bodyB, t1, t2;
  fixtureA = c.get$fixtureA();
  fixtureB = c.get$fixtureB();
  bodyA = fixtureA.get$body();
  bodyB = fixtureB.get$body();
  if (!(this.contactListener == null) && c.get$touching() === true)
    this.contactListener.endContact$1(c);
  t1 = c.get$prev();
  if (!(t1 == null))
    t1.set$next(c.get$next());
  t1 = c.get$next();
  if (!(t1 == null))
    t1.set$prev(c.get$prev());
  if ($.eqB(c, this.contactList))
    this.contactList = c.get$next();
  t1 = c.get$edge1();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = c.get$edge1();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(c.get$edge1(), bodyA.get$contactList()))
    bodyA.set$contactList(c.get$edge1().get$next());
  t1 = c.get$edge2();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = c.get$edge2();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(c.get$edge2(), bodyB.get$contactList()))
    bodyB.set$contactList(c.get$edge2().get$next());
  this.pool.pushContact$1(c);
  this.contactCount = this.contactCount - 1;
},
 collide$0: function() {
  var c, t1, t2, fixtureA, fixtureB, bodyA, bodyB, c0;
  c = this.contactList;
  for (t1 = this.contactFilter, t2 = this.broadPhase; !(c == null);) {
    fixtureA = c.get$fixtureA();
    fixtureB = c.get$fixtureB();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    if ($.eqB(bodyA.get$awake(), false) && $.eqB(bodyB.get$awake(), false)) {
      c = c.get$next();
      continue;
    }
    if ($.eqB($.and(c.get$flags(), 8), 8)) {
      if ($.eqB(bodyB.shouldCollide$1(bodyA), false)) {
        c0 = c.get$next();
        this.destroy$1(c);
        c = c0;
        continue;
      }
      if ($.eqB(t1.shouldCollide$2(fixtureA, fixtureB), false)) {
        c0 = c.get$next();
        this.destroy$1(c);
        c = c0;
        continue;
      }
      c.set$flags($.and(c.get$flags(), 4294967287));
    }
    if ($.eqB(t2.testOverlap$2(fixtureA.get$proxy(), fixtureB.get$proxy()), false)) {
      c0 = c.get$next();
      this.destroy$1(c);
      c = c0;
      continue;
    }
    c.update$1(this.contactListener);
    c = c.get$next();
  }
}
};

$$.Filter = {"": ["categoryBits?", "maskBits?", "groupIndex?"],
 "super": "Object",
 setFrom$1: function(other) {
  this.categoryBits = other.get$categoryBits();
  this.maskBits = other.get$maskBits();
  this.groupIndex = other.get$groupIndex();
}
};

$$.Fixture = {"": ["box?", "density=", "next=", "body?", "shape=", "friction=", "restitution=", "proxy?", "filter?", "isSensor?", "userData=", "_poolOne", "_poolTwo"],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 create$2: function(b, def) {
  this.userData = def.get$userData();
  this.friction = def.get$friction();
  this.restitution = def.get$restitution();
  this.body = b;
  this.next = null;
  this.filter.setFrom$1(def.get$filter());
  this.isSensor = def.get$isSensor();
  this.shape = def.get$shape().clone$0();
  this.density = def.get$density();
},
 destroy$0: function() {
  this.shape = null;
},
 createProxy$2: function(broadPhase, xf) {
  var t1, t2;
  t1 = this.shape;
  t2 = this.box;
  t1.computeAxisAlignedBox$2(t2, xf);
  this.proxy = broadPhase.createProxy$2(t2, this);
},
 destroyProxy$1: function(broadPhase) {
  var t1 = this.proxy;
  if (t1 == null)
    return;
  broadPhase.destroyProxy$1(t1);
  this.proxy = null;
},
 synchronize$3: function(broadPhase, transformOne, transformTwo) {
  var t1, t2, t3, t5, t4, t6, disp;
  if (this.proxy == null)
    return;
  t1 = this.shape;
  t2 = this._poolOne;
  t1.computeAxisAlignedBox$2(t2, transformOne);
  t1 = this.shape;
  t3 = this._poolTwo;
  t1.computeAxisAlignedBox$2(t3, transformTwo);
  t1 = t2.lowerBound.get$x();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(1, broadPhase, transformOne, transformTwo, t1, t2, t3);
  t5 = t3.lowerBound.get$x();
  if (typeof t5 !== 'number')
    return this.synchronize$3$bailout(2, broadPhase, transformOne, transformTwo, t1, t2, t5, t3);
  t1 = t1 < t5 ? t2.lowerBound.get$x() : t3.lowerBound.get$x();
  t4 = this.box;
  t4.lowerBound.set$x(t1);
  t1 = t2.lowerBound.get$y();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(3, broadPhase, transformOne, transformTwo, t4, t2, t3, t1);
  t6 = t3.lowerBound.get$y();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(4, broadPhase, transformOne, transformTwo, t6, t4, t2, t3, t1);
  t1 = t1 < t6 ? t2.lowerBound.get$y() : t3.lowerBound.get$y();
  t4.lowerBound.set$y(t1);
  t1 = t2.upperBound.get$x();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(5, broadPhase, transformOne, transformTwo, t4, t1, t2, t3);
  t6 = t3.upperBound.get$x();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(6, broadPhase, transformOne, transformTwo, t4, t1, t6, t2, t3);
  t1 = t1 > t6 ? t2.upperBound.get$x() : t3.upperBound.get$x();
  t4.upperBound.set$x(t1);
  t1 = t2.upperBound.get$y();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(7, broadPhase, transformOne, transformTwo, t4, t2, t3, t1);
  t6 = t3.upperBound.get$y();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(8, broadPhase, transformOne, transformTwo, t4, t2, t3, t1, t6);
  t1 = t1 > t6 ? t2.upperBound.get$y() : t3.upperBound.get$y();
  t4.upperBound.set$y(t1);
  disp = t2.lowerBound;
  t2 = transformTwo.position;
  t1 = t2.x;
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(9, broadPhase, transformOne, t4, disp, t2, t1);
  t5 = transformOne.position;
  t6 = t5.x;
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(10, broadPhase, t4, disp, t2, t1, t5, t6);
  disp.set$x(t1 - t6);
  t2 = t2.y;
  if (typeof t2 !== 'number')
    return this.synchronize$3$bailout(11, broadPhase, disp, t5, t4, t2);
  t5 = t5.y;
  if (typeof t5 !== 'number')
    return this.synchronize$3$bailout(12, broadPhase, t5, disp, t4, t2);
  disp.set$y(t2 - t5);
  broadPhase.moveProxy$3(this.proxy, t4, disp);
},
 synchronize$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      t3 = env5;
      t2 = env4;
      t1 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 2:
      t3 = env6;
      t5 = env5;
      t2 = env4;
      t1 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 3:
      t1 = env6;
      t3 = env5;
      t2 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 4:
      t1 = env7;
      t3 = env6;
      t2 = env5;
      t4 = env4;
      t6 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 5:
      t3 = env6;
      t2 = env5;
      t1 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 6:
      t3 = env7;
      t2 = env6;
      t6 = env5;
      t1 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 7:
      t1 = env6;
      t3 = env5;
      t2 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 8:
      t6 = env7;
      t1 = env6;
      t3 = env5;
      t2 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 9:
      t1 = env5;
      t2 = env4;
      disp = env3;
      t4 = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 10:
      t6 = env6;
      t5 = env5;
      t1 = env4;
      t2 = env3;
      disp = env2;
      t4 = env1;
      broadPhase = env0;
      break;
    case 11:
      t2 = env4;
      t4 = env3;
      t5 = env2;
      disp = env1;
      broadPhase = env0;
      break;
    case 12:
      t2 = env4;
      t4 = env3;
      disp = env2;
      t5 = env1;
      broadPhase = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.proxy == null)
        return;
      t1 = this.shape;
      t2 = this._poolOne;
      t1.computeAxisAlignedBox$2(t2, transformOne);
      t1 = this.shape;
      t3 = this._poolTwo;
      t1.computeAxisAlignedBox$2(t3, transformTwo);
      t1 = t2.lowerBound.get$x();
    case 1:
      state0 = 0;
      t5 = t3.lowerBound.get$x();
    case 2:
      state0 = 0;
      t1 = $.ltB(t1, t5) ? t2.lowerBound.get$x() : t3.lowerBound.get$x();
      t4 = this.box;
      t4.lowerBound.set$x(t1);
      t1 = t2.lowerBound.get$y();
    case 3:
      state0 = 0;
      t6 = t3.lowerBound.get$y();
    case 4:
      state0 = 0;
      t1 = $.ltB(t1, t6) ? t2.lowerBound.get$y() : t3.lowerBound.get$y();
      t4.lowerBound.set$y(t1);
      t1 = t2.upperBound.get$x();
    case 5:
      state0 = 0;
      t6 = t3.upperBound.get$x();
    case 6:
      state0 = 0;
      t1 = $.gtB(t1, t6) ? t2.upperBound.get$x() : t3.upperBound.get$x();
      t4.upperBound.set$x(t1);
      t1 = t2.upperBound.get$y();
    case 7:
      state0 = 0;
      t6 = t3.upperBound.get$y();
    case 8:
      state0 = 0;
      t1 = $.gtB(t1, t6) ? t2.upperBound.get$y() : t3.upperBound.get$y();
      t4.upperBound.set$y(t1);
      disp = t2.lowerBound;
      t2 = transformTwo.position;
      t1 = t2.x;
    case 9:
      state0 = 0;
      t5 = transformOne.position;
      t6 = t5.x;
    case 10:
      state0 = 0;
      disp.set$x($.sub(t1, t6));
      t2 = t2.y;
    case 11:
      state0 = 0;
      t5 = t5.y;
    case 12:
      var t1, t2, t3, transformTwo, transformOne, broadPhase, t5, t4, t6, disp;
      state0 = 0;
      disp.set$y($.sub(t2, t5));
      broadPhase.moveProxy$3(this.proxy, t4, disp);
  }
},
 getMassData$1: function(massData) {
  this.shape.computeMass$2(massData, this.density);
},
 get$type: function() {
  return this.shape.get$type();
}
};

$$.FixtureDef = {"": ["shape=", "userData=", "friction=", "restitution=", "density=", "isSensor?", "filter?"],
 "super": "Object",
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 FixtureDef$0: function() {
  var t1 = this.filter;
  t1.categoryBits = 1;
  t1.maskBits = 65535;
  t1.groupIndex = 0;
}
};

$$.Island = {"": ["listener", "bodies", "contacts", "joints", "positions", "velocities", "bodyCount", "jointCount", "contactCount?", "bodyCapacity", "contactCapacity", "jointCapacity", "positionIterationCount", "_contactSolver", "_translation", "impulse"],
 "super": "Object",
 init$4: function(argBodyCapacity, argContactCapacity, argJointCapacity, argListener) {
  var t1, old, i;
  this.bodyCapacity = argBodyCapacity;
  this.contactCapacity = argContactCapacity;
  this.jointCapacity = argJointCapacity;
  this.bodyCount = 0;
  this.contactCount = 0;
  this.listener = argListener;
  t1 = this.bodies;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1)))
    this.bodies = $._ListImpl_List(this.bodyCapacity);
  t1 = this.contacts;
  if (t1 == null || $.gtB(this.contactCapacity, $.get$length(t1)))
    this.contacts = $._ListImpl_List(this.contactCapacity);
  t1 = this.joints;
  if (t1 == null || $.gtB(this.jointCapacity, $.get$length(t1)))
    this.joints = $._ListImpl_List(this.jointCapacity);
  t1 = this.velocities;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))) {
    old = this.velocities;
    if (old == null)
      old = $._ListImpl_List(0);
    this.velocities = $._ListImpl_List(this.bodyCapacity);
    $.setRange$3(this.velocities, 0, $.get$length(old), old);
    i = $.get$length(old);
    if (i !== (i | 0))
      return this.init$4$bailout(1, i);
    for (; $.ltB(i, $.get$length(this.velocities)); ++i)
      $.indexSet(this.velocities, i, $.Velocity$());
  }
  t1 = this.positions;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))) {
    old = this.positions;
    if (old == null)
      old = $._ListImpl_List(0);
    this.positions = $._ListImpl_List(this.bodyCapacity);
    $.setRange$3(this.positions, 0, $.get$length(old), old);
    i = $.get$length(old);
    if (i !== (i | 0))
      return this.init$4$bailout(2, i);
    for (; $.ltB(i, $.get$length(this.positions)); ++i)
      $.indexSet(this.positions, i, $.Position$());
  }
},
 init$4$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      i = env0;
      break;
    case 2:
      i = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.bodyCapacity = argBodyCapacity;
      this.contactCapacity = argContactCapacity;
      this.jointCapacity = argJointCapacity;
      this.bodyCount = 0;
      this.contactCount = 0;
      this.listener = argListener;
      t1 = this.bodies;
      if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1)))
        this.bodies = $._ListImpl_List(this.bodyCapacity);
      t1 = this.contacts;
      if (t1 == null || $.gtB(this.contactCapacity, $.get$length(t1)))
        this.contacts = $._ListImpl_List(this.contactCapacity);
      t1 = this.joints;
      if (t1 == null || $.gtB(this.jointCapacity, $.get$length(t1)))
        this.joints = $._ListImpl_List(this.jointCapacity);
      t1 = this.velocities;
    case 1:
      if (state0 === 1 || state0 === 0 && (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))))
        switch (state0) {
          case 0:
            old = this.velocities;
            if (old == null)
              old = $._ListImpl_List(0);
            this.velocities = $._ListImpl_List(this.bodyCapacity);
            $.setRange$3(this.velocities, 0, $.get$length(old), old);
            i = $.get$length(old);
          case 1:
            state0 = 0;
            for (; $.ltB(i, $.get$length(this.velocities)); i = $.add(i, 1))
              $.indexSet(this.velocities, i, $.Velocity$());
        }
      t1 = this.positions;
    case 2:
      var t1, old, i;
      if (state0 === 2 || state0 === 0 && (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))))
        switch (state0) {
          case 0:
            old = this.positions;
            if (old == null)
              old = $._ListImpl_List(0);
            this.positions = $._ListImpl_List(this.bodyCapacity);
            $.setRange$3(this.positions, 0, $.get$length(old), old);
            i = $.get$length(old);
          case 2:
            state0 = 0;
            for (; $.ltB(i, $.get$length(this.positions)); i = $.add(i, 1))
              $.indexSet(this.positions, i, $.Position$());
        }
  }
},
 clear$0: function() {
  this.bodyCount = 0;
  this.contactCount = 0;
  this.jointCount = 0;
},
 solve$3: function(step, gravity, allowSleep) {
  var i, t1, b, t3, t8, velocityDelta, t13, t15, t18, t20, a, a1, a2, b1, i1, i2, t4, fixtureA, fixtureB, bodyA, bodyB, nonStatic, temp, t5, t2, j, ratio, rotation, t7, t9, contactsOkay, jointsOkay, jointOkay, minSleepTime;
  i = 0;
  while (true) {
    t1 = this.bodyCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(1, step, gravity, allowSleep, i, t1);
    if (!(i < t1))
      break;
    c$0: {
      t1 = this.bodies;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(2, step, gravity, i, allowSleep, t1);
      if (i >= t1.length)
        throw $.ioore(i);
      b = t1[i];
      t1 = b.get$type();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(3, step, gravity, allowSleep, b, t1, i);
      if (!(t1 === 2))
        break c$0;
      t1 = b.get$_force().get$x();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(4, step, gravity, t1, b, allowSleep, i);
      t3 = b.get$invMass();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(5, step, gravity, t1, b, t3, allowSleep, i);
      t3 = t1 * t3;
      t1 = gravity.x;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(6, step, gravity, allowSleep, b, t3, t1, i);
      t1 = t3 + t1;
      t3 = step.dt;
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(7, step, gravity, allowSleep, b, t3, t1, i);
      t3 = t1 * t3;
      t1 = b.get$_force().get$y();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(8, step, gravity, allowSleep, b, i, t3, t1);
      t8 = b.get$invMass();
      if (typeof t8 !== 'number')
        return this.solve$3$bailout(9, step, gravity, allowSleep, b, i, t3, t1, t8);
      t8 = t1 * t8;
      t1 = gravity.y;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(10, step, gravity, allowSleep, b, t1, i, t3, t8);
      t1 = t8 + t1;
      t8 = step.dt;
      if (typeof t8 !== 'number')
        return this.solve$3$bailout(11, step, gravity, t1, b, allowSleep, t8, i, t3);
      velocityDelta = $.Vector$(t3, t1 * t8);
      b.get$linearVelocity().addLocal$1(velocityDelta);
      t3 = b.get$angularVelocity();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(12, step, gravity, allowSleep, b, i, t3);
      t13 = step.dt;
      if (typeof t13 !== 'number')
        return this.solve$3$bailout(13, step, gravity, allowSleep, b, i, t3, t13);
      t15 = b.get$invInertia();
      if (typeof t15 !== 'number')
        return this.solve$3$bailout(14, step, gravity, allowSleep, b, i, t3, t15, t13);
      t15 = t13 * t15;
      t13 = b.get$_torque();
      if (typeof t13 !== 'number')
        return this.solve$3$bailout(15, step, gravity, allowSleep, b, i, t3, t15, t13);
      b.set$angularVelocity(t3 + t15 * t13);
      t18 = step.dt;
      if (typeof t18 !== 'number')
        return this.solve$3$bailout(16, step, gravity, allowSleep, b, i, t18);
      t20 = b.get$linearDamping();
      if (typeof t20 !== 'number')
        return this.solve$3$bailout(17, step, gravity, allowSleep, b, t20, i, t18);
      a = 1 - t18 * t20;
      t1 = a < 1;
      if (0 > (t1 ? a : 1))
        a1 = 0;
      else
        a1 = t1 ? a : 1;
      b.get$linearVelocity().mulLocal$1(a1);
      t1 = step.dt;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(18, step, gravity, allowSleep, b, i, t1);
      t3 = b.get$angularDamping();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(19, step, gravity, allowSleep, b, t3, i, t1);
      a2 = 1 - t1 * t3;
      b1 = a2 < 1 ? a2 : 1;
      t1 = b.get$angularVelocity();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(20, step, gravity, b1, b, t1, allowSleep, i);
      b.set$angularVelocity(t1 * (0 > b1 ? 0 : b1));
    }
    ++i;
  }
  i1 = -1;
  i2 = 0;
  while (true) {
    t1 = this.contactCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(21, step, i1, i2, allowSleep, t1);
    t3 = i2 < t1;
    t4 = this.contacts;
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.solve$3$bailout(22, step, i1, i2, allowSleep, t3, t4);
    if (!t3)
      break;
    if (i2 >= t4.length)
      throw $.ioore(i2);
    fixtureA = t4[i2].get$fixtureA();
    if (i2 >= t4.length)
      throw $.ioore(i2);
    fixtureB = t4[i2].get$fixtureB();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    t1 = bodyA.get$type();
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(24, step, i1, i2, t1, bodyB, allowSleep);
    if (!(t1 === 0)) {
      t1 = bodyB.get$type();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(25, step, i1, i2, t1, allowSleep);
      nonStatic = !(t1 === 0);
    } else
      nonStatic = false;
    if (nonStatic) {
      ++i1;
      t1 = this.contacts;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(26, step, i1, i2, allowSleep, t1);
      if (i1 >= t1.length)
        throw $.ioore(i1);
      temp = t1[i1];
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.solve$3$bailout(27, step, i2, allowSleep, i1, temp, t1);
      t4 = t1.length;
      if (i2 >= t4)
        throw $.ioore(i2);
      t5 = t1[i2];
      if (i1 >= t4)
        throw $.ioore(i1);
      t1[i1] = t5;
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.solve$3$bailout(28, step, i2, allowSleep, i1, temp, t1);
      if (i2 >= t1.length)
        throw $.ioore(i2);
      t1[i2] = temp;
    }
    ++i2;
  }
  t2 = this._contactSolver;
  t2.init$3(t4, t1, step.dtRatio);
  t2.warmStart$0();
  i = 0;
  while (true) {
    t1 = this.jointCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(29, step, t2, allowSleep, t1, i);
    if (!(i < t1))
      break;
    t1 = this.joints;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.solve$3$bailout(30, step, t2, allowSleep, i, t1);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i].initVelocityConstraints$1(step);
    ++i;
  }
  i = 0;
  while (true) {
    t1 = step.velocityIterations;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(31, step, t2, allowSleep, i, t1);
    if (!(i < t1))
      break;
    j = 0;
    while (true) {
      t1 = this.jointCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(32, step, t2, allowSleep, i, t1, j);
      if (!(j < t1))
        break;
      t1 = this.joints;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(33, step, t2, t1, j, i);
      if (j >= t1.length)
        throw $.ioore(j);
      t1[j].solveVelocityConstraints$1(step);
      ++j;
    }
    t2.solveVelocityConstraints$0();
    ++i;
  }
  t2.storeImpulses$0();
  temp = $.Vector$(0, 0);
  t1 = this._translation;
  i = 0;
  while (true) {
    t3 = this.bodyCount;
    if (typeof t3 !== 'number')
      return this.solve$3$bailout(34, i, step, allowSleep, t2, temp, t1, t3);
    if (!(i < t3))
      break;
    c$0: {
      t3 = this.bodies;
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(35, i, step, allowSleep, t2, temp, t1, t3);
      if (i >= t3.length)
        throw $.ioore(i);
      b = t3[i];
      t3 = b.get$type();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(36, i, step, allowSleep, t3, t2, temp, t1, b);
      if (t3 === 0)
        break c$0;
      t1.setFrom$1(b.get$linearVelocity());
      t1.mulLocal$1(step.dt);
      t3 = t1.x;
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(37, i, step, allowSleep, t2, t3, temp, t1, b);
      t3 *= t3;
      t5 = t1.y;
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(38, i, step, allowSleep, t2, t3, t5, temp, t1, b);
      if (t3 + t5 * t5 > 4) {
        t3 = $.get$length(t1);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        ratio = 2 / t3;
        b.get$linearVelocity().mulLocal$1(ratio);
      }
      t3 = step.dt;
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(39, i, step, allowSleep, t2, temp, t1, b, t3);
      t5 = b.get$angularVelocity();
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(40, i, step, allowSleep, t2, temp, t5, t1, b, t3);
      rotation = t3 * t5;
      if (rotation * rotation > 2.4674011002723395) {
        t3 = $.abs(rotation);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        ratio = 1.5707963267948966 / t3;
        t3 = b.get$angularVelocity();
        if (typeof t3 !== 'number')
          return this.solve$3$bailout(41, i, step, allowSleep, t2, ratio, temp, t3, t1, b);
        b.set$angularVelocity(t3 * ratio);
      }
      t3 = b.get$sweep();
      t3.get$centerZero().setFrom$1(t3.get$center());
      t4 = b.get$sweep().get$angle();
      b.get$sweep().set$angleZero(t4);
      temp.setFrom$1(b.get$linearVelocity());
      temp.mulLocal$1(step.dt);
      b.get$sweep().get$center().addLocal$1(temp);
      t4 = b.get$sweep();
      t5 = t4.get$angle();
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(42, i, t4, t5, step, allowSleep, t2, temp, t1, b);
      t7 = step.dt;
      if (typeof t7 !== 'number')
        return this.solve$3$bailout(43, i, t4, t5, step, t7, allowSleep, t2, temp, t1, b);
      t9 = b.get$angularVelocity();
      if (typeof t9 !== 'number')
        return this.solve$3$bailout(44, i, t4, t5, t9, t7, allowSleep, step, t2, temp, t1, b);
      t4.set$angle(t5 + t7 * t9);
      b.synchronizeTransform$0();
    }
    ++i;
  }
  i = 0;
  while (true) {
    t1 = step.positionIterations;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(45, step, t2, allowSleep, t1, i);
    if (!(i < t1))
      break;
    contactsOkay = t2.solvePositionConstraints$1(0.2);
    jointsOkay = true;
    j = 0;
    while (true) {
      t1 = this.jointCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(46, step, t2, allowSleep, jointsOkay, j, contactsOkay, t1, i);
      if (!(j < t1))
        break;
      t1 = this.joints;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(47, t1, step, allowSleep, t2, jointsOkay, j, contactsOkay, i);
      if (j >= t1.length)
        throw $.ioore(j);
      jointOkay = t1[j].solvePositionConstraints$1(0.2);
      jointsOkay = jointsOkay && jointOkay === true;
      ++j;
    }
    if (contactsOkay === true && jointsOkay)
      break;
    ++i;
  }
  this.report$1(t2.constraints);
  if (allowSleep) {
    i = 0;
    minSleepTime = 99999999999999;
    while (true) {
      t1 = this.bodyCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(48, i, step, minSleepTime, t1);
      if (!(i < t1))
        break;
      c$0: {
        t1 = this.bodies;
        if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.solve$3$bailout(49, i, step, minSleepTime, t1);
        if (i >= t1.length)
          throw $.ioore(i);
        b = t1[i];
        t1 = b.get$type();
        if (typeof t1 !== 'number')
          return this.solve$3$bailout(50, i, step, b, t1, minSleepTime);
        if (t1 === 0)
          break c$0;
        t1 = b.get$flags();
        if (t1 !== (t1 | 0))
          return this.solve$3$bailout(51, i, step, b, minSleepTime, t1);
        if ((t1 & 4) === 0) {
          b.set$sleepTime(0);
          minSleepTime = 0;
        }
        t1 = b.get$flags();
        if (t1 !== (t1 | 0))
          return this.solve$3$bailout(52, i, step, b, minSleepTime, t1);
        if ((t1 & 4) !== 0) {
          t1 = b.get$angularVelocity();
          if (typeof t1 !== 'number')
            return this.solve$3$bailout(53, i, step, b, t1, minSleepTime);
          t3 = b.get$angularVelocity();
          if (typeof t3 !== 'number')
            return this.solve$3$bailout(54, i, step, b, t1, t3, minSleepTime);
          if (!(t1 * t3 > 0.0012184696791468343)) {
            t1 = b.get$linearVelocity();
            t2 = b.get$linearVelocity();
            t3 = t1.get$x();
            if (typeof t3 !== 'number')
              return this.solve$3$bailout(55, i, step, t2, t1, b, t3, minSleepTime);
            t5 = t2.get$x();
            if (typeof t5 !== 'number')
              return this.solve$3$bailout(56, i, step, t2, t1, t5, b, t3, minSleepTime);
            t5 = t3 * t5;
            t1 = t1.get$y();
            if (typeof t1 !== 'number')
              return this.solve$3$bailout(57, i, step, t2, b, t5, t1, minSleepTime);
            t2 = t2.get$y();
            if (typeof t2 !== 'number')
              return this.solve$3$bailout(58, i, step, b, t5, t1, t2, minSleepTime);
            t8 = t5 + t1 * t2 > 0.0001;
            t1 = t8;
          } else
            t1 = true;
        } else
          t1 = true;
        if (t1) {
          b.set$sleepTime(0);
          minSleepTime = 0;
        } else {
          t1 = b.get$sleepTime();
          if (typeof t1 !== 'number')
            return this.solve$3$bailout(59, i, step, b, minSleepTime, t1);
          t3 = step.dt;
          if (typeof t3 !== 'number')
            return this.solve$3$bailout(60, i, step, t3, b, minSleepTime, t1);
          b.set$sleepTime(t1 + t3);
          minSleepTime = $.min(minSleepTime, b.get$sleepTime());
        }
      }
      ++i;
    }
    if (minSleepTime >= 0.5) {
      i = 0;
      while (true) {
        t1 = this.bodyCount;
        if (typeof t1 !== 'number')
          return this.solve$3$bailout(61, i, t1);
        if (!(i < t1))
          break;
        t1 = this.bodies;
        if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.solve$3$bailout(62, t1, i);
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i].set$awake(false);
        ++i;
      }
    }
  }
},
 solve$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      t1 = env4;
      i = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 2:
      t1 = env4;
      allowSleep = env3;
      i = env2;
      gravity = env1;
      step = env0;
      break;
    case 3:
      i = env5;
      t1 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 4:
      i = env5;
      allowSleep = env4;
      b = env3;
      t1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 5:
      i = env6;
      allowSleep = env5;
      t3 = env4;
      b = env3;
      t1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 6:
      i = env6;
      t1 = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 7:
      i = env6;
      t1 = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 8:
      t1 = env6;
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 9:
      t8 = env7;
      t1 = env6;
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 10:
      t8 = env7;
      t3 = env6;
      i = env5;
      t1 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 11:
      t3 = env7;
      i = env6;
      t8 = env5;
      allowSleep = env4;
      b = env3;
      t1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 12:
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 13:
      t13 = env6;
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 14:
      t13 = env7;
      t15 = env6;
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 15:
      t13 = env7;
      t15 = env6;
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 16:
      t18 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 17:
      t18 = env6;
      i = env5;
      t20 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 18:
      t1 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 19:
      t1 = env6;
      i = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 20:
      i = env6;
      allowSleep = env5;
      t1 = env4;
      b = env3;
      b1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 21:
      t1 = env4;
      allowSleep = env3;
      i2 = env2;
      i1 = env1;
      step = env0;
      break;
    case 22:
      t3 = env5;
      t1 = env4;
      allowSleep = env3;
      i2 = env2;
      i1 = env1;
      step = env0;
      break;
    case 23:
      fixtureA = env5;
      t1 = env4;
      allowSleep = env3;
      i2 = env2;
      i1 = env1;
      step = env0;
      break;
    case 24:
      allowSleep = env5;
      bodyB = env4;
      t1 = env3;
      i2 = env2;
      i1 = env1;
      step = env0;
      break;
    case 25:
      allowSleep = env4;
      t1 = env3;
      i2 = env2;
      i1 = env1;
      step = env0;
      break;
    case 26:
      t1 = env4;
      allowSleep = env3;
      i2 = env2;
      i1 = env1;
      step = env0;
      break;
    case 27:
      t1 = env5;
      temp = env4;
      i1 = env3;
      allowSleep = env2;
      i2 = env1;
      step = env0;
      break;
    case 28:
      t1 = env5;
      temp = env4;
      i1 = env3;
      allowSleep = env2;
      i2 = env1;
      step = env0;
      break;
    case 29:
      i = env4;
      t2 = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 30:
      t2 = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 31:
      t2 = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 32:
      j = env5;
      t2 = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 33:
      i = env4;
      j = env3;
      t2 = env2;
      t1 = env1;
      step = env0;
      break;
    case 34:
      t3 = env6;
      t2 = env5;
      temp = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 35:
      t3 = env6;
      t2 = env5;
      temp = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 36:
      b = env7;
      t2 = env6;
      temp = env5;
      t1 = env4;
      t3 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 37:
      b = env7;
      t2 = env6;
      temp = env5;
      t3 = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 38:
      b = env8;
      t2 = env7;
      temp = env6;
      t5 = env5;
      t3 = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 39:
      t3 = env7;
      b = env6;
      t2 = env5;
      temp = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 40:
      t3 = env8;
      b = env7;
      t2 = env6;
      t5 = env5;
      temp = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 41:
      b = env8;
      t2 = env7;
      t3 = env6;
      temp = env5;
      ratio = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      i = env0;
      break;
    case 42:
      b = env8;
      t2 = env7;
      temp = env6;
      t1 = env5;
      allowSleep = env4;
      step = env3;
      t5 = env2;
      t4 = env1;
      i = env0;
      break;
    case 43:
      b = env9;
      t2 = env8;
      temp = env7;
      t1 = env6;
      allowSleep = env5;
      t7 = env4;
      step = env3;
      t5 = env2;
      t4 = env1;
      i = env0;
      break;
    case 44:
      b = env10;
      t2 = env9;
      temp = env8;
      t1 = env7;
      step = env6;
      allowSleep = env5;
      t7 = env4;
      t9 = env3;
      t5 = env2;
      t4 = env1;
      i = env0;
      break;
    case 45:
      i = env4;
      t2 = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 46:
      i = env7;
      t2 = env6;
      contactsOkay = env5;
      j = env4;
      jointsOkay = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 47:
      i = env7;
      contactsOkay = env6;
      j = env5;
      jointsOkay = env4;
      t1 = env3;
      allowSleep = env2;
      step = env1;
      t2 = env0;
      break;
    case 48:
      t1 = env3;
      minSleepTime = env2;
      step = env1;
      i = env0;
      break;
    case 49:
      t1 = env3;
      minSleepTime = env2;
      step = env1;
      i = env0;
      break;
    case 50:
      minSleepTime = env4;
      t1 = env3;
      b = env2;
      step = env1;
      i = env0;
      break;
    case 51:
      t1 = env4;
      minSleepTime = env3;
      b = env2;
      step = env1;
      i = env0;
      break;
    case 52:
      t1 = env4;
      minSleepTime = env3;
      b = env2;
      step = env1;
      i = env0;
      break;
    case 53:
      minSleepTime = env4;
      t1 = env3;
      b = env2;
      step = env1;
      i = env0;
      break;
    case 54:
      minSleepTime = env5;
      t3 = env4;
      t1 = env3;
      b = env2;
      step = env1;
      i = env0;
      break;
    case 55:
      minSleepTime = env6;
      t3 = env5;
      b = env4;
      t1 = env3;
      t2 = env2;
      step = env1;
      i = env0;
      break;
    case 56:
      minSleepTime = env7;
      t3 = env6;
      b = env5;
      t5 = env4;
      t1 = env3;
      t2 = env2;
      step = env1;
      i = env0;
      break;
    case 57:
      minSleepTime = env6;
      t1 = env5;
      t5 = env4;
      b = env3;
      t2 = env2;
      step = env1;
      i = env0;
      break;
    case 58:
      minSleepTime = env6;
      t2 = env5;
      t1 = env4;
      t5 = env3;
      b = env2;
      step = env1;
      i = env0;
      break;
    case 59:
      t1 = env4;
      minSleepTime = env3;
      b = env2;
      step = env1;
      i = env0;
      break;
    case 60:
      t1 = env5;
      minSleepTime = env4;
      b = env3;
      t3 = env2;
      step = env1;
      i = env0;
      break;
    case 61:
      t1 = env1;
      i = env0;
      break;
    case 62:
      i = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.bodyCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t1 = this.bodies;
                  case 2:
                    state0 = 0;
                    b = $.index(t1, i);
                    t1 = b.get$type();
                  case 3:
                    state0 = 0;
                    if (!$.eqB(t1, 2))
                      break c$0;
                    t1 = b.get$_force().get$x();
                  case 4:
                    state0 = 0;
                    t3 = b.get$invMass();
                  case 5:
                    state0 = 0;
                    t3 = $.mul(t1, t3);
                    t1 = gravity.x;
                  case 6:
                    state0 = 0;
                    t1 = $.add(t3, t1);
                    t3 = step.dt;
                  case 7:
                    state0 = 0;
                    t3 = $.mul(t1, t3);
                    t1 = b.get$_force().get$y();
                  case 8:
                    state0 = 0;
                    t8 = b.get$invMass();
                  case 9:
                    state0 = 0;
                    t8 = $.mul(t1, t8);
                    t1 = gravity.y;
                  case 10:
                    state0 = 0;
                    t1 = $.add(t8, t1);
                    t8 = step.dt;
                  case 11:
                    state0 = 0;
                    velocityDelta = $.Vector$(t3, $.mul(t1, t8));
                    b.get$linearVelocity().addLocal$1(velocityDelta);
                    t3 = b.get$angularVelocity();
                  case 12:
                    state0 = 0;
                    t13 = step.dt;
                  case 13:
                    state0 = 0;
                    t15 = b.get$invInertia();
                  case 14:
                    state0 = 0;
                    t15 = $.mul(t13, t15);
                    t13 = b.get$_torque();
                  case 15:
                    state0 = 0;
                    b.set$angularVelocity($.add(t3, $.mul(t15, t13)));
                    t18 = step.dt;
                  case 16:
                    state0 = 0;
                    t20 = b.get$linearDamping();
                  case 17:
                    state0 = 0;
                    t20 = $.mul(t18, t20);
                    if (typeof t20 !== 'number')
                      throw $.iae(t20);
                    a = 1 - t20;
                    t1 = a < 1;
                    if (0 > (t1 ? a : 1))
                      a1 = 0;
                    else
                      a1 = t1 ? a : 1;
                    b.get$linearVelocity().mulLocal$1(a1);
                    t1 = step.dt;
                  case 18:
                    state0 = 0;
                    t3 = b.get$angularDamping();
                  case 19:
                    state0 = 0;
                    t3 = $.mul(t1, t3);
                    if (typeof t3 !== 'number')
                      throw $.iae(t3);
                    a2 = 1 - t3;
                    b1 = a2 < 1 ? a2 : 1;
                    t1 = b.get$angularVelocity();
                  case 20:
                    state0 = 0;
                    b.set$angularVelocity($.mul(t1, 0 > b1 ? 0 : b1));
                }
              }
              ++i;
          }
      i1 = -1;
      i2 = 0;
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      L1:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.contactCount;
            case 21:
              state0 = 0;
              t1 = $.ltB(i2, t1);
              t3 = this.contacts;
            case 22:
              state0 = 0;
              if (!t1)
                break L1;
              fixtureA = $.index(t3, i2).get$fixtureA();
              t1 = this.contacts;
            case 23:
              state0 = 0;
              fixtureB = $.index(t1, i2).get$fixtureB();
              bodyA = fixtureA.get$body();
              bodyB = fixtureB.get$body();
              t1 = bodyA.get$type();
            case 24:
              state0 = 0;
            case 25:
              if (state0 === 25 || state0 === 0 && !$.eqB(t1, 0))
                switch (state0) {
                  case 0:
                    t1 = bodyB.get$type();
                  case 25:
                    state0 = 0;
                    nonStatic = !$.eqB(t1, 0);
                }
              else
                nonStatic = false;
            default:
              if (state0 === 28 || state0 === 27 || state0 === 26 || state0 === 0 && nonStatic)
                switch (state0) {
                  case 0:
                    ++i1;
                    t1 = this.contacts;
                  case 26:
                    state0 = 0;
                    temp = $.index(t1, i1);
                    t1 = this.contacts;
                  case 27:
                    state0 = 0;
                    $.indexSet(t1, i1, $.index(t1, i2));
                    t1 = this.contacts;
                  case 28:
                    state0 = 0;
                    $.indexSet(t1, i2, temp);
                }
              ++i2;
          }
      t1 = this._contactSolver;
      t1.init$3(t3, this.contactCount, step.dtRatio);
      t1.warmStart$0();
      i = 0;
    case 29:
    case 30:
      L2:
        while (true)
          switch (state0) {
            case 0:
              t2 = this.jointCount;
            case 29:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L2;
              t2 = this.joints;
            case 30:
              state0 = 0;
              $.index(t2, i).initVelocityConstraints$1(step);
              ++i;
          }
      i = 0;
    case 31:
    case 32:
    case 33:
      L3:
        while (true)
          switch (state0) {
            case 0:
              t2 = step.velocityIterations;
            case 31:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L3;
              j = 0;
            default:
              L4:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = this.jointCount;
                    case 32:
                      state0 = 0;
                      if (!$.ltB(j, t2))
                        break L4;
                      t2 = this.joints;
                    case 33:
                      state0 = 0;
                      $.index(t2, j).solveVelocityConstraints$1(step);
                      ++j;
                  }
              t1.solveVelocityConstraints$0();
              ++i;
          }
      t1.storeImpulses$0();
      temp = $.Vector$(0, 0);
      t2 = this._translation;
      i = 0;
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
      L5:
        while (true)
          switch (state0) {
            case 0:
              t3 = this.bodyCount;
            case 34:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L5;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t3 = this.bodies;
                  case 35:
                    state0 = 0;
                    b = $.index(t3, i);
                    t3 = b.get$type();
                  case 36:
                    state0 = 0;
                    if ($.eqB(t3, 0))
                      break c$0;
                    t2.setFrom$1(b.get$linearVelocity());
                    t2.mulLocal$1(step.dt);
                    t3 = t2.x;
                  case 37:
                    state0 = 0;
                    t3 = $.mul(t3, t3);
                    t5 = t2.y;
                  case 38:
                    state0 = 0;
                    if ($.gtB($.add(t3, $.mul(t5, t5)), 4)) {
                      t3 = $.get$length(t2);
                      if (typeof t3 !== 'number')
                        throw $.iae(t3);
                      ratio = 2 / t3;
                      b.get$linearVelocity().mulLocal$1(ratio);
                    }
                    t3 = step.dt;
                  case 39:
                    state0 = 0;
                    t5 = b.get$angularVelocity();
                  case 40:
                    state0 = 0;
                    rotation = $.mul(t3, t5);
                  case 41:
                    if (state0 === 41 || state0 === 0 && $.gtB($.mul(rotation, rotation), 2.4674011002723395))
                      switch (state0) {
                        case 0:
                          t3 = $.abs(rotation);
                          if (typeof t3 !== 'number')
                            throw $.iae(t3);
                          ratio = 1.5707963267948966 / t3;
                          t3 = b.get$angularVelocity();
                        case 41:
                          state0 = 0;
                          b.set$angularVelocity($.mul(t3, ratio));
                      }
                    t3 = b.get$sweep();
                    t3.get$centerZero().setFrom$1(t3.get$center());
                    t4 = b.get$sweep().get$angle();
                    b.get$sweep().set$angleZero(t4);
                    temp.setFrom$1(b.get$linearVelocity());
                    temp.mulLocal$1(step.dt);
                    b.get$sweep().get$center().addLocal$1(temp);
                    t4 = b.get$sweep();
                    t5 = t4.get$angle();
                  case 42:
                    state0 = 0;
                    t7 = step.dt;
                  case 43:
                    state0 = 0;
                    t9 = b.get$angularVelocity();
                  case 44:
                    state0 = 0;
                    t4.set$angle($.add(t5, $.mul(t7, t9)));
                    b.synchronizeTransform$0();
                }
              }
              ++i;
          }
      i = 0;
    case 45:
    case 46:
    case 47:
      L6:
        while (true)
          switch (state0) {
            case 0:
              t2 = step.positionIterations;
            case 45:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L6;
              contactsOkay = t1.solvePositionConstraints$1(0.2);
              jointsOkay = true;
              j = 0;
            default:
              L7:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = this.jointCount;
                    case 46:
                      state0 = 0;
                      if (!$.ltB(j, t2))
                        break L7;
                      t2 = this.joints;
                    case 47:
                      state0 = 0;
                      jointOkay = $.index(t2, j).solvePositionConstraints$1(0.2);
                      jointsOkay = jointsOkay && jointOkay === true;
                      ++j;
                  }
              if (contactsOkay === true && jointsOkay)
                break L6;
              ++i;
          }
      this.report$1(t1.constraints);
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
      var i, t1, allowSleep, gravity, step, b, t3, t8, velocityDelta, t13, t15, t18, t20, a, a1, a2, b1, i1, i2, fixtureA, fixtureB, bodyA, bodyB, nonStatic, temp, t2, j, t5, ratio, rotation, t4, t7, t9, contactsOkay, jointsOkay, jointOkay, minSleepTime;
      if (state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 0 && allowSleep)
        switch (state0) {
          case 0:
            i = 0;
            minSleepTime = 99999999999999;
          default:
            L8:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = this.bodyCount;
                  case 48:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L8;
                  default:
                    c$0: {
                      switch (state0) {
                        case 0:
                          t1 = this.bodies;
                        case 49:
                          state0 = 0;
                          b = $.index(t1, i);
                          t1 = b.get$type();
                        case 50:
                          state0 = 0;
                          if ($.eqB(t1, 0))
                            break c$0;
                          t1 = b.get$flags();
                        case 51:
                          state0 = 0;
                          if ($.eqB($.and(t1, 4), 0)) {
                            b.set$sleepTime(0);
                            minSleepTime = 0;
                          }
                          t1 = b.get$flags();
                        case 52:
                          state0 = 0;
                        default:
                          if (state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 0 && !$.eqB($.and(t1, 4), 0))
                            switch (state0) {
                              case 0:
                                t1 = b.get$angularVelocity();
                              case 53:
                                state0 = 0;
                                t3 = b.get$angularVelocity();
                              case 54:
                                state0 = 0;
                              default:
                                if (state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 0 && !$.gtB($.mul(t1, t3), 0.0012184696791468343))
                                  switch (state0) {
                                    case 0:
                                      t1 = b.get$linearVelocity();
                                      t2 = b.get$linearVelocity();
                                      t3 = t1.get$x();
                                    case 55:
                                      state0 = 0;
                                      t5 = t2.get$x();
                                    case 56:
                                      state0 = 0;
                                      t5 = $.mul(t3, t5);
                                      t1 = t1.get$y();
                                    case 57:
                                      state0 = 0;
                                      t2 = t2.get$y();
                                    case 58:
                                      state0 = 0;
                                      t8 = $.gtB($.add(t5, $.mul(t1, t2)), 0.0001);
                                      t1 = t8;
                                  }
                                else
                                  t1 = true;
                            }
                          else
                            t1 = true;
                        case 59:
                        case 60:
                          if (state0 === 0 && t1) {
                            b.set$sleepTime(0);
                            minSleepTime = 0;
                          } else
                            switch (state0) {
                              case 0:
                                t1 = b.get$sleepTime();
                              case 59:
                                state0 = 0;
                                t3 = step.dt;
                              case 60:
                                state0 = 0;
                                b.set$sleepTime($.add(t1, t3));
                                minSleepTime = $.min(minSleepTime, b.get$sleepTime());
                            }
                      }
                    }
                    ++i;
                }
          case 61:
          case 62:
            if (state0 === 62 || state0 === 61 || state0 === 0 && minSleepTime >= 0.5)
              switch (state0) {
                case 0:
                  i = 0;
                default:
                  L9:
                    while (true)
                      switch (state0) {
                        case 0:
                          t1 = this.bodyCount;
                        case 61:
                          state0 = 0;
                          if (!$.ltB(i, t1))
                            break L9;
                          t1 = this.bodies;
                        case 62:
                          state0 = 0;
                          $.index(t1, i).set$awake(false);
                          ++i;
                      }
              }
        }
  }
},
 addBody$1: function(body) {
  var t1, t3;
  body.set$islandIndex(this.bodyCount);
  t1 = this.bodies;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addBody$1$bailout(1, body, t1);
  t3 = this.bodyCount;
  if (typeof t3 !== 'number')
    return this.addBody$1$bailout(2, body, t1, t3);
  this.bodyCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = body;
},
 addBody$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      body = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      body = env0;
      break;
  }
  switch (state0) {
    case 0:
      body.set$islandIndex(this.bodyCount);
      t1 = this.bodies;
    case 1:
      state0 = 0;
      t3 = this.bodyCount;
    case 2:
      var t1, body, t3;
      state0 = 0;
      this.bodyCount = $.add(t3, 1);
      $.indexSet(t1, t3, body);
  }
},
 addContact$1: function(contact) {
  var t1, t3;
  t1 = this.contacts;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addContact$1$bailout(1, contact, t1);
  t3 = this.contactCount;
  if (typeof t3 !== 'number')
    return this.addContact$1$bailout(2, contact, t1, t3);
  this.contactCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = contact;
},
 addContact$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      contact = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      contact = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.contacts;
    case 1:
      state0 = 0;
      t3 = this.contactCount;
    case 2:
      var t1, contact, t3;
      state0 = 0;
      this.contactCount = $.add(t3, 1);
      $.indexSet(t1, t3, contact);
  }
},
 addJoint$1: function(joint) {
  var t1, t3;
  t1 = this.joints;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addJoint$1$bailout(1, joint, t1);
  t3 = this.jointCount;
  if (typeof t3 !== 'number')
    return this.addJoint$1$bailout(2, joint, t1, t3);
  this.jointCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = joint;
},
 addJoint$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      joint = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      joint = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.joints;
    case 1:
      state0 = 0;
      t3 = this.jointCount;
    case 2:
      var t1, joint, t3;
      state0 = 0;
      this.jointCount = $.add(t3, 1);
      $.indexSet(t1, t3, joint);
  }
},
 report$1: function(constraints) {
  var t1, t2, t3, t4, t5, i, c, cc, j, t6;
  if (this.listener == null)
    return;
  for (t1 = this.impulse, t2 = t1.normalImpulses, t3 = t2.length, t4 = t1.tangentImpulses, t5 = t4.length, i = 0; $.ltB(i, this.contactCount); ++i) {
    c = $.index(this.contacts, i);
    if (i >= constraints.length)
      throw $.ioore(i);
    cc = constraints[i];
    for (j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
      t6 = $.index(cc.get$points(), j).get$normalImpulse();
      if (j >= t3)
        throw $.ioore(j);
      t2[j] = t6;
      t6 = $.index(cc.get$points(), j).get$tangentImpulse();
      if (j >= t5)
        throw $.ioore(j);
      t4[j] = t6;
    }
    this.listener.postSolve$2(c, t1);
  }
}
};

$$.Position = {"": ["x=", "a="],
 "super": "Object",
 Position$0: function() {
  this.x = $.Vector$(0, 0);
  this.a = 0;
}
};

$$.Velocity = {"": ["v?", "a="],
 "super": "Object",
 Velocity$0: function() {
  this.v = $.Vector$(0, 0);
  this.a = 0;
}
};

$$.TimeStep = {"": ["dt", "inv_dt", "dtRatio", "velocityIterations", "positionIterations", "warmStarting"],
 "super": "Object"
};

$$.World = {"": ["_flags", "_contactManager", "_bodyList", "_jointList", "_bodyCount", "_jointCount", "_gravity", "_allowSleep", "_debugDraw", "_fixtureDestructionListener", "_jointDestructionListener", "_pool", "_inverseTimestep", "_warmStarting", "_continuousPhysics", "_contactStacks", "center?", "axis", "timestep", "cA", "cB", "wqwrapper", "toiInput", "toiOutput", "backup", "toiSolver", "contacts", "island", "stack"],
 "super": "Object",
 _fixtureDestructionListener$1: function(arg0) { return this._fixtureDestructionListener.call$1(arg0); },
 _jointDestructionListener$1: function(arg0) { return this._jointDestructionListener.call$1(arg0); },
 _addType$3: function(creatorStack, type1, type2) {
  var register, t1, t2, register2;
  register = $.ContactRegister$();
  register.creator = creatorStack;
  register.primary = true;
  t1 = this._contactStacks;
  t2 = t1.length;
  if (type1 < 0 || type1 >= t2)
    throw $.ioore(type1);
  $.indexSet(t1[type1], type2, register);
  if (type1 !== type2) {
    register2 = $.ContactRegister$();
    register2.creator = creatorStack;
    register2.primary = false;
    if (type2 < 0 || type2 >= t2)
      throw $.ioore(type2);
    $.indexSet(t1[type2], type1, register2);
  }
},
 _initializeRegisters$0: function() {
  var t1 = this._pool;
  this._addType$3(t1.getCircleContactStack$0(), 0, 0);
  this._addType$3(t1.getPolyCircleContactStack$0(), 1, 0);
  this._addType$3(t1.getPolyContactStack$0(), 1, 1);
},
 popContact$2: function(fixtureA, fixtureB) {
  var type1, type2, t1, reg, creator, c;
  type1 = fixtureA.get$type();
  type2 = fixtureB.get$type();
  t1 = this._contactStacks;
  if (type1 !== (type1 | 0))
    throw $.iae(type1);
  if (type1 < 0 || type1 >= t1.length)
    throw $.ioore(type1);
  reg = $.index(t1[type1], type2);
  creator = reg.get$creator();
  if (!(creator == null)) {
    if ($.get$isEmpty(creator) === true)
      creator = this._getFreshContactStack$2(type1, type2);
    if (reg.get$primary() === true) {
      c = creator.removeFirst$0();
      c.init$2(fixtureA, fixtureB);
      return c;
    } else {
      c = creator.removeFirst$0();
      c.init$2(fixtureB, fixtureA);
      return c;
    }
  } else
    return;
},
 _getFreshContactStack$2: function(type1, type2) {
  var t1, t2;
  if (type1 === 0 && $.eqB(type2, 0))
    return this._pool.getCircleContactStack$0();
  else {
    t1 = type1 === 1 && $.eqB(type2, 1);
    t2 = this._pool;
    if (t1)
      return t2.getPolyContactStack$0();
    else
      return t2.getPolyCircleContactStack$0();
  }
},
 pushContact$1: function(contact) {
  var type1, type2, t1;
  if ($.gtB(contact.get$manifold().get$pointCount(), 0)) {
    contact.get$fixtureA().get$body().set$awake(true);
    contact.get$fixtureB().get$body().set$awake(true);
  }
  type1 = contact.get$fixtureA().get$type();
  type2 = contact.get$fixtureB().get$type();
  t1 = this._contactStacks;
  if (type1 !== (type1 | 0))
    throw $.iae(type1);
  if (type1 < 0 || type1 >= t1.length)
    throw $.ioore(type1);
  $.index(t1[type1], type2).get$creator().addFirst$1(contact);
},
 set$contactListener: function(listener) {
  this._contactManager.set$contactListener(listener);
},
 get$contactListener: function() {
  return this._contactManager.get$contactListener();
},
 createBody$1: function(def) {
  var b, t1;
  if (this.get$locked() === true)
    return;
  b = $.Body$(def, this);
  b.prev = null;
  b.next = this._bodyList;
  t1 = this._bodyList;
  if (!(t1 == null))
    t1.set$prev(b);
  this._bodyList = b;
  this._bodyCount = this._bodyCount + 1;
  return b;
},
 destroyJoint$1: function(joint) {
  var collideConnected, t1, bodyA, bodyB, t2, edge;
  if (this.get$locked() === true)
    return;
  collideConnected = joint.get$collideConnected();
  if (typeof collideConnected !== 'boolean')
    return this.destroyJoint$1$bailout(1, joint, collideConnected);
  t1 = joint.get$_prev();
  if (!(t1 == null))
    t1.set$_lib2_next(joint.get$_lib2_next());
  t1 = joint.get$_lib2_next();
  if (!(t1 == null))
    t1.set$_prev(joint.get$_prev());
  if ($.eqB(joint, this._jointList))
    this._jointList = joint.get$_lib2_next();
  bodyA = joint.get$bodyA();
  bodyB = joint.get$bodyB();
  bodyA.set$awake(true);
  bodyB.set$awake(true);
  t1 = joint.get$edgeA();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeA();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeA(), bodyA.get$jointList()))
    bodyA.set$jointList(joint.get$edgeA().get$next());
  joint.get$edgeA().set$prev(null);
  joint.get$edgeA().set$next(null);
  t1 = joint.get$edgeB();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeB();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeB(), bodyB.get$jointList()))
    bodyB.set$jointList(joint.get$edgeB().get$next());
  joint.get$edgeB().set$prev(null);
  joint.get$edgeB().set$next(null);
  joint.destructor$0();
  this._jointCount = this._jointCount - 1;
  if (!collideConnected) {
    edge = bodyB.get$contactList();
    for (; !(edge == null);) {
      if ($.eqB(edge.get$other(), bodyA))
        edge.get$contact().flagForFiltering$0();
      edge = edge.get$next();
    }
  }
},
 destroyJoint$1$bailout: function(state0, joint, collideConnected) {
  var t1, bodyA, bodyB, t2, edge;
  t1 = joint.get$_prev();
  if (!(t1 == null))
    t1.set$_lib2_next(joint.get$_lib2_next());
  t1 = joint.get$_lib2_next();
  if (!(t1 == null))
    t1.set$_prev(joint.get$_prev());
  if ($.eqB(joint, this._jointList))
    this._jointList = joint.get$_lib2_next();
  bodyA = joint.get$bodyA();
  bodyB = joint.get$bodyB();
  bodyA.set$awake(true);
  bodyB.set$awake(true);
  t1 = joint.get$edgeA();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeA();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeA(), bodyA.get$jointList()))
    bodyA.set$jointList(joint.get$edgeA().get$next());
  joint.get$edgeA().set$prev(null);
  joint.get$edgeA().set$next(null);
  t1 = joint.get$edgeB();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeB();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeB(), bodyB.get$jointList()))
    bodyB.set$jointList(joint.get$edgeB().get$next());
  joint.get$edgeB().set$prev(null);
  joint.get$edgeB().set$next(null);
  joint.destructor$0();
  this._jointCount = this._jointCount - 1;
  if ($.eqB(collideConnected, false)) {
    edge = bodyB.get$contactList();
    for (; !(edge == null);) {
      if ($.eqB(edge.get$other(), bodyA))
        edge.get$contact().flagForFiltering$0();
      edge = edge.get$next();
    }
  }
},
 destroyBody$1: function(body) {
  var je, t1, je0, ce, ce0, f, f0;
  if (this.get$locked() === true)
    return;
  je = body.get$jointList();
  for (t1 = !(this._jointDestructionListener == null); !(je == null); je = je0) {
    je0 = je.get$next();
    if (t1)
      this._jointDestructionListener$1(je.get$joint());
    this.destroyJoint$1(je.get$joint());
  }
  body.set$jointList(null);
  ce = body.get$contactList();
  for (; !(ce == null); ce = ce0) {
    ce0 = ce.get$next();
    this._contactManager.destroy$1(ce.get$contact());
  }
  body.set$contactList(null);
  f = body.get$fixtureList();
  for (t1 = !(this._fixtureDestructionListener == null); !(f == null); f = f0) {
    f0 = f.get$next();
    if (t1)
      this._fixtureDestructionListener$1(f);
    f.destroyProxy$1(this._contactManager.get$broadPhase());
    f.destroy$0();
  }
  body.set$fixtureList(null);
  body.set$fixtureCount(0);
  t1 = body.get$prev();
  if (!(t1 == null))
    t1.set$next(body.get$next());
  t1 = body.get$next();
  if (!(t1 == null))
    t1.set$prev(body.get$prev());
  if ($.eqB(body, this._bodyList))
    this._bodyList = body.get$next();
  this._bodyCount = this._bodyCount - 1;
},
 step$3: function(dt, velocityIterations, positionIterations) {
  var t1, t2;
  if ((this._flags & 1) === 1) {
    this._contactManager.findNewContacts$0();
    this._flags = (this._flags & 4294967294) >>> 0;
  }
  this._flags = (this._flags | 2) >>> 0;
  t1 = this.timestep;
  t1.dt = dt;
  t1.velocityIterations = velocityIterations;
  t1.positionIterations = positionIterations;
  if ($.gtB(dt, 0)) {
    if (typeof dt !== 'number')
      throw $.iae(dt);
    t1.inv_dt = 1 / dt;
  } else
    t1.inv_dt = 0;
  t2 = this._inverseTimestep;
  if (typeof dt !== 'number')
    throw $.iae(dt);
  t1.dtRatio = t2 * dt;
  t1.warmStarting = this._warmStarting;
  this._contactManager.collide$0();
  if ($.gtB(t1.dt, 0))
    this.solve$1(t1);
  if (this._continuousPhysics && $.gtB(t1.dt, 0))
    this.solveTimeOfImpact$0();
  if ($.gtB(t1.dt, 0))
    this._inverseTimestep = t1.inv_dt;
  if ((this._flags & 4) === 4)
    this.clearForces$0();
  this._flags = (this._flags & 4294967293) >>> 0;
},
 clearForces$0: function() {
  var body;
  for (var body = this._bodyList; !(body == null); body = body.get$next()) {
    body.get$_force().setZero$0();
    body.set$_torque(0);
  }
},
 drawDebugData$0: function() {
  var t1, drawFlags, xf, color, b, f, j, c, t2, t3, fixtureA, fixtureB, aabb, vs, i;
  t1 = this._debugDraw;
  if (t1 == null)
    return;
  drawFlags = t1.get$flags();
  if (drawFlags !== (drawFlags | 0))
    return this.drawDebugData$0$bailout(1, t1, drawFlags);
  if ((drawFlags & 1) === 1) {
    xf = $.Transform$();
    color = $.Color3$();
    for (b = this._bodyList; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      for (f = b.get$fixtureList(); !(f == null); f = f.get$next())
        if ($.eqB(b.get$active(), false)) {
          color.setFromRGBF$3(0.5, 0.5, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 0)) {
          color.setFromRGBF$3(0.5, 0.9, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 1)) {
          color.setFromRGBF$3(0.5, 0.5, 0.9);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$awake(), false)) {
          color.setFromRGBF$3(0.9, 0.9, 0.9);
          this.drawShape$3(f, xf, color);
        } else {
          color.setFromRGBF$3(0.9, 0.7, 0.7);
          this.drawShape$3(f, xf, color);
        }
    }
  }
  if ((drawFlags & 2) === 2)
    for (j = this._jointList; !(j == null); j = j.get$_lib2_next())
      this.drawJoint$1(j);
  if ((drawFlags & 8) === 8) {
    color = $.Color3$fromRGBF(0.3, 0.9, 0.9);
    for (c = this._contactManager.get$contactList(), t2 = this.cA, t3 = this.cB; !(c == null); c = c.get$next()) {
      fixtureA = c.get$fixtureA();
      fixtureB = c.get$fixtureB();
      t2.setFrom$1(fixtureA.get$box().get$center());
      t3.setFrom$1(fixtureB.get$box().get$center());
      t1.drawSegment$3(t2, t3, color);
    }
  }
  if ((drawFlags & 4) === 4) {
    color = $.Color3$fromRGBF(0.9, 0.3, 0.9);
    for (b = this._bodyList, t2 = 0 !== (drawFlags & 64); !(b == null); b = b.get$next()) {
      if (b.get$active() !== true)
        continue;
      for (f = b.get$fixtureList(); !(f == null); f = f.get$next()) {
        aabb = f.get$proxy().get$box();
        vs = $._ListImpl_List(4);
        for (i = 0; i < 4; ++i)
          vs[i] = $.Vector$(0, 0);
        vs[0].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$lowerBound().get$y());
        vs[1].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$lowerBound().get$y());
        vs[2].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$upperBound().get$y());
        vs[3].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$upperBound().get$y());
        if (t2)
          t1.drawPolygon$3(vs, 4, color);
        else
          t1.drawSolidPolygon$3(vs, 4, color);
      }
    }
  }
  if ((drawFlags & 16) === 16) {
    xf = $.Transform$();
    color = $.Color3$fromRGB(1, 0, 0);
    for (b = this._bodyList, t2 = xf.position; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      t2.setFrom$1(b.get$worldCenter());
      t1.drawTransform$2(xf, color);
    }
  }
},
 drawDebugData$0$bailout: function(state0, t1, drawFlags) {
  var xf, color, b, f, j, c, t2, t3, fixtureA, fixtureB, aabb, vs, i;
  if ($.eqB($.and(drawFlags, 1), 1)) {
    xf = $.Transform$();
    color = $.Color3$();
    for (b = this._bodyList; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      for (f = b.get$fixtureList(); !(f == null); f = f.get$next())
        if ($.eqB(b.get$active(), false)) {
          color.setFromRGBF$3(0.5, 0.5, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 0)) {
          color.setFromRGBF$3(0.5, 0.9, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 1)) {
          color.setFromRGBF$3(0.5, 0.5, 0.9);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$awake(), false)) {
          color.setFromRGBF$3(0.9, 0.9, 0.9);
          this.drawShape$3(f, xf, color);
        } else {
          color.setFromRGBF$3(0.9, 0.7, 0.7);
          this.drawShape$3(f, xf, color);
        }
    }
  }
  if ($.eqB($.and(drawFlags, 2), 2))
    for (j = this._jointList; !(j == null); j = j.get$_lib2_next())
      this.drawJoint$1(j);
  if ($.eqB($.and(drawFlags, 8), 8)) {
    color = $.Color3$fromRGBF(0.3, 0.9, 0.9);
    for (c = this._contactManager.get$contactList(), t2 = this.cA, t3 = this.cB; !(c == null); c = c.get$next()) {
      fixtureA = c.get$fixtureA();
      fixtureB = c.get$fixtureB();
      t2.setFrom$1(fixtureA.get$box().get$center());
      t3.setFrom$1(fixtureB.get$box().get$center());
      t1.drawSegment$3(t2, t3, color);
    }
  }
  if ($.eqB($.and(drawFlags, 4), 4)) {
    color = $.Color3$fromRGBF(0.9, 0.3, 0.9);
    for (b = this._bodyList; !(b == null); b = b.get$next()) {
      if (b.get$active() !== true)
        continue;
      for (f = b.get$fixtureList(); !(f == null); f = f.get$next()) {
        aabb = f.get$proxy().get$box();
        vs = $._ListImpl_List(4);
        for (i = 0; i < 4; ++i)
          vs[i] = $.Vector$(0, 0);
        vs[0].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$lowerBound().get$y());
        vs[1].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$lowerBound().get$y());
        vs[2].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$upperBound().get$y());
        vs[3].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$upperBound().get$y());
        if (!(0 === $.and(drawFlags, 64)))
          t1.drawPolygon$3(vs, 4, color);
        else
          t1.drawSolidPolygon$3(vs, 4, color);
      }
    }
  }
  if ($.eqB($.and(drawFlags, 16), 16)) {
    xf = $.Transform$();
    color = $.Color3$fromRGB(1, 0, 0);
    for (b = this._bodyList, t2 = xf.position; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      t2.setFrom$1(b.get$worldCenter());
      t1.drawTransform$2(xf, color);
    }
  }
},
 get$contactList: function() {
  return this._contactManager.get$contactList();
},
 get$contactCount: function() {
  return this._contactManager.get$contactCount();
},
 get$locked: function() {
  return (this._flags & 2) === 2;
},
 get$jointList: function() {
  return this._jointList;
},
 solve$1: function(timeStep) {
  var t1, b, c, j, stackSize, seed, t2, t3, t4, stackCount, ce, contact, sensorA, sensorB, other, stackCount0, je, i;
  t1 = this.island;
  t1.init$4(this._bodyCount, this._contactManager.get$contactCount(), this._jointCount, this._contactManager.get$contactListener());
  for (b = this._bodyList; !(b == null); b = b.get$next())
    b.set$flags($.and(b.get$flags(), 4294967294));
  for (c = this._contactManager.get$contactList(); !(c == null); c = c.get$next())
    c.set$flags($.and(c.get$flags(), 4294967294));
  for (j = this.get$jointList(); !(j == null); j = j.get$_lib2_next())
    j.set$islandFlag(false);
  stackSize = this._bodyCount;
  if (this.stack.length < stackSize)
    this.stack = $._ListImpl_List(stackSize);
  for (seed = this._bodyList, t2 = this._gravity, t3 = this._allowSleep; !(seed == null); seed = seed.get$next()) {
    if ($.eqB($.and(seed.get$flags(), 1), 1))
      continue;
    if ($.eqB(seed.get$awake(), false) || $.eqB(seed.get$active(), false))
      continue;
    if ($.eqB(seed.get$type(), 0))
      continue;
    t1.clear$0();
    t4 = this.stack;
    if (0 >= t4.length)
      throw $.ioore(0);
    t4[0] = seed;
    seed.set$flags($.or(seed.get$flags(), 1));
    for (stackCount = 1; stackCount > 0;) {
      t4 = this.stack;
      --stackCount;
      if (stackCount >= t4.length)
        throw $.ioore(stackCount);
      b = t4[stackCount];
      t1.addBody$1(b);
      b.set$awake(true);
      if ($.eqB(b.get$type(), 0))
        continue;
      for (ce = b.get$contactList(); !(ce == null); ce = ce.get$next()) {
        contact = ce.get$contact();
        if ($.eqB($.and(contact.get$flags(), 1), 1))
          continue;
        if ($.eqB(contact.get$enabled(), false) || $.eqB(contact.get$touching(), false))
          continue;
        sensorA = contact.get$fixtureA().get$isSensor();
        sensorB = contact.get$fixtureB().get$isSensor();
        if (sensorA === true || sensorB === true)
          continue;
        t1.addContact$1(contact);
        contact.set$flags($.or(contact.get$flags(), 1));
        other = ce.get$other();
        if ($.eqB($.and(other.get$flags(), 1), 1))
          continue;
        t4 = this.stack;
        stackCount0 = stackCount + 1;
        if (stackCount >= t4.length)
          throw $.ioore(stackCount);
        t4[stackCount] = other;
        other.set$flags($.or(other.get$flags(), 1));
        stackCount = stackCount0;
      }
      for (je = b.get$jointList(); !(je == null); je = je.get$next()) {
        if ($.eqB(je.get$joint().get$islandFlag(), true))
          continue;
        other = je.get$other();
        if ($.eqB(other.get$active(), false))
          continue;
        t1.addJoint$1(je.get$joint());
        je.get$joint().set$islandFlag(true);
        if ($.eqB($.and(other.get$flags(), 1), 1))
          continue;
        t4 = this.stack;
        stackCount0 = stackCount + 1;
        if (stackCount >= t4.length)
          throw $.ioore(stackCount);
        t4[stackCount] = other;
        other.set$flags($.or(other.get$flags(), 1));
        stackCount = stackCount0;
      }
    }
    t1.solve$3(timeStep, t2, t3);
    for (i = 0; $.ltB(i, t1.bodyCount); ++i) {
      b = $.index(t1.bodies, i);
      if ($.eqB(b.get$type(), 0))
        b.set$flags($.and(b.get$flags(), 4294967294));
    }
  }
  for (b = this._bodyList; !(b == null); b = b.get$next()) {
    if ($.eqB($.and(b.get$flags(), 1), 0))
      continue;
    if ($.eqB(b.get$type(), 0))
      continue;
    b.synchronizeFixtures$0();
  }
  this._contactManager.findNewContacts$0();
},
 solveTimeOfImpact$0: function() {
  var c, body, t1, t2;
  for (c = this._contactManager.get$contactList(); !(c == null); c = c.get$next()) {
    c.set$flags($.or(c.get$flags(), 4));
    c.set$toiCount(0);
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    t1 = $.eqB($.and(body.get$flags(), 1), 0) || $.eqB(body.get$type(), 1) || $.eqB(body.get$type(), 0);
    t2 = body.get$flags();
    if (t1)
      body.set$flags($.or(t2, 64));
    else
      body.set$flags($.and(t2, 4294967231));
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    if ($.eqB($.and(body.get$flags(), 64), 64))
      continue;
    if ($.eqB(body.get$bullet(), true))
      continue;
    this.solveTimeOfImpactGivenBody$1(body);
    body.set$flags($.or(body.get$flags(), 64));
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    if ($.eqB($.and(body.get$flags(), 64), 64))
      continue;
    if ($.eqB(body.get$bullet(), false))
      continue;
    this.solveTimeOfImpactGivenBody$1(body);
    body.set$flags($.or(body.get$flags(), 64));
  }
},
 solveTimeOfImpactGivenBody$1: function(body) {
  var bullet, t2, t3, t4, t5, t6, t7, t8, iter, toiContact, toi, toiOther, ce, found, count, other, type, t1, t10, contact, fixtureA, fixtureB, bodyA, bodyB, i;
  bullet = body.get$bullet();
  if (typeof bullet !== 'boolean')
    return this.solveTimeOfImpactGivenBody$1$bailout(1, body, bullet);
  t2 = this.toiOutput;
  t3 = this.toiInput;
  t4 = t3.proxyA;
  t5 = t3.proxyB;
  t6 = t3.sweepA;
  t7 = t3.sweepB;
  t8 = this._pool;
  iter = 0;
  toiContact = null;
  toi = 1;
  toiOther = null;
  while (true) {
    for (ce = body.get$contactList(), found = false, count = 0; !(ce == null); ce = ce.get$next()) {
      if ($.eqB(ce.get$contact(), toiContact))
        continue;
      other = ce.get$other();
      type = other.get$type();
      if (typeof type !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(2, body, t7, bullet, t2, other, type, iter, found, count, t4, t3, ce, t6, t5, toiOther, toiContact, toi, t8);
      if (bullet) {
        t1 = other.get$flags();
        if (t1 !== (t1 | 0))
          return this.solveTimeOfImpactGivenBody$1$bailout(3, body, t7, bullet, t2, other, type, iter, found, count, t3, t4, ce, t5, toiContact, toi, toiOther, t6, t1, t8);
        if ((t1 & 64) === 0)
          continue;
        if (!(type === 0)) {
          t1 = ce.get$contact().get$flags();
          if (t1 !== (t1 | 0))
            return this.solveTimeOfImpactGivenBody$1$bailout(4, t8, body, bullet, t1, t2, other, iter, found, count, t3, t4, ce, t5, t6, toiContact, toi, t7, toiOther);
          t10 = (t1 & 16) !== 0;
          t1 = t10;
        } else
          t1 = false;
        if (t1)
          continue;
      } else if (type === 2)
        continue;
      contact = ce.get$contact();
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(5, t6, body, contact, t1, t7, bullet, t2, other, iter, found, count, t4, t3, ce, toiContact, t5, toi, toiOther, t8);
      if (!t1)
        continue;
      t1 = contact.get$toiCount();
      if (typeof t1 !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(6, body, contact, t7, bullet, t2, other, t1, iter, found, count, t3, t4, ce, t5, toiContact, toi, toiOther, t6, t8);
      if (t1 > 10)
        continue;
      fixtureA = contact.get$fixtureA();
      fixtureB = contact.get$fixtureB();
      if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
        continue;
      bodyA = fixtureA.get$body();
      bodyB = fixtureB.get$body();
      t4.setFromShape$1(fixtureA.get$shape());
      t5.setFromShape$1(fixtureB.get$shape());
      t6.setFrom$1(bodyA.get$sweep());
      t7.setFrom$1(bodyB.get$sweep());
      t3.tMax = toi;
      t8.timeOfImpact.timeOfImpact$2(t2, t3);
      if (t2.state === 3 && t2.t < toi) {
        toi = t2.t;
        toiOther = other;
        toiContact = contact;
        found = true;
      }
      ++count;
    }
    ++iter;
    if (!(found && count > 1 && iter < 50))
      break;
  }
  if (toiContact == null) {
    body.advance$1(1);
    return;
  }
  t1 = this.backup;
  t1.setFrom$1(body.get$sweep());
  body.advance$1(toi);
  toiContact.update$1(this._contactManager.get$contactListener());
  t2 = toiContact.get$enabled();
  if (typeof t2 !== 'boolean')
    return this.solveTimeOfImpactGivenBody$1$bailout(7, body, t1, toiContact, t2, toiOther);
  if (!t2) {
    body.get$sweep().setFrom$1(t1);
    this.solveTimeOfImpactGivenBody$1(body);
  }
  t1 = toiContact.get$toiCount();
  if (typeof t1 !== 'number')
    return this.solveTimeOfImpactGivenBody$1$bailout(8, body, toiContact, toiOther, t1);
  toiContact.set$toiCount(t1 + 1);
  t1 = this.contacts;
  if (t1.length < 32)
    this.contacts = $._ListImpl_List(32);
  ce = body.get$contactList();
  count = 0;
  while (true) {
    if (!(!(ce == null) && count < 32))
      break;
    c$0: {
      type = ce.get$other().get$type();
      if (typeof type !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(9, body, count, ce, toiContact, type, toiOther);
      if (type === 2)
        break c$0;
      contact = ce.get$contact();
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(10, body, count, contact, t1, ce, toiContact, toiOther);
      if (!t1)
        break c$0;
      fixtureA = contact.get$fixtureA();
      fixtureB = contact.get$fixtureB();
      if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
        break c$0;
      if (!$.eqB(contact, toiContact))
        contact.update$1(this._contactManager.get$contactListener());
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(11, body, count, contact, ce, t1, toiContact, toiOther);
      if (!t1)
        break c$0;
      t1 = contact.get$touching();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(12, body, count, contact, t1, ce, toiContact, toiOther);
      if (!t1)
        break c$0;
      t1 = this.contacts;
      if (count >= t1.length)
        throw $.ioore(count);
      t1[count] = contact;
      ++count;
    }
    ce = ce.get$next();
  }
  t1 = this.toiSolver;
  t1.initialize$3(this.contacts, count, body);
  for (i = 0; i < 20; ++i)
    if (t1.solve$1(0.75) === true)
      break;
  t1 = toiOther.get$type();
  if (typeof t1 !== 'number')
    return this.solveTimeOfImpactGivenBody$1$bailout(13, toiContact, t1);
  if (!(t1 === 0)) {
    t1 = toiContact.get$flags();
    if (t1 !== (t1 | 0))
      return this.solveTimeOfImpactGivenBody$1$bailout(14, toiContact, t1);
    toiContact.set$flags((t1 | 16) >>> 0);
  }
},
 solveTimeOfImpactGivenBody$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18) {
  switch (state0) {
    case 1:
      bullet = env1;
      body = env0;
      break;
    case 2:
      t8 = env17;
      toi = env16;
      toiContact = env15;
      toiOther = env14;
      t5 = env13;
      t6 = env12;
      ce = env11;
      t3 = env10;
      t4 = env9;
      count = env8;
      found = env7;
      iter = env6;
      type = env5;
      other = env4;
      t2 = env3;
      bullet = env2;
      t7 = env1;
      body = env0;
      break;
    case 3:
      t8 = env18;
      t1 = env17;
      t6 = env16;
      toiOther = env15;
      toi = env14;
      toiContact = env13;
      t5 = env12;
      ce = env11;
      t4 = env10;
      t3 = env9;
      count = env8;
      found = env7;
      iter = env6;
      type = env5;
      other = env4;
      t2 = env3;
      bullet = env2;
      t7 = env1;
      body = env0;
      break;
    case 4:
      toiOther = env17;
      t7 = env16;
      toi = env15;
      toiContact = env14;
      t6 = env13;
      t5 = env12;
      ce = env11;
      t4 = env10;
      t3 = env9;
      count = env8;
      found = env7;
      iter = env6;
      other = env5;
      t2 = env4;
      t1 = env3;
      bullet = env2;
      body = env1;
      t8 = env0;
      break;
    case 5:
      t8 = env18;
      toiOther = env17;
      toi = env16;
      t5 = env15;
      toiContact = env14;
      ce = env13;
      t3 = env12;
      t4 = env11;
      count = env10;
      found = env9;
      iter = env8;
      other = env7;
      t2 = env6;
      bullet = env5;
      t7 = env4;
      t1 = env3;
      contact = env2;
      body = env1;
      t6 = env0;
      break;
    case 6:
      t8 = env18;
      t6 = env17;
      toiOther = env16;
      toi = env15;
      toiContact = env14;
      t5 = env13;
      ce = env12;
      t4 = env11;
      t3 = env10;
      count = env9;
      found = env8;
      iter = env7;
      t1 = env6;
      other = env5;
      t2 = env4;
      bullet = env3;
      t7 = env2;
      contact = env1;
      body = env0;
      break;
    case 7:
      toiOther = env4;
      t2 = env3;
      toiContact = env2;
      t1 = env1;
      body = env0;
      break;
    case 8:
      t1 = env3;
      toiOther = env2;
      toiContact = env1;
      body = env0;
      break;
    case 9:
      toiOther = env5;
      type = env4;
      toiContact = env3;
      ce = env2;
      count = env1;
      body = env0;
      break;
    case 10:
      toiOther = env6;
      toiContact = env5;
      ce = env4;
      t1 = env3;
      contact = env2;
      count = env1;
      body = env0;
      break;
    case 11:
      toiOther = env6;
      toiContact = env5;
      t1 = env4;
      ce = env3;
      contact = env2;
      count = env1;
      body = env0;
      break;
    case 12:
      toiOther = env6;
      toiContact = env5;
      ce = env4;
      t1 = env3;
      contact = env2;
      count = env1;
      body = env0;
      break;
    case 13:
      t1 = env1;
      toiContact = env0;
      break;
    case 14:
      t1 = env1;
      toiContact = env0;
      break;
  }
  switch (state0) {
    case 0:
      bullet = body.get$bullet();
    case 1:
      state0 = 0;
      t2 = this.toiOutput;
      t3 = this.toiInput;
      t4 = t3.proxyA;
      t5 = t3.proxyB;
      t6 = t3.sweepA;
      t7 = t3.sweepB;
      t8 = this._pool;
      iter = 0;
      toiContact = null;
      toi = 1;
      toiOther = null;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              ce = body.get$contactList();
              found = false;
              count = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!!(ce == null))
                        break L1;
                    default:
                      c$1: {
                        switch (state0) {
                          case 0:
                            if ($.eqB(ce.get$contact(), toiContact))
                              break c$1;
                            other = ce.get$other();
                            type = other.get$type();
                          case 2:
                            state0 = 0;
                          default:
                            if (state0 === 4 || state0 === 3 || state0 === 0 && $.eqB(bullet, true))
                              switch (state0) {
                                case 0:
                                  t1 = other.get$flags();
                                case 3:
                                  state0 = 0;
                                  if ($.eqB($.and(t1, 64), 0))
                                    break c$1;
                                case 4:
                                  if (state0 === 4 || state0 === 0 && !$.eqB(type, 0))
                                    switch (state0) {
                                      case 0:
                                        t1 = ce.get$contact().get$flags();
                                      case 4:
                                        state0 = 0;
                                        t10 = !$.eqB($.and(t1, 16), 0);
                                        t1 = t10;
                                    }
                                  else
                                    t1 = false;
                                  if (t1)
                                    break c$1;
                              }
                            else if ($.eqB(type, 2))
                              break c$1;
                            contact = ce.get$contact();
                            t1 = contact.get$enabled();
                          case 5:
                            state0 = 0;
                            if ($.eqB(t1, false))
                              break c$1;
                            t1 = contact.get$toiCount();
                          case 6:
                            state0 = 0;
                            if ($.gtB(t1, 10))
                              break c$1;
                            fixtureA = contact.get$fixtureA();
                            fixtureB = contact.get$fixtureB();
                            if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
                              break c$1;
                            bodyA = fixtureA.get$body();
                            bodyB = fixtureB.get$body();
                            t4.setFromShape$1(fixtureA.get$shape());
                            t5.setFromShape$1(fixtureB.get$shape());
                            t6.setFrom$1(bodyA.get$sweep());
                            t7.setFrom$1(bodyB.get$sweep());
                            t3.tMax = toi;
                            t8.timeOfImpact.timeOfImpact$2(t2, t3);
                            if (t2.state === 3 && t2.t < toi) {
                              toi = t2.t;
                              toiOther = other;
                              toiContact = contact;
                              found = true;
                            }
                            ++count;
                        }
                      }
                      ce = ce.get$next();
                  }
              ++iter;
              if (!(found && count > 1 && iter < 50))
                break L0;
          }
      if (toiContact == null) {
        body.advance$1(1);
        return;
      }
      t1 = this.backup;
      t1.setFrom$1(body.get$sweep());
      body.advance$1(toi);
      toiContact.update$1(this._contactManager.get$contactListener());
      t2 = toiContact.get$enabled();
    case 7:
      state0 = 0;
      if ($.eqB(t2, false)) {
        body.get$sweep().setFrom$1(t1);
        this.solveTimeOfImpactGivenBody$1(body);
      }
      t1 = toiContact.get$toiCount();
    case 8:
      state0 = 0;
      toiContact.set$toiCount($.add(t1, 1));
      t1 = this.contacts;
      if (t1.length < 32)
        this.contacts = $._ListImpl_List(32);
      ce = body.get$contactList();
      count = 0;
    case 9:
    case 10:
    case 11:
    case 12:
      L2:
        while (true)
          switch (state0) {
            case 0:
              if (!(!(ce == null) && count < 32))
                break L2;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    type = ce.get$other().get$type();
                  case 9:
                    state0 = 0;
                    if ($.eqB(type, 2))
                      break c$0;
                    contact = ce.get$contact();
                    t1 = contact.get$enabled();
                  case 10:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    fixtureA = contact.get$fixtureA();
                    fixtureB = contact.get$fixtureB();
                    if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
                      break c$0;
                    if (!$.eqB(contact, toiContact))
                      contact.update$1(this._contactManager.get$contactListener());
                    t1 = contact.get$enabled();
                  case 11:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    t1 = contact.get$touching();
                  case 12:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    t1 = this.contacts;
                    if (count >= t1.length)
                      throw $.ioore(count);
                    t1[count] = contact;
                    ++count;
                }
              }
              ce = ce.get$next();
          }
      t1 = this.toiSolver;
      t1.initialize$3(this.contacts, count, body);
      for (i = 0; i < 20; ++i)
        if (t1.solve$1(0.75) === true)
          break;
      t1 = toiOther.get$type();
    case 13:
      state0 = 0;
    case 14:
      var bullet, body, t2, t3, t4, t5, t6, t7, t8, iter, toiContact, toi, toiOther, ce, found, count, other, type, t1, t10, contact, fixtureA, fixtureB, bodyA, bodyB, i;
      if (state0 === 14 || state0 === 0 && !$.eqB(t1, 0))
        switch (state0) {
          case 0:
            t1 = toiContact.get$flags();
          case 14:
            state0 = 0;
            toiContact.set$flags($.or(t1, 16));
        }
  }
},
 drawShape$3: function(fixture, xf, color) {
  var circle, t1, t2, radius, t3, poly, vertexCount, vertices, i;
  switch (fixture.get$type()) {
    case 0:
      circle = fixture.get$shape();
      t1 = circle.get$position();
      t2 = this.center;
      $.Transform_mulToOut(xf, t1, t2);
      radius = circle.get$radius();
      t1 = this.axis;
      t1.setFrom$1(xf.rotation.get$col1());
      t3 = this._debugDraw;
      if (!(0 === $.and(t3.get$flags(), 64)))
        t3.drawCircle$4(t2, radius, color, t1);
      else
        t3.drawSolidCircle$4(t2, radius, color, t1);
      break;
    case 1:
      poly = fixture.get$shape();
      vertexCount = poly.get$vertexCount();
      vertices = $._ListImpl_List(vertexCount);
      for (i = 0; $.ltB(i, vertexCount); ++i) {
        t1 = $.Vector$(0, 0);
        if (i >= vertices.length)
          throw $.ioore(i);
        vertices[i] = t1;
      }
      for (i = 0; $.ltB(i, vertexCount); ++i) {
        t1 = $.index(poly.get$vertices(), i);
        if (i >= vertices.length)
          throw $.ioore(i);
        $.Transform_mulToOut(xf, t1, vertices[i]);
      }
      t1 = this._debugDraw;
      if (!(0 === $.and(t1.get$flags(), 64)))
        t1.drawPolygon$3(vertices, vertexCount, color);
      else if ($.gtB(vertexCount, 2))
        t1.drawSolidPolygon$3(vertices, vertexCount, color);
      else
        t1.drawPolygon$3(vertices, vertexCount, color);
      break;
  }
},
 drawJoint$1: function(joint) {
  var bodyA, bodyB, xf1, xf2, x1, x2, p1, p2, color, p1t, p2t, t1;
  bodyA = joint.get$bodyA();
  bodyB = joint.get$bodyB();
  xf1 = bodyA.get$originTransform();
  xf2 = bodyB.get$originTransform();
  x1 = $.Vector$copy(xf1.get$position());
  x2 = $.Vector$copy(xf2.get$position());
  p1 = $.Vector$(0, 0);
  p2 = $.Vector$(0, 0);
  joint.getAnchorA$1(p1);
  joint.getAnchorB$1(p2);
  color = $.Color3$fromRGBF(0.5, 0.3, 0.3);
  switch (joint.get$type()) {
    case 3:
      this._debugDraw.drawSegment$3(p1, p2, color);
      break;
    case 4:
      throw $.$$throw($.UnimplementedError$(null));
    case 9:
      this._debugDraw.drawSegment$3(x1, x2, color);
      break;
    case 10:
    case 5:
      break;
    default:
      p1t = $.Vector$copy(p1);
      p2t = $.Vector$copy(p2);
      t1 = this._debugDraw;
      t1.drawSegment$3(x1, p1, color);
      t1.drawSegment$3(p1t, p2, color);
      t1.drawSegment$3(x2, p2t, color);
  }
},
 World$3: function(gravity, doSleep, argPool) {
  var t1, t2, i;
  this._contactManager = $.ContactManager$(this);
  for (t1 = this._contactStacks, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $._ListImpl_List(2);
  this._initializeRegisters$0();
}
};

$$.WorldQueryWrapper = {"": ["broadPhase?", "callback"],
 "super": "Object"
};

$$.Contact = {"": ["flags=", "prev=", "next=", "edge1?", "edge2?", "fixtureA?", "fixtureB?", "manifold=", "toiCount="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 init$2: function(fixA, fixB) {
  var t1;
  this.flags = 0;
  this.fixtureA = fixA;
  this.fixtureB = fixB;
  this.manifold.set$pointCount(0);
  this.prev = null;
  this.next = null;
  t1 = this.edge1;
  t1.contact = null;
  t1.prev = null;
  t1.next = null;
  t1.other = null;
  t1 = this.edge2;
  t1.contact = null;
  t1.prev = null;
  t1.next = null;
  t1.other = null;
  this.toiCount = 0;
},
 get$touching: function() {
  return $.eq($.and(this.flags, 2), 2);
},
 get$enabled: function() {
  return $.eq($.and(this.flags, 4), 4);
},
 flagForFiltering$0: function() {
  var t1 = this.flags;
  if (t1 !== (t1 | 0))
    return this.flagForFiltering$0$bailout(1, t1);
  this.flags = (t1 | 8) >>> 0;
},
 flagForFiltering$0$bailout: function(state0, t1) {
  this.flags = $.or(t1, 8);
},
 update$1: function(listener) {
  var t1, t2, t4, wasTouching, t6, sensorA, t7, sensorB, sensor, bodyA, bodyB, xfA, xfB, shapeA, shapeB, touching, t3, i, t5, mp2, id2, j, mp1;
  t1 = this._oldManifold;
  t1.setFrom$1(this.manifold);
  t2 = this.flags;
  if (t2 !== (t2 | 0))
    return this.update$1$bailout(1, listener, t1, t2);
  this.flags = (t2 | 4) >>> 0;
  t4 = this.flags;
  if (t4 !== (t4 | 0))
    return this.update$1$bailout(2, listener, t4, t1);
  wasTouching = (t4 & 2) === 2;
  t6 = this.fixtureA;
  sensorA = t6.get$isSensor();
  t7 = this.fixtureB;
  sensorB = t7.get$isSensor();
  sensor = sensorA === true || sensorB === true;
  bodyA = t6.get$body();
  bodyB = t7.get$body();
  xfA = bodyA.get$originTransform();
  xfB = bodyB.get$originTransform();
  if (sensor) {
    shapeA = t6.get$shape();
    shapeB = t7.get$shape();
    touching = this.pool.collision.testOverlap$4(shapeA, shapeB, xfA, xfB);
    if (typeof touching !== 'boolean')
      return this.update$1$bailout(3, listener, wasTouching, touching, t1, sensor);
    this.manifold.set$pointCount(0);
  } else {
    this.evaluate$3(this.manifold, xfA, xfB);
    t2 = this.manifold.get$pointCount();
    if (typeof t2 !== 'number')
      return this.update$1$bailout(4, listener, bodyA, wasTouching, bodyB, t1, t2, sensor);
    touching = t2 > 0;
    t2 = t1.points;
    t3 = t2.length;
    i = 0;
    while (true) {
      t4 = this.manifold;
      t5 = t4.get$pointCount();
      if (typeof t5 !== 'number')
        return this.update$1$bailout(5, listener, bodyA, bodyB, t5, t2, wasTouching, t1, touching, t3, i, sensor);
      if (!(i < t5))
        break;
      t4 = t4.get$points();
      if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.update$1$bailout(6, listener, bodyA, wasTouching, bodyB, t1, touching, t3, i, t2, sensor, t4);
      if (i >= t4.length)
        throw $.ioore(i);
      mp2 = t4[i];
      mp2.set$normalImpulse(0);
      mp2.set$tangentImpulse(0);
      id2 = mp2.get$id();
      j = 0;
      while (true) {
        t4 = t1.pointCount;
        if (typeof t4 !== 'number')
          return this.update$1$bailout(7, listener, bodyA, j, bodyB, t4, t2, mp2, wasTouching, id2, t1, touching, t3, i, sensor);
        if (!(j < t4))
          break;
        if (j >= t3)
          throw $.ioore(j);
        mp1 = t2[j];
        if (mp1.get$id().isEqual$1(id2) === true) {
          mp2.set$normalImpulse(mp1.get$normalImpulse());
          mp2.set$tangentImpulse(mp1.get$tangentImpulse());
          break;
        }
        ++j;
      }
      ++i;
    }
    if (!(touching === wasTouching)) {
      bodyA.set$awake(true);
      bodyB.set$awake(true);
    }
  }
  t2 = this.flags;
  if (t2 !== (t2 | 0))
    return this.update$1$bailout(8, listener, wasTouching, t1, touching, touching, t2, sensor);
  if (touching)
    this.flags = (t2 | 2) >>> 0;
  else
    this.flags = (t2 & 4294967293) >>> 0;
  if (listener == null)
    return;
  if (!wasTouching && touching)
    listener.beginContact$1(this);
  if (wasTouching && !touching)
    listener.endContact$1(this);
  if (!sensor && touching)
    listener.preSolve$2(this, t1);
},
 update$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      t2 = env2;
      t1 = env1;
      listener = env0;
      break;
    case 2:
      t1 = env2;
      t4 = env1;
      listener = env0;
      break;
    case 3:
      sensor = env4;
      t1 = env3;
      touching = env2;
      wasTouching = env1;
      listener = env0;
      break;
    case 4:
      sensor = env6;
      t2 = env5;
      t1 = env4;
      bodyB = env3;
      wasTouching = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 5:
      sensor = env10;
      i = env9;
      t3 = env8;
      touching = env7;
      t1 = env6;
      wasTouching = env5;
      t2 = env4;
      t4 = env3;
      bodyB = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 6:
      t4 = env10;
      sensor = env9;
      t2 = env8;
      i = env7;
      t3 = env6;
      touching = env5;
      t1 = env4;
      bodyB = env3;
      wasTouching = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 7:
      sensor = env13;
      i = env12;
      t3 = env11;
      touching = env10;
      t1 = env9;
      id2 = env8;
      wasTouching = env7;
      mp2 = env6;
      t2 = env5;
      t4 = env4;
      bodyB = env3;
      j = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 8:
      sensor = env6;
      t3 = env5;
      touching = env4;
      t2 = env3;
      t1 = env2;
      wasTouching = env1;
      listener = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._oldManifold;
      t1.setFrom$1(this.manifold);
      t2 = this.flags;
    case 1:
      state0 = 0;
      this.flags = $.or(t2, 4);
      t4 = this.flags;
    case 2:
      state0 = 0;
      wasTouching = $.eq($.and(t4, 2), 2);
      t6 = this.fixtureA;
      sensorA = t6.get$isSensor();
      t7 = this.fixtureB;
      sensorB = t7.get$isSensor();
      sensor = sensorA === true || sensorB === true;
      bodyA = t6.get$body();
      bodyB = t7.get$body();
      xfA = bodyA.get$originTransform();
      xfB = bodyB.get$originTransform();
    default:
      if (state0 === 3 || state0 === 0 && sensor)
        switch (state0) {
          case 0:
            shapeA = t6.get$shape();
            shapeB = t7.get$shape();
            touching = this.pool.collision.testOverlap$4(shapeA, shapeB, xfA, xfB);
          case 3:
            state0 = 0;
            this.manifold.set$pointCount(0);
        }
      else
        switch (state0) {
          case 0:
            this.evaluate$3(this.manifold, xfA, xfB);
            t2 = this.manifold.get$pointCount();
          case 4:
            state0 = 0;
            touching = $.gt(t2, 0);
            t2 = t1.points;
            t3 = t2.length;
            i = 0;
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t4 = this.manifold.get$pointCount();
                  case 5:
                    state0 = 0;
                    if (!$.ltB(i, t4))
                      break L0;
                    t4 = this.manifold.get$points();
                  case 6:
                    state0 = 0;
                    mp2 = $.index(t4, i);
                    mp2.set$normalImpulse(0);
                    mp2.set$tangentImpulse(0);
                    id2 = mp2.get$id();
                    j = 0;
                  case 7:
                    L1:
                      while (true)
                        switch (state0) {
                          case 0:
                            t4 = t1.pointCount;
                          case 7:
                            state0 = 0;
                            if (!$.ltB(j, t4))
                              break L1;
                            if (j >= t3)
                              throw $.ioore(j);
                            mp1 = t2[j];
                            if (mp1.get$id().isEqual$1(id2) === true) {
                              mp2.set$normalImpulse(mp1.get$normalImpulse());
                              mp2.set$tangentImpulse(mp1.get$tangentImpulse());
                              break L1;
                            }
                            ++j;
                        }
                    ++i;
                }
            if (!$.eqB(touching, wasTouching)) {
              bodyA.set$awake(true);
              bodyB.set$awake(true);
            }
        }
      t2 = touching === true;
      t3 = this.flags;
    case 8:
      var t1, t2, listener, t4, wasTouching, t6, sensorA, t7, sensorB, sensor, bodyA, bodyB, xfA, xfB, shapeA, shapeB, touching, t3, i, mp2, id2, j, mp1;
      state0 = 0;
      if (t2)
        this.flags = $.or(t3, 2);
      else
        this.flags = $.and(t3, 4294967293);
      if (listener == null)
        return;
      if ($.eqB(wasTouching, false) && $.eqB(touching, true))
        listener.beginContact$1(this);
      if ($.eqB(wasTouching, true) && $.eqB(touching, false))
        listener.endContact$1(this);
      if (!sensor && t2)
        listener.preSolve$2(this, t1);
  }
}
};

$$.ContactConstraint = {"": ["points?", "localNormal?", "localPoint?", "normal?", "normalMass?", "K?", "bodyA=", "bodyB=", "type=", "radius=", "friction=", "restitution=", "pointCount=", "manifold="],
 "super": "Object",
 setFrom$1: function(cp) {
  var t1, t2, i, t3, t4;
  this.pointCount = cp.get$pointCount();
  this.localNormal.setFrom$1(cp.get$localNormal());
  this.localPoint.setFrom$1(cp.get$localPoint());
  this.normal.setFrom$1(cp.get$normal());
  this.normalMass.setFrom$1(cp.get$normalMass());
  this.K.setFrom$1(cp.get$K());
  this.bodyA = cp.get$bodyA();
  this.bodyB = cp.get$bodyB();
  this.type = cp.get$type();
  this.radius = cp.get$radius();
  this.friction = cp.get$friction();
  this.restitution = cp.get$restitution();
  this.manifold = cp.get$manifold();
  t1 = this.points;
  t2 = t1.length;
  i = 0;
  while (true) {
    t3 = cp.get$pointCount();
    if (typeof t3 !== 'number')
      return this.setFrom$1$bailout(1, cp, i, t3, t1, t2);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    t4 = cp.get$points();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(2, t4, cp, i, t1, t2, t3);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
    ++i;
  }
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t2 = env4;
      t1 = env3;
      t3 = env2;
      i = env1;
      cp = env0;
      break;
    case 2:
      t3 = env5;
      t2 = env4;
      t1 = env3;
      i = env2;
      cp = env1;
      t4 = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.pointCount = cp.get$pointCount();
      this.localNormal.setFrom$1(cp.get$localNormal());
      this.localPoint.setFrom$1(cp.get$localPoint());
      this.normal.setFrom$1(cp.get$normal());
      this.normalMass.setFrom$1(cp.get$normalMass());
      this.K.setFrom$1(cp.get$K());
      this.bodyA = cp.get$bodyA();
      this.bodyB = cp.get$bodyB();
      this.type = cp.get$type();
      this.radius = cp.get$radius();
      this.friction = cp.get$friction();
      this.restitution = cp.get$restitution();
      this.manifold = cp.get$manifold();
      t1 = this.points;
      t2 = t1.length;
      i = 0;
    default:
      var t1, t2, i, t3, cp, t4;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = cp.get$pointCount();
            case 1:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              t4 = cp.get$points();
            case 2:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
  }
},
 toString$0: function() {
  return 'localNormal: "' + $.S(this.localNormal) + '", localPoint: "' + $.S(this.localPoint) + '" ' + 'normal: "' + $.S(this.normal) + '", radius: "' + $.S(this.radius) + '" friction: "' + $.S(this.friction) + '" ' + 'restitution: "' + $.S(this.restitution) + '", pointCount: "' + $.S(this.pointCount) + '"';
},
 ContactConstraint$0: function() {
  var t1, t2, i, t3;
  for (t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    t3 = $.ContactConstraintPoint$();
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.ContactConstraintPoint = {"": ["localPoint?", "rA?", "rB?", "normalImpulse=", "tangentImpulse=", "normalMass=", "tangentMass=", "velocityBias="],
 "super": "Object",
 setFrom$1: function(cp) {
  this.localPoint.setFrom$1(cp.get$localPoint());
  this.rA.setFrom$1(cp.get$rA());
  this.rB.setFrom$1(cp.get$rB());
  this.normalImpulse = cp.get$normalImpulse();
  this.tangentImpulse = cp.get$tangentImpulse();
  this.normalMass = cp.get$normalMass();
  this.tangentMass = cp.get$tangentMass();
  this.velocityBias = cp.get$velocityBias();
},
 toString$0: function() {
  return 'normal impulse: ' + $.S(this.normalImpulse) + ', tangentImpulse: ' + $.S(this.tangentImpulse) + ', normalMass: ' + $.S(this.normalMass) + ', tangentMass: ' + $.S(this.tangentMass) + ', velocityBias: ' + $.S(this.velocityBias) + ', localPoint: ' + $.S(this.localPoint) + ', rA: ' + $.S(this.rA) + ', rB: ' + $.S(this.rB);
}
};

$$.ContactEdge = {"": ["other=", "contact=", "prev=", "next="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); }
};

$$.CircleContact = {"": ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(0, fA.get$type(), null);
  $.Expect_equals(0, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collideCircles$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.ContactRegister = {"": ["creator?", "primary?"],
 "super": "Object"
};

$$.ContactSolver = {"": ["constraints", "constraintCount", "worldManifold", "tangent", "temp1", "temp2", "P", "dv", "dv1", "dv2", "x?", "d?", "P1", "P2", "psolver", "rA?", "rB?"],
 "super": "Object",
 init$3: function(contacts, contactCount, impulseRatio) {
  var old, i, t1, t2, t3, t4, t5, t6, t7, contact, fixtureA, fixtureB, shapeA, shapeB, radiusA, radiusB, bodyA, bodyB, manifold, friction, restitution, vA, vB, wA, wB, t11, cc, t8, t9, t10, j, cp, ccp, t12, t13, rnA, rnB, kNormal, t14, rtA, rtB, kTangent, t15, t16, t17, t18, t19, t20, a, vRel, ccp1, ccp2, invMassA, invIA, invMassB, invIB, rn1A, rn1B, rn2A, rn2B, k11, k22, k12;
  if (typeof contacts !== 'string' && (typeof contacts !== 'object' || contacts === null || contacts.constructor !== Array && !contacts.is$JavaScriptIndexingBehavior()))
    return this.init$3$bailout(1, contacts, contactCount, impulseRatio);
  this.constraintCount = contactCount;
  if ($.ltB(this.constraints.length, contactCount)) {
    old = this.constraints;
    this.constraints = $._ListImpl_List($.max(old.length * 2, this.constraintCount));
    $.setRange$3(this.constraints, 0, old.length, old);
    for (i = old.length; t1 = this.constraints, i < t1.length; ++i) {
      t2 = $.ContactConstraint$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  for (t1 = this.worldManifold, t2 = t1.points, t3 = t2.length, t4 = this.tangent, t5 = this.temp2, t6 = this.temp1, t7 = t1.normal, i = 0; $.ltB(i, this.constraintCount); ++i) {
    if (i >= contacts.length)
      throw $.ioore(i);
    contact = contacts[i];
    fixtureA = contact.get$fixtureA();
    fixtureB = contact.get$fixtureB();
    shapeA = fixtureA.get$shape();
    shapeB = fixtureB.get$shape();
    radiusA = shapeA.get$radius();
    radiusB = shapeB.get$radius();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    manifold = contact.get$manifold();
    friction = $.sqrt($.mul(fixtureA.get$friction(), fixtureB.get$friction()));
    restitution = $.Settings_mixRestitution(fixtureA.get$restitution(), fixtureB.get$restitution());
    if (typeof restitution !== 'number')
      return this.init$3$bailout(2, restitution, t4, impulseRatio, contacts, i, t5, t3, radiusA, radiusB, t6, bodyB, manifold, bodyA, t7, t2, friction, t1);
    vA = bodyA.get$linearVelocity();
    vB = bodyB.get$linearVelocity();
    wA = bodyA.get$angularVelocity();
    if (typeof wA !== 'number')
      return this.init$3$bailout(3, restitution, vA, vB, wA, t4, impulseRatio, contacts, i, t5, t3, radiusA, radiusB, t6, bodyB, manifold, bodyA, t7, t2, friction, t1);
    wB = bodyB.get$angularVelocity();
    if (typeof wB !== 'number')
      return this.init$3$bailout(4, restitution, vA, vB, wA, wB, impulseRatio, contacts, t4, i, t5, t3, radiusA, radiusB, t6, bodyB, manifold, bodyA, t7, t2, friction, t1);
    t1.initialize$5(manifold, bodyA.get$originTransform(), radiusA, bodyB.get$originTransform(), radiusB);
    t11 = this.constraints;
    if (i >= t11.length)
      throw $.ioore(i);
    cc = t11[i];
    cc.set$bodyA(bodyA);
    cc.set$bodyB(bodyB);
    cc.set$manifold(manifold);
    t11 = t7.x;
    cc.get$normal().set$x(t11);
    t11 = t7.y;
    cc.get$normal().set$y(t11);
    cc.set$pointCount(manifold.get$pointCount());
    cc.set$friction(friction);
    cc.set$restitution(restitution);
    t11 = manifold.get$localNormal().get$x();
    cc.get$localNormal().set$x(t11);
    t11 = manifold.get$localNormal().get$y();
    cc.get$localNormal().set$y(t11);
    t11 = manifold.get$localPoint().get$x();
    cc.get$localPoint().set$x(t11);
    t11 = manifold.get$localPoint().get$y();
    cc.get$localPoint().set$y(t11);
    cc.set$radius($.add(radiusA, radiusB));
    cc.set$type(manifold.get$type());
    for (t8 = -restitution, t9 = -wA, t10 = -wB, j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
      cp = $.index(manifold.get$points(), j);
      ccp = $.index(cc.get$points(), j);
      t11 = cp.get$normalImpulse();
      if (typeof t11 !== 'number')
        throw $.iae(t11);
      ccp.set$normalImpulse(impulseRatio * t11);
      t12 = cp.get$tangentImpulse();
      if (typeof t12 !== 'number')
        throw $.iae(t12);
      ccp.set$tangentImpulse(impulseRatio * t12);
      t13 = cp.get$localPoint().get$x();
      ccp.get$localPoint().set$x(t13);
      t13 = cp.get$localPoint().get$y();
      ccp.get$localPoint().set$y(t13);
      if (j >= t3)
        throw $.ioore(j);
      t13 = $.sub(t2[j].get$x(), bodyA.get$sweep().get$center().get$x());
      ccp.get$rA().set$x(t13);
      t13 = $.sub(t2[j].get$y(), bodyA.get$sweep().get$center().get$y());
      ccp.get$rA().set$y(t13);
      t13 = $.sub(t2[j].get$x(), bodyB.get$sweep().get$center().get$x());
      ccp.get$rB().set$x(t13);
      t13 = $.sub(t2[j].get$y(), bodyB.get$sweep().get$center().get$y());
      ccp.get$rB().set$y(t13);
      rnA = $.sub($.mul(ccp.get$rA().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rA().get$y(), cc.get$normal().get$x()));
      rnB = $.sub($.mul(ccp.get$rB().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rB().get$y(), cc.get$normal().get$x()));
      rnA = $.mul(rnA, rnA);
      rnB = $.mul(rnB, rnB);
      kNormal = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rnA)), $.mul(bodyB.get$invInertia(), rnB));
      if (typeof kNormal !== 'number')
        throw $.iae(kNormal);
      ccp.set$normalMass(1 / kNormal);
      t13 = cc.get$normal().get$y();
      if (typeof t13 !== 'number')
        throw $.iae(t13);
      t4.x = 1 * t13;
      t14 = cc.get$normal().get$x();
      if (typeof t14 !== 'number')
        throw $.iae(t14);
      t4.y = -1 * t14;
      rtA = $.sub($.mul(ccp.get$rA().get$x(), t4.y), $.mul(ccp.get$rA().get$y(), t4.x));
      rtB = $.sub($.mul(ccp.get$rB().get$x(), t4.y), $.mul(ccp.get$rB().get$y(), t4.x));
      rtA = $.mul(rtA, rtA);
      rtB = $.mul(rtB, rtB);
      kTangent = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rtA)), $.mul(bodyB.get$invInertia(), rtB));
      if (typeof kTangent !== 'number')
        throw $.iae(kTangent);
      ccp.set$tangentMass(1 / kTangent);
      ccp.set$velocityBias(0);
      t15 = ccp.get$rA().get$y();
      if (typeof t15 !== 'number')
        throw $.iae(t15);
      t5.x = t9 * t15;
      t16 = ccp.get$rA().get$x();
      if (typeof t16 !== 'number')
        throw $.iae(t16);
      t5.y = wA * t16;
      t17 = ccp.get$rB().get$y();
      if (typeof t17 !== 'number')
        throw $.iae(t17);
      t17 = t10 * t17;
      t18 = vB.get$x();
      if (typeof t18 !== 'number')
        throw $.iae(t18);
      t18 = t17 + t18;
      t17 = vA.get$x();
      if (typeof t17 !== 'number')
        throw $.iae(t17);
      t17 = t18 - t17;
      t18 = t5.x;
      if (typeof t18 !== 'number')
        throw $.iae(t18);
      t6.x = t17 - t18;
      t19 = ccp.get$rB().get$x();
      if (typeof t19 !== 'number')
        throw $.iae(t19);
      t19 = wB * t19;
      t20 = vB.get$y();
      if (typeof t20 !== 'number')
        throw $.iae(t20);
      t20 = t19 + t20;
      t19 = vA.get$y();
      if (typeof t19 !== 'number')
        throw $.iae(t19);
      t19 = t20 - t19;
      t20 = t5.y;
      if (typeof t20 !== 'number')
        throw $.iae(t20);
      t6.y = t19 - t20;
      a = cc.get$normal();
      vRel = $.add($.mul(a.get$x(), t6.x), $.mul(a.get$y(), t6.y));
      if ($.ltB(vRel, -1)) {
        if (typeof vRel !== 'number')
          throw $.iae(vRel);
        ccp.set$velocityBias(t8 * vRel);
      }
    }
    if ($.eqB(cc.get$pointCount(), 2)) {
      ccp1 = $.index(cc.get$points(), 0);
      ccp2 = $.index(cc.get$points(), 1);
      invMassA = bodyA.get$invMass();
      invIA = bodyA.get$invInertia();
      invMassB = bodyB.get$invMass();
      invIB = bodyB.get$invInertia();
      t8 = ccp1.get$rA();
      t9 = cc.get$normal();
      rn1A = $.sub($.mul(t8.get$x(), t9.get$y()), $.mul(t8.get$y(), t9.get$x()));
      t10 = ccp1.get$rB();
      t11 = cc.get$normal();
      rn1B = $.sub($.mul(t10.get$x(), t11.get$y()), $.mul(t10.get$y(), t11.get$x()));
      t12 = ccp2.get$rA();
      t13 = cc.get$normal();
      rn2A = $.sub($.mul(t12.get$x(), t13.get$y()), $.mul(t12.get$y(), t13.get$x()));
      t14 = ccp2.get$rB();
      t15 = cc.get$normal();
      rn2B = $.sub($.mul(t14.get$x(), t15.get$y()), $.mul(t14.get$y(), t15.get$x()));
      k11 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn1A)), $.mul($.mul(invIB, rn1B), rn1B));
      k22 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn2A), rn2A)), $.mul($.mul(invIB, rn2B), rn2B));
      k12 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn2A)), $.mul($.mul(invIB, rn1B), rn2B));
      t8 = $.mul(k11, k11);
      t9 = $.sub($.mul(k11, k22), $.mul(k12, k12));
      if (typeof t9 !== 'number')
        throw $.iae(t9);
      if ($.ltB(t8, 100 * t9)) {
        cc.get$K().get$col1().set$x(k11);
        cc.get$K().get$col1().set$y(k12);
        cc.get$K().get$col2().set$x(k12);
        cc.get$K().get$col2().set$y(k22);
        t8 = cc.get$K().get$col1().get$x();
        cc.get$normalMass().get$col1().set$x(t8);
        t8 = cc.get$K().get$col1().get$y();
        cc.get$normalMass().get$col1().set$y(t8);
        t8 = cc.get$K().get$col2().get$x();
        cc.get$normalMass().get$col2().set$x(t8);
        t8 = cc.get$K().get$col2().get$y();
        cc.get$normalMass().get$col2().set$y(t8);
        cc.get$normalMass().invertLocal$0();
      } else
        cc.set$pointCount(1);
    }
  }
},
 init$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20) {
  switch (state0) {
    case 1:
      impulseRatio = env2;
      contactCount = env1;
      contacts = env0;
      break;
    case 2:
      t1 = env16;
      friction = env15;
      t2 = env14;
      t7 = env13;
      bodyA = env12;
      manifold = env11;
      bodyB = env10;
      t6 = env9;
      radiusB = env8;
      radiusA = env7;
      t3 = env6;
      t5 = env5;
      i = env4;
      contacts = env3;
      impulseRatio = env2;
      t4 = env1;
      restitution = env0;
      break;
    case 3:
      t1 = env19;
      friction = env18;
      t2 = env17;
      t7 = env16;
      bodyA = env15;
      manifold = env14;
      bodyB = env13;
      t6 = env12;
      radiusB = env11;
      radiusA = env10;
      t3 = env9;
      t5 = env8;
      i = env7;
      contacts = env6;
      impulseRatio = env5;
      t4 = env4;
      wA = env3;
      vB = env2;
      vA = env1;
      restitution = env0;
      break;
    case 4:
      t1 = env20;
      friction = env19;
      t2 = env18;
      t7 = env17;
      bodyA = env16;
      manifold = env15;
      bodyB = env14;
      t6 = env13;
      radiusB = env12;
      radiusA = env11;
      t3 = env10;
      t5 = env9;
      i = env8;
      t4 = env7;
      contacts = env6;
      impulseRatio = env5;
      wB = env4;
      wA = env3;
      vB = env2;
      vA = env1;
      restitution = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      this.constraintCount = contactCount;
      if ($.ltB(this.constraints.length, contactCount)) {
        old = this.constraints;
        this.constraints = $._ListImpl_List($.max(old.length * 2, this.constraintCount));
        $.setRange$3(this.constraints, 0, old.length, old);
        for (i = old.length; t1 = this.constraints, i < t1.length; ++i) {
          t2 = $.ContactConstraint$();
          if (i >= t1.length)
            throw $.ioore(i);
          t1[i] = t2;
        }
      }
      t1 = this.worldManifold;
      t2 = t1.points;
      t3 = t2.length;
      t4 = this.tangent;
      t5 = this.temp2;
      t6 = this.temp1;
      t7 = t1.normal;
      i = 0;
    default:
      var impulseRatio, contactCount, contacts, old, i, t1, t2, t3, t4, t5, t6, t7, contact, fixtureA, fixtureB, shapeA, shapeB, radiusA, radiusB, bodyA, bodyB, manifold, friction, restitution, vA, vB, wA, wB, t11, cc, j, cp, ccp, t8, t9, t10, rnA, rnB, kNormal, rtA, rtB, kTangent, a, vRel, ccp1, ccp2, invMassA, invIA, invMassB, invIB, rn1A, rn1B, t12, t13, rn2A, t14, t15, rn2B, k11, k22, k12;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, this.constraintCount))
                break L0;
              contact = $.index(contacts, i);
              fixtureA = contact.get$fixtureA();
              fixtureB = contact.get$fixtureB();
              shapeA = fixtureA.get$shape();
              shapeB = fixtureB.get$shape();
              radiusA = shapeA.get$radius();
              radiusB = shapeB.get$radius();
              bodyA = fixtureA.get$body();
              bodyB = fixtureB.get$body();
              manifold = contact.get$manifold();
              friction = $.sqrt($.mul(fixtureA.get$friction(), fixtureB.get$friction()));
              restitution = $.Settings_mixRestitution(fixtureA.get$restitution(), fixtureB.get$restitution());
            case 2:
              state0 = 0;
              vA = bodyA.get$linearVelocity();
              vB = bodyB.get$linearVelocity();
              wA = bodyA.get$angularVelocity();
            case 3:
              state0 = 0;
              wB = bodyB.get$angularVelocity();
            case 4:
              state0 = 0;
              t1.initialize$5(manifold, bodyA.get$originTransform(), radiusA, bodyB.get$originTransform(), radiusB);
              t11 = this.constraints;
              if (i >= t11.length)
                throw $.ioore(i);
              cc = t11[i];
              cc.set$bodyA(bodyA);
              cc.set$bodyB(bodyB);
              cc.set$manifold(manifold);
              t11 = t7.x;
              cc.get$normal().set$x(t11);
              t11 = t7.y;
              cc.get$normal().set$y(t11);
              cc.set$pointCount(manifold.get$pointCount());
              cc.set$friction(friction);
              cc.set$restitution(restitution);
              t11 = manifold.get$localNormal().get$x();
              cc.get$localNormal().set$x(t11);
              t11 = manifold.get$localNormal().get$y();
              cc.get$localNormal().set$y(t11);
              t11 = manifold.get$localPoint().get$x();
              cc.get$localPoint().set$x(t11);
              t11 = manifold.get$localPoint().get$y();
              cc.get$localPoint().set$y(t11);
              cc.set$radius($.add(radiusA, radiusB));
              cc.set$type(manifold.get$type());
              for (j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
                cp = $.index(manifold.get$points(), j);
                ccp = $.index(cc.get$points(), j);
                t8 = cp.get$normalImpulse();
                if (typeof t8 !== 'number')
                  throw $.iae(t8);
                ccp.set$normalImpulse(impulseRatio * t8);
                t9 = cp.get$tangentImpulse();
                if (typeof t9 !== 'number')
                  throw $.iae(t9);
                ccp.set$tangentImpulse(impulseRatio * t9);
                t10 = cp.get$localPoint().get$x();
                ccp.get$localPoint().set$x(t10);
                t10 = cp.get$localPoint().get$y();
                ccp.get$localPoint().set$y(t10);
                if (j >= t3)
                  throw $.ioore(j);
                t10 = $.sub(t2[j].get$x(), bodyA.get$sweep().get$center().get$x());
                ccp.get$rA().set$x(t10);
                t10 = $.sub(t2[j].get$y(), bodyA.get$sweep().get$center().get$y());
                ccp.get$rA().set$y(t10);
                t10 = $.sub(t2[j].get$x(), bodyB.get$sweep().get$center().get$x());
                ccp.get$rB().set$x(t10);
                t10 = $.sub(t2[j].get$y(), bodyB.get$sweep().get$center().get$y());
                ccp.get$rB().set$y(t10);
                rnA = $.sub($.mul(ccp.get$rA().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rA().get$y(), cc.get$normal().get$x()));
                rnB = $.sub($.mul(ccp.get$rB().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rB().get$y(), cc.get$normal().get$x()));
                rnA = $.mul(rnA, rnA);
                rnB = $.mul(rnB, rnB);
                kNormal = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rnA)), $.mul(bodyB.get$invInertia(), rnB));
                if (typeof kNormal !== 'number')
                  throw $.iae(kNormal);
                ccp.set$normalMass(1 / kNormal);
                t10 = cc.get$normal().get$y();
                if (typeof t10 !== 'number')
                  throw $.iae(t10);
                t4.x = 1 * t10;
                t11 = cc.get$normal().get$x();
                if (typeof t11 !== 'number')
                  throw $.iae(t11);
                t4.y = -1 * t11;
                rtA = $.sub($.mul(ccp.get$rA().get$x(), t4.y), $.mul(ccp.get$rA().get$y(), t4.x));
                rtB = $.sub($.mul(ccp.get$rB().get$x(), t4.y), $.mul(ccp.get$rB().get$y(), t4.x));
                rtA = $.mul(rtA, rtA);
                rtB = $.mul(rtB, rtB);
                kTangent = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rtA)), $.mul(bodyB.get$invInertia(), rtB));
                if (typeof kTangent !== 'number')
                  throw $.iae(kTangent);
                ccp.set$tangentMass(1 / kTangent);
                ccp.set$velocityBias(0);
                t5.x = $.mul($.neg(wA), ccp.get$rA().get$y());
                t5.y = $.mul(wA, ccp.get$rA().get$x());
                t6.x = $.sub($.sub($.add($.mul($.neg(wB), ccp.get$rB().get$y()), vB.get$x()), vA.get$x()), t5.x);
                t6.y = $.sub($.sub($.add($.mul(wB, ccp.get$rB().get$x()), vB.get$y()), vA.get$y()), t5.y);
                a = cc.get$normal();
                vRel = $.add($.mul(a.get$x(), t6.x), $.mul(a.get$y(), t6.y));
                if ($.ltB(vRel, -1))
                  ccp.set$velocityBias($.mul($.neg(restitution), vRel));
              }
              if ($.eqB(cc.get$pointCount(), 2)) {
                ccp1 = $.index(cc.get$points(), 0);
                ccp2 = $.index(cc.get$points(), 1);
                invMassA = bodyA.get$invMass();
                invIA = bodyA.get$invInertia();
                invMassB = bodyB.get$invMass();
                invIB = bodyB.get$invInertia();
                t8 = ccp1.get$rA();
                t9 = cc.get$normal();
                rn1A = $.sub($.mul(t8.get$x(), t9.get$y()), $.mul(t8.get$y(), t9.get$x()));
                t10 = ccp1.get$rB();
                t11 = cc.get$normal();
                rn1B = $.sub($.mul(t10.get$x(), t11.get$y()), $.mul(t10.get$y(), t11.get$x()));
                t12 = ccp2.get$rA();
                t13 = cc.get$normal();
                rn2A = $.sub($.mul(t12.get$x(), t13.get$y()), $.mul(t12.get$y(), t13.get$x()));
                t14 = ccp2.get$rB();
                t15 = cc.get$normal();
                rn2B = $.sub($.mul(t14.get$x(), t15.get$y()), $.mul(t14.get$y(), t15.get$x()));
                k11 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn1A)), $.mul($.mul(invIB, rn1B), rn1B));
                k22 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn2A), rn2A)), $.mul($.mul(invIB, rn2B), rn2B));
                k12 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn2A)), $.mul($.mul(invIB, rn1B), rn2B));
                t8 = $.mul(k11, k11);
                t9 = $.sub($.mul(k11, k22), $.mul(k12, k12));
                if (typeof t9 !== 'number')
                  throw $.iae(t9);
                if ($.ltB(t8, 100 * t9)) {
                  cc.get$K().get$col1().set$x(k11);
                  cc.get$K().get$col1().set$y(k12);
                  cc.get$K().get$col2().set$x(k12);
                  cc.get$K().get$col2().set$y(k22);
                  t8 = cc.get$K().get$col1().get$x();
                  cc.get$normalMass().get$col1().set$x(t8);
                  t8 = cc.get$K().get$col1().get$y();
                  cc.get$normalMass().get$col1().set$y(t8);
                  t8 = cc.get$K().get$col2().get$x();
                  cc.get$normalMass().get$col2().set$x(t8);
                  t8 = cc.get$K().get$col2().get$y();
                  cc.get$normalMass().get$col2().set$y(t8);
                  cc.get$normalMass().invertLocal$0();
                } else
                  cc.set$pointCount(1);
              }
              ++i;
          }
  }
},
 warmStart$0: function() {
  var t1, i, t2, c, bodyA, bodyB, invMassA, invIA, invMassB, invIB, normal, j, ccp, Px, Py, t3, t4, t5, t6;
  for (t1 = this.tangent, i = 0; $.ltB(i, this.constraintCount); ++i) {
    t2 = this.constraints;
    if (i >= t2.length)
      throw $.ioore(i);
    c = t2[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    invMassA = bodyA.get$invMass();
    if (typeof invMassA !== 'number')
      return this.warmStart$0$bailout(1, invMassA, bodyA, i, c, t1, bodyB);
    invIA = bodyA.get$invInertia();
    if (typeof invIA !== 'number')
      return this.warmStart$0$bailout(2, invMassA, invIA, bodyA, i, c, t1, bodyB);
    invMassB = bodyB.get$invMass();
    if (typeof invMassB !== 'number')
      return this.warmStart$0$bailout(3, invMassA, invIA, invMassB, i, bodyB, c, t1, bodyA);
    invIB = bodyB.get$invInertia();
    if (typeof invIB !== 'number')
      return this.warmStart$0$bailout(4, invMassA, invIA, invMassB, invIB, i, bodyB, c, t1, bodyA);
    normal = c.get$normal();
    $.Vector_crossVectorAndNumToOut(normal, 1, t1);
    for (j = 0; $.ltB(j, c.get$pointCount()); ++j) {
      ccp = $.index(c.get$points(), j);
      Px = $.add($.mul(ccp.get$normalImpulse(), normal.get$x()), $.mul(ccp.get$tangentImpulse(), t1.x));
      Py = $.add($.mul(ccp.get$normalImpulse(), normal.get$y()), $.mul(ccp.get$tangentImpulse(), t1.y));
      t2 = bodyA.get$angularVelocity();
      t3 = $.sub($.mul(ccp.get$rA().get$x(), Py), $.mul(ccp.get$rA().get$y(), Px));
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      bodyA.set$angularVelocity($.sub(t2, invIA * t3));
      t4 = bodyA.get$linearVelocity();
      t4.set$x($.sub(t4.get$x(), $.mul(Px, invMassA)));
      t4 = bodyA.get$linearVelocity();
      t4.set$y($.sub(t4.get$y(), $.mul(Py, invMassA)));
      t4 = bodyB.get$angularVelocity();
      t5 = $.sub($.mul(ccp.get$rB().get$x(), Py), $.mul(ccp.get$rB().get$y(), Px));
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      bodyB.set$angularVelocity($.add(t4, invIB * t5));
      t6 = bodyB.get$linearVelocity();
      t6.set$x($.add(t6.get$x(), $.mul(Px, invMassB)));
      t6 = bodyB.get$linearVelocity();
      t6.set$y($.add(t6.get$y(), $.mul(Py, invMassB)));
    }
  }
},
 warmStart$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      bodyB = env5;
      t1 = env4;
      c = env3;
      i = env2;
      bodyA = env1;
      invMassA = env0;
      break;
    case 2:
      bodyB = env6;
      t1 = env5;
      c = env4;
      i = env3;
      bodyA = env2;
      invIA = env1;
      invMassA = env0;
      break;
    case 3:
      bodyA = env7;
      t1 = env6;
      c = env5;
      bodyB = env4;
      i = env3;
      invMassB = env2;
      invIA = env1;
      invMassA = env0;
      break;
    case 4:
      bodyA = env8;
      t1 = env7;
      c = env6;
      bodyB = env5;
      i = env4;
      invIB = env3;
      invMassB = env2;
      invIA = env1;
      invMassA = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.tangent;
      i = 0;
    default:
      var t1, i, t2, c, bodyA, bodyB, invMassA, invIA, invMassB, invIB, normal, j, ccp, Px, Py;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, this.constraintCount))
                break L0;
              t2 = this.constraints;
              if (i >= t2.length)
                throw $.ioore(i);
              c = t2[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              invMassA = bodyA.get$invMass();
            case 1:
              state0 = 0;
              invIA = bodyA.get$invInertia();
            case 2:
              state0 = 0;
              invMassB = bodyB.get$invMass();
            case 3:
              state0 = 0;
              invIB = bodyB.get$invInertia();
            case 4:
              state0 = 0;
              normal = c.get$normal();
              $.Vector_crossVectorAndNumToOut(normal, 1, t1);
              for (j = 0; $.ltB(j, c.get$pointCount()); ++j) {
                ccp = $.index(c.get$points(), j);
                Px = $.add($.mul(ccp.get$normalImpulse(), normal.get$x()), $.mul(ccp.get$tangentImpulse(), t1.x));
                Py = $.add($.mul(ccp.get$normalImpulse(), normal.get$y()), $.mul(ccp.get$tangentImpulse(), t1.y));
                bodyA.set$angularVelocity($.sub(bodyA.get$angularVelocity(), $.mul(invIA, $.sub($.mul(ccp.get$rA().get$x(), Py), $.mul(ccp.get$rA().get$y(), Px)))));
                t2 = bodyA.get$linearVelocity();
                t2.set$x($.sub(t2.get$x(), $.mul(Px, invMassA)));
                t2 = bodyA.get$linearVelocity();
                t2.set$y($.sub(t2.get$y(), $.mul(Py, invMassA)));
                bodyB.set$angularVelocity($.add(bodyB.get$angularVelocity(), $.mul(invIB, $.sub($.mul(ccp.get$rB().get$x(), Py), $.mul(ccp.get$rB().get$y(), Px)))));
                t2 = bodyB.get$linearVelocity();
                t2.set$x($.add(t2.get$x(), $.mul(Px, invMassB)));
                t2 = bodyB.get$linearVelocity();
                t2.set$y($.add(t2.get$y(), $.mul(Py, invMassB)));
              }
              ++i;
          }
  }
},
 solveVelocityConstraints$0: function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, i, t11, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t17, t18, friction, j, ccp, a, t13, t20, t24, t26, t29, vt, lambda, maxFriction, newImpulse, t34, Px, Py, t38, t40, t42, t44, t46, t48, t50, t12, t14, t15, a1, b, vn, t32, t19, t21, t23, t25, t27, cp1, cp2, t30, t36, t41, vn1, t47, vn2, t53, t56, t58, t60, t63, t65, t67, t69, t71, t16, t28, t33, t35, t37;
  t1 = this.dv;
  t2 = this.tangent;
  t3 = this.d;
  t4 = this.x;
  t5 = this.P1;
  t6 = this.P2;
  t7 = this.temp1;
  t8 = this.temp2;
  t9 = this.dv1;
  t10 = this.dv2;
  i = 0;
  while (true) {
    t11 = this.constraintCount;
    if (typeof t11 !== 'number')
      return this.solveVelocityConstraints$0$bailout(1, t4, t5, t6, i, t2, t7, t8, t1, t11, t9, t10, t3);
    if (!(i < t11))
      break;
    t11 = this.constraints;
    if (i >= t11.length)
      throw $.ioore(i);
    c = t11[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    wA = bodyA.get$angularVelocity();
    if (typeof wA !== 'number')
      return this.solveVelocityConstraints$0$bailout(2, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, t1, t9, t10, t3);
    wB = bodyB.get$angularVelocity();
    if (typeof wB !== 'number')
      return this.solveVelocityConstraints$0$bailout(3, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, t1, t9, t10, t3);
    vA = bodyA.get$linearVelocity();
    vB = bodyB.get$linearVelocity();
    invMassA = bodyA.get$invMass();
    if (typeof invMassA !== 'number')
      return this.solveVelocityConstraints$0$bailout(4, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, t1, t9, t10, t3);
    invIA = bodyA.get$invInertia();
    if (typeof invIA !== 'number')
      return this.solveVelocityConstraints$0$bailout(5, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, t1, t9, t10, t3);
    invMassB = bodyB.get$invMass();
    if (typeof invMassB !== 'number')
      return this.solveVelocityConstraints$0$bailout(6, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, t9, t1, t10, t3);
    invIB = bodyB.get$invInertia();
    if (typeof invIB !== 'number')
      return this.solveVelocityConstraints$0$bailout(7, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t9, t1, t10, t3);
    t17 = c.get$normal().get$y();
    if (typeof t17 !== 'number')
      throw $.iae(t17);
    t2.x = 1 * t17;
    t18 = c.get$normal().get$x();
    if (typeof t18 !== 'number')
      throw $.iae(t18);
    t2.y = -1 * t18;
    friction = c.get$friction();
    if (typeof friction !== 'number')
      return this.solveVelocityConstraints$0$bailout(8, i, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, t1, t9, t10);
    j = 0;
    while (true) {
      t11 = c.get$pointCount();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(9, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t11, t10);
      if (!(j < t11))
        break;
      t11 = c.get$points();
      if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
        return this.solveVelocityConstraints$0$bailout(10, t11, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      if (j >= t11.length)
        throw $.ioore(j);
      ccp = t11[j];
      a = ccp.get$rA();
      t11 = -wB;
      t13 = ccp.get$rB().get$y();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(11, ccp, a, t11, i, t13, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t13 = t11 * t13;
      t11 = vB.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(12, ccp, a, i, t13, t11, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t11 = t13 + t11;
      t13 = vA.get$x();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(13, ccp, a, i, t11, t13, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t13 = t11 - t13;
      t11 = a.get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(14, ccp, a, i, c, t13, t11, bodyB, bodyA, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t1.x = t13 + wA * t11;
      t18 = ccp.get$rB().get$x();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(15, ccp, a, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t18, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t18 = wB * t18;
      t20 = vB.get$y();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(16, ccp, a, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t18, t20, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t20 = t18 + t20;
      t18 = vA.get$y();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(17, ccp, a, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t20, t18, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t18 = t20 - t18;
      t20 = a.get$x();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(18, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t20, t4, t5, t6, t2, t7, friction, t18, t8, wA, wB, t1, j, t9, t10);
      t1.y = t18 - wA * t20;
      t24 = t1.x;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(19, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t24, t2, t6, friction, t7, t8, wA, wB, t1, j, t9, t10);
      t26 = t2.x;
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(20, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t24, t2, t26, t6, friction, t7, t8, wA, wB, t1, j, t9, t10);
      t26 = t24 * t26;
      t24 = t1.y;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(21, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t24, t8, wA, wB, t26, t1, j, t9, t10);
      t29 = t2.y;
      if (typeof t29 !== 'number')
        return this.solveVelocityConstraints$0$bailout(22, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t24, t29, t8, wA, wB, t26, t1, j, t9, t10);
      vt = t26 + t24 * t29;
      t26 = ccp.get$tangentMass();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(23, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, vt, j, t26, t9, t10);
      lambda = t26 * -vt;
      t26 = ccp.get$normalImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(24, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, lambda, t26, t9, t10);
      maxFriction = friction * t26;
      t26 = ccp.get$tangentImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(25, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, lambda, t9, maxFriction, t26, t10);
      t26 += lambda;
      newImpulse = $.max(-maxFriction, $.min(t26, maxFriction));
      t34 = ccp.get$tangentImpulse();
      if (typeof t34 !== 'number')
        throw $.iae(t34);
      lambda = newImpulse - t34;
      t34 = t2.x;
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(26, ccp, newImpulse, i, lambda, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t34, t1, j, t9, t10);
      Px = t34 * lambda;
      t34 = t2.y;
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(27, ccp, newImpulse, i, lambda, Px, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t34, t1, j, t9, t10);
      Py = t34 * lambda;
      t34 = vA.get$x();
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(28, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, t34, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      vA.set$x(t34 - Px * invMassA);
      t38 = vA.get$y();
      if (typeof t38 !== 'number')
        return this.solveVelocityConstraints$0$bailout(29, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t38, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      vA.set$y(t38 - Py * invMassA);
      t40 = ccp.get$rA().get$x();
      if (typeof t40 !== 'number')
        return this.solveVelocityConstraints$0$bailout(30, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t40, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t40 *= Py;
      t42 = ccp.get$rA().get$y();
      if (typeof t42 !== 'number')
        return this.solveVelocityConstraints$0$bailout(31, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t40, t4, t42, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      wA -= invIA * (t40 - t42 * Px);
      t44 = vB.get$x();
      if (typeof t44 !== 'number')
        return this.solveVelocityConstraints$0$bailout(32, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t44, wB, t8, t1, j, t9, t10);
      vB.set$x(t44 + Px * invMassB);
      t46 = vB.get$y();
      if (typeof t46 !== 'number')
        return this.solveVelocityConstraints$0$bailout(33, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t8, wB, t1, t46, j, t9, t10);
      vB.set$y(t46 + Py * invMassB);
      t48 = ccp.get$rB().get$x();
      if (typeof t48 !== 'number')
        return this.solveVelocityConstraints$0$bailout(34, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t8, wB, t1, j, t48, t9, t10);
      t48 *= Py;
      t50 = ccp.get$rB().get$y();
      if (typeof t50 !== 'number')
        return this.solveVelocityConstraints$0$bailout(35, ccp, newImpulse, i, Px, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t8, wB, t1, j, t9, t48, t50, t10);
      wB += invIB * (t48 - t50 * Px);
      ccp.set$tangentImpulse(newImpulse);
      ++j;
    }
    t11 = t11 === 1;
    t12 = c.get$points();
    if (typeof t12 !== 'string' && (typeof t12 !== 'object' || t12 === null || t12.constructor !== Array && !t12.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$0$bailout(37, i, t11, bodyA, bodyB, c, t12, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
    t14 = t12.length;
    t15 = -wB;
    if (t11) {
      if (0 >= t14)
        throw $.ioore(0);
      ccp = t12[0];
      a1 = ccp.get$rA();
      t11 = ccp.get$rB().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(38, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t11, t15, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t11 = t15 * t11;
      t15 = vB.get$x();
      if (typeof t15 !== 'number')
        return this.solveVelocityConstraints$0$bailout(39, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t11, t15, a1, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t15 = t11 + t15;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(40, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t15, t11, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t11 = t15 - t11;
      t15 = a1.get$y();
      if (typeof t15 !== 'number')
        return this.solveVelocityConstraints$0$bailout(41, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t11, t15, t4, t5, t6, t2, t7, t3, t8, wA, wB, t1, t9, t10);
      t1.x = t11 + wA * t15;
      t18 = ccp.get$rB().get$x();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(42, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t3, t4, t5, t6, t2, t7, t18, t8, wA, wB, t1, t9, t10);
      t18 = wB * t18;
      t20 = vB.get$y();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(43, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t3, t4, t5, t6, t2, t7, t18, t20, wA, wB, t1, t8, t9, t10);
      t20 = t18 + t20;
      t18 = vA.get$y();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(44, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t3, t4, t5, t6, t2, t7, t8, wA, wB, t18, t1, t20, t9, t10);
      t18 = t20 - t18;
      t20 = a1.get$x();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(45, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t18, t20, t9, t10);
      t1.y = t18 - wA * t20;
      b = c.get$normal();
      t24 = t1.x;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(46, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t24, b, t9, t10);
      t26 = b.get$x();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(47, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t24, b, t9, t26, t10);
      t26 = t24 * t26;
      t24 = t1.y;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(48, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t24, b, t9, t26, t10);
      t29 = b.get$y();
      if (typeof t29 !== 'number')
        return this.solveVelocityConstraints$0$bailout(49, t29, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t24, t9, t26, t10);
      vn = t26 + t24 * t29;
      t26 = ccp.get$normalMass();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(50, vn, i, t26, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t26 = -t26;
      t32 = ccp.get$velocityBias();
      if (typeof t32 !== 'number')
        return this.solveVelocityConstraints$0$bailout(51, vn, i, t26, t32, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      lambda = t26 * (vn - t32);
      t26 = ccp.get$normalImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(52, i, lambda, c, bodyA, bodyB, t26, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      a = t26 + lambda;
      newImpulse = a > 0 ? a : 0;
      lambda = newImpulse - t26;
      t11 = c.get$normal().get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(54, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, newImpulse, invIB, lambda, invIA, t11, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      Px = t11 * lambda;
      t11 = c.get$normal().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(55, i, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, newImpulse, invIB, lambda, invIA, Px, t3, t11, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      Py = t11 * lambda;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(56, i, bodyA, bodyB, ccp, vB, invMassA, vA, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t11, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      vA.set$x(t11 - Px * invMassA);
      t15 = vA.get$y();
      if (typeof t15 !== 'number')
        return this.solveVelocityConstraints$0$bailout(57, i, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t6, t2, t7, t15, t8, wA, wB, t1, t9, t10);
      vA.set$y(t15 - Py * invMassA);
      t17 = ccp.get$rA().get$x();
      if (typeof t17 !== 'number')
        return this.solveVelocityConstraints$0$bailout(58, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t6, t2, t7, t8, wA, wB, t17, t1, t9, t10);
      t17 *= Py;
      t19 = ccp.get$rA().get$y();
      if (typeof t19 !== 'number')
        return this.solveVelocityConstraints$0$bailout(59, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t6, t2, t7, t8, wA, wB, t1, t17, t19, t9, t10);
      wA -= invIA * (t17 - t19 * Px);
      t21 = vB.get$x();
      if (typeof t21 !== 'number')
        return this.solveVelocityConstraints$0$bailout(60, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, Px, t3, t4, t5, Py, t6, t2, t7, t8, wB, t1, t9, wA, t10, t21);
      vB.set$x(t21 + Px * invMassB);
      t23 = vB.get$y();
      if (typeof t23 !== 'number')
        return this.solveVelocityConstraints$0$bailout(61, t23, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, Px, t3, t4, t5, Py, t6, t2, t7, t8, wB, t1, t9, wA, t10);
      vB.set$y(t23 + Py * invMassB);
      t25 = ccp.get$rB().get$x();
      if (typeof t25 !== 'number')
        return this.solveVelocityConstraints$0$bailout(62, t4, t5, Py, t6, i, t2, t7, t25, t8, wB, bodyA, bodyB, t1, vA, vB, ccp, invIB, newImpulse, t9, wA, t10, Px, t3);
      t25 *= Py;
      t27 = ccp.get$rB().get$y();
      if (typeof t27 !== 'number')
        return this.solveVelocityConstraints$0$bailout(63, t4, t5, t6, i, t2, t7, t8, t25, wB, t27, bodyA, bodyB, t1, vA, vB, ccp, newImpulse, invIB, t9, wA, t10, Px, t3);
      wB += invIB * (t25 - t27 * Px);
      ccp.set$normalImpulse(newImpulse);
    } else {
      if (0 >= t14)
        throw $.ioore(0);
      cp1 = t12[0];
      if (1 >= t12.length)
        throw $.ioore(1);
      cp2 = t12[1];
      a = $.Vector$(cp1.get$normalImpulse(), cp2.get$normalImpulse());
      t11 = cp1.get$rB().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(65, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t15, t11, t7, t2, t8, wA, wB, t1, t9, t10);
      t11 = t15 * t11;
      t13 = vB.get$x();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(66, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t11, t13, t8, wA, wB, t1, t9, t10);
      t13 = t11 + t13;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(67, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, t13, t11, wA, wB, t1, t9, t10);
      t11 = t13 - t11;
      t13 = cp1.get$rA().get$y();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(68, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t11, t13, t1, t9, t10);
      t9.x = t11 + wA * t13;
      t19 = cp1.get$rB().get$x();
      if (typeof t19 !== 'number')
        return this.solveVelocityConstraints$0$bailout(69, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t19, t9, t10);
      t19 = wB * t19;
      t21 = vB.get$y();
      if (typeof t21 !== 'number')
        return this.solveVelocityConstraints$0$bailout(70, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t19, t21, t10);
      t21 = t19 + t21;
      t19 = vA.get$y();
      if (typeof t19 !== 'number')
        return this.solveVelocityConstraints$0$bailout(71, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10, t21, t19);
      t19 = t21 - t19;
      t21 = cp1.get$rA().get$x();
      if (typeof t21 !== 'number')
        return this.solveVelocityConstraints$0$bailout(72, t19, t21, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t9.y = t19 - wA * t21;
      t25 = cp2.get$rB().get$y();
      if (typeof t25 !== 'number')
        return this.solveVelocityConstraints$0$bailout(73, i, t15, t25, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t25 = t15 * t25;
      t15 = vB.get$x();
      if (typeof t15 !== 'number')
        return this.solveVelocityConstraints$0$bailout(74, i, c, t25, t15, bodyB, bodyA, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t15 = t25 + t15;
      t25 = vA.get$x();
      if (typeof t25 !== 'number')
        return this.solveVelocityConstraints$0$bailout(75, i, c, bodyA, bodyB, t15, vA, vB, invMassA, invIA, invMassB, invIB, t25, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t25 = t15 - t25;
      t15 = cp2.get$rA().get$y();
      if (typeof t15 !== 'number')
        return this.solveVelocityConstraints$0$bailout(76, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t15, t25, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t10.x = t25 + wA * t15;
      t30 = cp2.get$rB().get$x();
      if (typeof t30 !== 'number')
        return this.solveVelocityConstraints$0$bailout(77, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, t30, cp2, t4, t5, a, t6, t3, t2, t7, t8, wA, wB, t1, t9, t10);
      t30 = wB * t30;
      t32 = vB.get$y();
      if (typeof t32 !== 'number')
        return this.solveVelocityConstraints$0$bailout(78, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t30, t6, t2, t7, t8, t32, wA, wB, t1, t9, t10);
      t32 = t30 + t32;
      t30 = vA.get$y();
      if (typeof t30 !== 'number')
        return this.solveVelocityConstraints$0$bailout(79, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t32, t6, t30, t2, t7, t8, wA, wB, t1, t9, t10);
      t30 = t32 - t30;
      t32 = cp2.get$rA().get$x();
      if (typeof t32 !== 'number')
        return this.solveVelocityConstraints$0$bailout(80, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t30, t7, t32, t8, wA, wB, t1, t9, t10);
      t10.y = t30 - wA * t32;
      t36 = t9.x;
      if (typeof t36 !== 'number')
        return this.solveVelocityConstraints$0$bailout(81, t36, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t38 = c.get$normal().get$x();
      if (typeof t38 !== 'number')
        return this.solveVelocityConstraints$0$bailout(82, t36, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t38, t9, t10);
      t38 = t36 * t38;
      t36 = t9.y;
      if (typeof t36 !== 'number')
        return this.solveVelocityConstraints$0$bailout(83, t36, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t38, t9, t10);
      t41 = c.get$normal().get$y();
      if (typeof t41 !== 'number')
        return this.solveVelocityConstraints$0$bailout(84, t36, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t38, t41, t9, t10);
      vn1 = t38 + t36 * t41;
      t38 = t10.x;
      if (typeof t38 !== 'number')
        return this.solveVelocityConstraints$0$bailout(85, i, t38, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      t44 = c.get$normal().get$x();
      if (typeof t44 !== 'number')
        return this.solveVelocityConstraints$0$bailout(86, t44, i, t38, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      t44 = t38 * t44;
      t38 = t10.y;
      if (typeof t38 !== 'number')
        return this.solveVelocityConstraints$0$bailout(87, t44, i, t38, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      t47 = c.get$normal().get$y();
      if (typeof t47 !== 'number')
        return this.solveVelocityConstraints$0$bailout(88, t44, i, t47, t38, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      vn2 = t44 + t38 * t47;
      t44 = cp1.get$velocityBias();
      if (typeof t44 !== 'number')
        return this.solveVelocityConstraints$0$bailout(89, i, vn2, t44, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      t44 = vn1 - t44;
      t50 = cp2.get$velocityBias();
      if (typeof t50 !== 'number')
        return this.solveVelocityConstraints$0$bailout(90, i, vn2, c, t44, t50, bodyB, bodyA, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      b = $.Vector$(t44, vn2 - t50);
      t44 = c.get$K().get$col1().get$x();
      if (typeof t44 !== 'number')
        return this.solveVelocityConstraints$0$bailout(91, i, c, bodyA, bodyB, vA, vB, invMassA, t44, invIA, invMassB, invIB, cp1, b, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t53 = a.x;
      if (typeof t53 !== 'number')
        return this.solveVelocityConstraints$0$bailout(92, i, t53, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t44, t9, t10);
      t53 = t44 * t53;
      t44 = c.get$K().get$col2().get$x();
      if (typeof t44 !== 'number')
        return this.solveVelocityConstraints$0$bailout(93, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t53, cp1, t44, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t56 = a.y;
      if (typeof t56 !== 'number')
        return this.solveVelocityConstraints$0$bailout(94, i, t56, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t53, cp1, t44, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t8.x = t53 + t44 * t56;
      t58 = c.get$K().get$col1().get$y();
      if (typeof t58 !== 'number')
        return this.solveVelocityConstraints$0$bailout(95, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t58, t2, t7, t8, wA, wB, t1, t9, t10);
      t60 = a.x;
      if (typeof t60 !== 'number')
        return this.solveVelocityConstraints$0$bailout(96, i, t60, bodyA, bodyB, c, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t58, t2, t7, t8, wA, wB, t1, t9, t10);
      t60 = t58 * t60;
      t58 = c.get$K().get$col2().get$y();
      if (typeof t58 !== 'number')
        return this.solveVelocityConstraints$0$bailout(97, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t60, t8, t58, wA, wB, t1, t9, t10);
      t63 = a.y;
      if (typeof t63 !== 'number')
        return this.solveVelocityConstraints$0$bailout(98, i, c, bodyA, t63, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t60, t8, t58, wA, wB, t1, t9, t10);
      t8.y = t60 + t58 * t63;
      t65 = b.x;
      if (typeof t65 !== 'number')
        return this.solveVelocityConstraints$0$bailout(99, i, c, bodyA, bodyB, t65, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t67 = t8.x;
      if (typeof t67 !== 'number')
        return this.solveVelocityConstraints$0$bailout(100, i, c, bodyA, bodyB, t65, vA, vB, invMassA, invIA, invMassB, invIB, b, t67, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      b.x = t65 - t67;
      t69 = b.y;
      if (typeof t69 !== 'number')
        return this.solveVelocityConstraints$0$bailout(101, i, c, bodyA, bodyB, vA, vB, invMassA, t69, invMassB, invIB, invIA, cp1, b, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t71 = t8.y;
      if (typeof t71 !== 'number')
        return this.solveVelocityConstraints$0$bailout(102, i, c, bodyA, bodyB, vA, vB, invMassA, t69, invMassB, invIB, invIA, t71, cp1, b, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      b.y = t69 - t71;
      while (true) {
        $.Matrix22_mulMatrixAndVectorToOut(c.get$normalMass(), b, t4);
        t4.mulLocal$1(-1);
        t11 = t4.get$x();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(103, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t11, t6, t2, t7, t8, wA, wB, t1, t9, t10);
        if (t11 >= 0) {
          t11 = t4.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(104, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, t11, wA, wB, t1, t9, t10);
          t11 = t11 >= 0;
        } else
          t11 = false;
        if (t11) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(105, t4, t5, t6, i, t2, t7, t8, wA, wB, bodyA, bodyB, t1, vA, vB, invIA, t11, invIB, t12, t9, cp1, t10, cp2, t3);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(106, i, bodyA, bodyB, vA, vB, invIA, t11, invIB, t12, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t14, t9, t10);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(107, t4, t5, t6, i, t2, t7, t8, wA, wB, bodyA, bodyB, t1, vA, vB, invIA, invIB, t9, t14, cp1, t11, t10, cp2, t3);
          t16 = t5.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(108, i, bodyA, bodyB, vA, vB, invIA, invIB, t14, cp1, t11, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t16, t9, t10);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(109, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t18, t14, t6, t2, t19, t7, t8, wA, wB, t1, t9, t10);
          t21 = t6.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(110, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t18, t14, t6, t2, t19, t7, t8, wA, wB, t1, t21, t9, t10);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(111, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t14, t6, t2, t21, t18, t7, t8, wA, wB, t1, t9, t10);
          t23 = t6.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(112, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t14, t6, t2, t21, t18, t7, t8, wA, wB, t1, t23, t9, t10);
          wA -= invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(113, t4, t5, t6, i, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, t25, wA, t26, invIB, t9, cp1, t10, cp2, t3);
          t28 = t5.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(114, t4, t5, t6, i, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, t25, wA, t26, invIB, t28, t9, cp1, t10, cp2, t3);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(115, t4, t5, t6, i, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, wA, invIB, t28, t25, t9, cp1, t10, cp2, t3);
          t30 = t5.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(116, t4, t5, t6, i, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, wA, invIB, t30, t28, t25, cp1, t9, t10, cp2, t3);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(117, t4, t33, t32, t6, i, t2, t5, t7, t3, t8, wB, bodyA, bodyB, t1, vA, vB, wA, invIB, t9, cp1, t10, t28, cp2);
          t35 = t6.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(118, t33, i, bodyA, bodyB, vA, vB, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wB, t1, wA, t9, t35, t10, t28, t32);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(119, t4, t5, t3, t35, i, t32, t6, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, wA, invIB, t9, cp1, t10, cp2, t28);
          t37 = t6.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(120, t35, i, t32, bodyA, bodyB, vA, vB, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wB, t1, wA, t9, t37, t10, t28);
          wB += invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        t11 = cp1.get$normalMass();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(121, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t11, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
        t11 = -t11;
        t13 = b.x;
        if (typeof t13 !== 'number')
          return this.solveVelocityConstraints$0$bailout(122, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, t11, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t13, t9, t10);
        t4.set$x(t11 * t13);
        t4.set$y(0);
        t15 = c.get$K().get$col1().get$y();
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(123, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t15, t2, t7, t8, wA, wB, t1, t9, t10);
        t17 = t4.get$x();
        if (typeof t17 !== 'number')
          return this.solveVelocityConstraints$0$bailout(124, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t15, t2, t7, t17, t8, wA, wB, t1, t9, t10);
        t17 = t15 * t17;
        t15 = b.y;
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(125, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t17, t8, wA, wB, t1, t15, t9, t10);
        vn2 = t17 + t15;
        t11 = t4.get$x();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(126, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, vn2, wB, t11, t1, t9, t10);
        if (t11 >= 0 && vn2 >= 0) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(127, t4, t5, t12, t6, i, t2, t7, t3, t8, wA, wB, bodyA, bodyB, t1, vA, vB, invIA, invIB, t9, cp1, t10, cp2, t11);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(128, i, bodyA, bodyB, vA, vB, invIA, t14, invIB, cp1, cp2, t11, t4, t5, t12, t6, t2, t7, t3, t8, wA, wB, t1, t9, t10);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(129, t4, t5, t6, i, t11, t14, t2, t7, t8, wA, wB, bodyA, bodyB, t1, vA, vB, invIA, invIB, t9, cp1, t10, cp2, t3);
          t16 = t5.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(130, i, bodyA, bodyB, vA, vB, invIA, invIB, t16, cp1, cp2, t3, t4, t5, t6, t11, t2, t14, t7, t8, wA, wB, t1, t9, t10);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(131, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t14, t18, wA, t19, wB, t1, t8, t9, t10);
          t21 = t6.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(132, i, bodyA, bodyB, vA, vB, invIA, invIB, t21, cp1, cp2, t3, t4, t5, t6, t2, t7, t14, t18, wA, t19, wB, t1, t8, t9, t10);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(133, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t14, t8, wA, wB, t21, t18, t1, t9, t10);
          t23 = t6.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(134, i, bodyA, bodyB, vA, vB, invIA, invIB, t23, cp1, cp2, t3, t4, t5, t6, t2, t7, t14, t8, wA, wB, t21, t18, t1, t9, t10);
          wA -= invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(135, t4, t5, t3, t10, t6, i, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, wA, t25, cp2, t26);
          t28 = t5.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(136, t4, t5, t26, t10, t6, i, t2, t7, t3, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t28, wA, t25, cp2);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(137, t4, t5, t28, t25, t6, i, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, wA, t10, cp2, t3);
          t30 = t5.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(138, t4, t5, t28, t25, t6, i, t2, t7, t8, t10, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, wA, t30, cp2, t3);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(139, t4, t5, t6, i, t2, t7, t28, t32, t8, t33, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, wA, t10, cp2, t3);
          t35 = t6.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(140, i, t28, t32, t33, bodyA, bodyB, vA, vB, invIB, cp1, cp2, t35, t4, t5, t3, t6, t2, t7, t8, wB, t1, t9, wA, t10);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(141, t4, t5, t6, i, t2, t7, t28, t8, wB, t35, t32, bodyB, bodyA, vA, vB, t1, invIB, t9, cp1, wA, t10, cp2, t3);
          t37 = t6.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(142, i, t28, t35, t32, bodyB, bodyA, vA, vB, invIB, cp1, cp2, t3, t4, t37, t5, t6, t2, t7, t8, wB, t1, t9, wA, t10);
          wB += invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        t4.set$x(0);
        t11 = cp2.get$normalMass();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(143, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t11, t2, t7, t8, wA, wB, t1, t9, t10);
        t11 = -t11;
        t13 = b.y;
        if (typeof t13 !== 'number')
          return this.solveVelocityConstraints$0$bailout(144, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t11, t8, wA, wB, t1, t13, t9, t10);
        t4.set$y(t11 * t13);
        t15 = c.get$K().get$col2().get$x();
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(145, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t15, t1, t9, t10);
        t17 = t4.get$y();
        if (typeof t17 !== 'number')
          return this.solveVelocityConstraints$0$bailout(146, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t15, t1, t17, t9, t10);
        t17 = t15 * t17;
        t15 = b.x;
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(147, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t17, t15, t9, t10);
        vn1 = t17 + t15;
        t11 = t4.get$y();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(148, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, vn1, t9, t11, t10);
        if (t11 >= 0 && vn1 >= 0) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(149, t4, t5, t6, i, t2, t7, t11, t8, t12, wA, wB, bodyA, bodyB, t1, vA, vB, invIA, invIB, t9, cp1, t10, cp2, t3);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(150, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t11, t8, t12, wA, wB, t1, t9, t14, t10);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(151, t4, t5, t6, i, t2, t7, t8, wA, wB, t14, t11, bodyB, bodyA, vA, vB, invIA, t1, invIB, t9, cp1, t10, cp2, t3);
          t16 = t5.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(152, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t14, t11, t1, t9, t16, t10);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(153, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t14, t18, t19, t9, t10);
          t21 = t6.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(154, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t14, t18, t19, t9, t10, t21);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(155, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t14, t9, t21, t18, t10);
          t23 = t6.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(156, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t14, t9, t21, t18, t10, t23);
          wA -= invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(157, t4, t5, t6, i, wA, t25, t2, t26, t7, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t28 = t5.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(158, t4, t5, t28, t6, i, wA, t25, t2, t26, t7, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(159, t4, t5, t6, i, wA, t7, t2, t8, t28, t25, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t30 = t5.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(160, t4, t5, t30, t6, i, wA, t7, t2, t8, t28, t25, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(161, t4, t5, t6, i, wA, t7, t2, t8, wB, bodyA, bodyB, t1, vA, vB, t32, t28, t33, invIB, t9, cp1, t10, cp2, t3);
          t35 = t6.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(162, t35, i, wA, bodyA, bodyB, vA, vB, t32, t28, t33, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wB, t1, t9, t10);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(163, t4, t5, t6, i, wA, t7, t2, t8, wB, bodyA, bodyB, t1, vA, vB, t28, invIB, t35, t32, t9, cp1, t10, cp2, t3);
          t37 = t6.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(164, t37, i, wA, bodyA, bodyB, vA, vB, t28, invIB, t35, t32, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wB, t1, t9, t10);
          wB += invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        t4.set$x(0);
        t4.set$y(0);
        vn1 = b.x;
        if (typeof vn1 !== 'number')
          return this.solveVelocityConstraints$0$bailout(165, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, vn1, t9, t10);
        vn2 = b.y;
        if (typeof vn2 !== 'number')
          return this.solveVelocityConstraints$0$bailout(166, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, vn1, vn2, t9, t10);
        if (vn1 >= 0 && vn2 >= 0) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(167, t4, t5, t11, t6, i, t12, t7, t2, t8, wA, wB, bodyA, bodyB, t1, vA, vB, invIA, invIB, t9, cp1, t10, cp2, t3);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(168, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t14, t4, t5, t3, t11, t6, t12, t2, t7, t8, wA, wB, t1, t9, t10);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(169, t4, t5, t6, i, t2, t7, t14, t11, t8, wA, wB, bodyA, bodyB, t1, vA, vB, invIA, invIB, t9, cp1, t10, cp2, t3);
          t16 = t5.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(170, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t16, t4, t5, t3, t6, t2, t7, t14, t11, t8, wA, wB, t1, t9, t10);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(171, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t14, t18, t1, t19, t9, t10);
          t21 = t6.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(172, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t21, t6, t2, t7, t8, wA, wB, t14, t18, t1, t19, t9, t10);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(173, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t14, t1, t21, t18, t9, t10);
          t23 = t6.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(174, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t23, t6, t2, t7, t8, wA, wB, t14, t1, t21, t18, t9, t10);
          wA -= invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(175, wA, t4, t5, t26, t6, i, t2, t25, t7, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t28 = t5.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(176, wA, t4, t5, t26, t6, i, t2, t25, t7, t28, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(177, wA, t4, t5, t6, i, t28, t25, t2, t7, t8, wB, bodyA, bodyB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t30 = t5.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(178, wA, t4, t5, t6, i, t28, t25, t30, t7, t2, wB, bodyA, bodyB, t8, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(179, wA, t4, t5, t6, i, t2, t7, t8, t28, t32, wB, bodyA, bodyB, t1, vA, vB, t33, invIB, t9, cp1, t10, cp2, t3);
          t35 = t6.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(180, wA, i, t28, t32, bodyA, bodyB, t33, vA, vB, invIB, cp1, cp2, t3, t4, t5, t6, t2, t35, t7, t8, wB, t1, t9, t10);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(181, wA, t4, t5, t6, i, t2, t7, t8, t28, wB, bodyA, bodyB, t1, vA, vB, t32, t35, invIB, t9, cp1, t10, cp2, t3);
          t37 = t6.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(182, wA, i, t28, bodyA, bodyB, vA, vB, t32, t35, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t37, t8, wB, t1, t9, t10);
          wB += invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        break;
      }
    }
    bodyA.get$linearVelocity().setFrom$1(vA);
    bodyA.set$angularVelocity(wA);
    bodyB.get$linearVelocity().setFrom$1(vB);
    bodyB.set$angularVelocity(wB);
    ++i;
  }
},
 solveVelocityConstraints$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22, env23, env24, env25, env26, env27, env28, env29) {
  switch (state0) {
    case 1:
      t3 = env11;
      t10 = env10;
      t9 = env9;
      t11 = env8;
      t1 = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 2:
      t3 = env14;
      t10 = env13;
      t9 = env12;
      t1 = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 3:
      t3 = env15;
      t10 = env14;
      t9 = env13;
      t1 = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 4:
      t3 = env18;
      t10 = env17;
      t9 = env16;
      t1 = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 5:
      t3 = env19;
      t10 = env18;
      t9 = env17;
      t1 = env16;
      invIA = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 6:
      t3 = env20;
      t10 = env19;
      t1 = env18;
      t9 = env17;
      invMassB = env16;
      invIA = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 7:
      t3 = env21;
      t10 = env20;
      t1 = env19;
      t9 = env18;
      invIB = env17;
      invMassB = env16;
      invIA = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 8:
      t10 = env22;
      t9 = env21;
      t1 = env20;
      t8 = env19;
      friction = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      wB = env5;
      wA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 9:
      t10 = env24;
      t11 = env23;
      t9 = env22;
      j = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      friction = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 10:
      t10 = env24;
      t9 = env23;
      j = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t11 = env0;
      break;
    case 11:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      t13 = env4;
      i = env3;
      t11 = env2;
      a = env1;
      ccp = env0;
      break;
    case 12:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      t11 = env4;
      t13 = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 13:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      t13 = env4;
      t11 = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 14:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyA = env7;
      bodyB = env6;
      t11 = env5;
      t13 = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 15:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      friction = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      t18 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 16:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t20 = env13;
      t18 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 17:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t18 = env13;
      t20 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 18:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t18 = env19;
      friction = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t20 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 19:
      t10 = env25;
      t9 = env24;
      j = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      friction = env17;
      t6 = env16;
      t2 = env15;
      t24 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 20:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      friction = env18;
      t6 = env17;
      t26 = env16;
      t2 = env15;
      t24 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 21:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      t26 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t24 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 22:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      t26 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t29 = env19;
      t24 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 23:
      t10 = env26;
      t9 = env25;
      t26 = env24;
      j = env23;
      vt = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 24:
      t10 = env26;
      t9 = env25;
      t26 = env24;
      lambda = env23;
      j = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 25:
      t10 = env27;
      t26 = env26;
      maxFriction = env25;
      t9 = env24;
      lambda = env23;
      j = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 26:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      t34 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      friction = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      lambda = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 27:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      t34 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      Px = env4;
      lambda = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 28:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      friction = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      invIB = env14;
      invMassB = env13;
      invIA = env12;
      invMassA = env11;
      vB = env10;
      vA = env9;
      t34 = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 29:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      friction = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      t38 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 30:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      friction = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      t40 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 31:
      t10 = env29;
      t9 = env28;
      j = env27;
      t1 = env26;
      wB = env25;
      wA = env24;
      t8 = env23;
      friction = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      t5 = env18;
      t42 = env17;
      t4 = env16;
      t40 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 32:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      t8 = env24;
      wB = env23;
      t44 = env22;
      wA = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 33:
      t10 = env28;
      t9 = env27;
      j = env26;
      t46 = env25;
      t1 = env24;
      wB = env23;
      t8 = env22;
      wA = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 34:
      t10 = env28;
      t9 = env27;
      t48 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      t8 = env22;
      wA = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 35:
      t10 = env28;
      t50 = env27;
      t48 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      t8 = env21;
      wA = env20;
      friction = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 36:
      t10 = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t11 = env1;
      i = env0;
      break;
    case 37:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      t13 = env5;
      c = env4;
      bodyB = env3;
      bodyA = env2;
      t11 = env1;
      i = env0;
      break;
    case 38:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t11 = env13;
      t12 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 39:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      a1 = env13;
      t11 = env12;
      t12 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 40:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t12 = env13;
      t11 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 41:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t3 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t11 = env13;
      t12 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 42:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t17 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 43:
      t10 = env25;
      t9 = env24;
      t8 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t19 = env19;
      t17 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 44:
      t10 = env25;
      t9 = env24;
      t19 = env23;
      t1 = env22;
      t17 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 45:
      t10 = env24;
      t9 = env23;
      t19 = env22;
      t17 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 46:
      t10 = env24;
      t9 = env23;
      b = env22;
      t23 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 47:
      t10 = env25;
      t25 = env24;
      t9 = env23;
      b = env22;
      t23 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 48:
      t10 = env25;
      t25 = env24;
      t9 = env23;
      b = env22;
      t23 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 49:
      t10 = env25;
      t25 = env24;
      t9 = env23;
      t23 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      invIA = env11;
      invIB = env10;
      invMassB = env9;
      ccp = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t28 = env0;
      break;
    case 50:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIA = env12;
      invIB = env11;
      invMassB = env10;
      ccp = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t25 = env2;
      i = env1;
      vn = env0;
      break;
    case 51:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIA = env13;
      invIB = env12;
      invMassB = env11;
      ccp = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      t31 = env3;
      t25 = env2;
      i = env1;
      vn = env0;
      break;
    case 52:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIA = env12;
      invIB = env11;
      invMassB = env10;
      ccp = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      t25 = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      lambda = env1;
      i = env0;
      break;
    case 53:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIA = env12;
      t11 = env11;
      invIB = env10;
      newImpulse = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 54:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t11 = env13;
      invIA = env12;
      lambda = env11;
      invIB = env10;
      newImpulse = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 55:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t11 = env14;
      t3 = env13;
      Px = env12;
      invIA = env11;
      lambda = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      ccp = env6;
      invMassA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 56:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t11 = env16;
      Py = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      Px = env11;
      invIA = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      vA = env6;
      invMassA = env5;
      vB = env4;
      ccp = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 57:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t16 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      Py = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      Px = env11;
      invIA = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      ccp = env6;
      invMassA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 58:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      t18 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      Py = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      Px = env10;
      invIA = env9;
      invIB = env8;
      newImpulse = env7;
      invMassB = env6;
      ccp = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 59:
      t10 = env25;
      t9 = env24;
      t20 = env23;
      t18 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      Py = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      Px = env10;
      invIA = env9;
      invIB = env8;
      newImpulse = env7;
      invMassB = env6;
      ccp = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 60:
      t22 = env23;
      t10 = env22;
      wA = env21;
      t9 = env20;
      t1 = env19;
      wB = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      Py = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      Px = env9;
      invIB = env8;
      newImpulse = env7;
      invMassB = env6;
      ccp = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 61:
      t10 = env23;
      wA = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      Py = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      Px = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      ccp = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      i = env1;
      t24 = env0;
      break;
    case 62:
      t3 = env22;
      Px = env21;
      t10 = env20;
      wA = env19;
      t9 = env18;
      newImpulse = env17;
      invIB = env16;
      ccp = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      bodyB = env11;
      bodyA = env10;
      wB = env9;
      t8 = env8;
      t26 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      Py = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 63:
      t3 = env22;
      Px = env21;
      t10 = env20;
      wA = env19;
      t9 = env18;
      invIB = env17;
      newImpulse = env16;
      ccp = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      bodyB = env11;
      bodyA = env10;
      t28 = env9;
      wB = env8;
      t26 = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 64:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      t11 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 65:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t2 = env20;
      t7 = env19;
      t13 = env18;
      t11 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 66:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t11 = env20;
      t13 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 67:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t13 = env21;
      t11 = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 68:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      t11 = env23;
      t13 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 69:
      t10 = env25;
      t9 = env24;
      t18 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 70:
      t10 = env26;
      t20 = env25;
      t18 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 71:
      t18 = env26;
      t20 = env25;
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 72:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      t20 = env1;
      t18 = env0;
      break;
    case 73:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t25 = env2;
      t24 = env1;
      i = env0;
      break;
    case 74:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyA = env5;
      bodyB = env4;
      t24 = env3;
      t25 = env2;
      c = env1;
      i = env0;
      break;
    case 75:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t25 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      t24 = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 76:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t25 = env11;
      t24 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 77:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t3 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      cp2 = env12;
      t30 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 78:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t32 = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t30 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 79:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t30 = env18;
      t6 = env17;
      t32 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 80:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t32 = env20;
      t7 = env19;
      t30 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 81:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 82:
      t10 = env26;
      t9 = env25;
      t38 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 83:
      t10 = env26;
      t9 = env25;
      t38 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 84:
      t10 = env27;
      t9 = env26;
      t41 = env25;
      t38 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 85:
      t10 = env26;
      vn1 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t38 = env1;
      i = env0;
      break;
    case 86:
      t10 = env27;
      vn1 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t38 = env2;
      i = env1;
      t44 = env0;
      break;
    case 87:
      t10 = env27;
      vn1 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t38 = env2;
      i = env1;
      t44 = env0;
      break;
    case 88:
      t10 = env28;
      vn1 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      cp1 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      t38 = env3;
      t47 = env2;
      i = env1;
      t44 = env0;
      break;
    case 89:
      t10 = env27;
      vn1 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t44 = env2;
      vn2 = env1;
      i = env0;
      break;
    case 90:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      cp1 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyA = env6;
      bodyB = env5;
      t50 = env4;
      t44 = env3;
      c = env2;
      vn2 = env1;
      i = env0;
      break;
    case 91:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      b = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      t44 = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 92:
      t10 = env27;
      t9 = env26;
      t44 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t53 = env1;
      i = env0;
      break;
    case 93:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      t44 = env13;
      cp1 = env12;
      t53 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 94:
      t10 = env28;
      t9 = env27;
      t1 = env26;
      wB = env25;
      wA = env24;
      t8 = env23;
      t7 = env22;
      t2 = env21;
      t6 = env20;
      a = env19;
      t5 = env18;
      t4 = env17;
      t3 = env16;
      cp2 = env15;
      t44 = env14;
      cp1 = env13;
      t53 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t56 = env1;
      i = env0;
      break;
    case 95:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t58 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 96:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t58 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      c = env4;
      bodyB = env3;
      bodyA = env2;
      t60 = env1;
      i = env0;
      break;
    case 97:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t58 = env22;
      t8 = env21;
      t60 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 98:
      t10 = env28;
      t9 = env27;
      t1 = env26;
      wB = env25;
      wA = env24;
      t58 = env23;
      t8 = env22;
      t60 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      t63 = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 99:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      t65 = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 100:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      cp1 = env13;
      t67 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      t65 = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 101:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      b = env12;
      cp1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      t69 = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 102:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      b = env13;
      cp1 = env12;
      t71 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      t69 = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 103:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t11 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 104:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t11 = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 105:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      t12 = env17;
      invIB = env16;
      t11 = env15;
      invIA = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      bodyB = env10;
      bodyA = env9;
      wB = env8;
      wA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 106:
      t10 = env23;
      t9 = env22;
      t14 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      cp2 = env10;
      cp1 = env9;
      t12 = env8;
      invIB = env7;
      t11 = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 107:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      t11 = env19;
      cp1 = env18;
      t14 = env17;
      t9 = env16;
      invIB = env15;
      invIA = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      bodyB = env10;
      bodyA = env9;
      wB = env8;
      wA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 108:
      t10 = env23;
      t9 = env22;
      t16 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      cp2 = env10;
      t11 = env9;
      cp1 = env8;
      t14 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 109:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t19 = env16;
      t2 = env15;
      t6 = env14;
      t14 = env13;
      t18 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 110:
      t10 = env24;
      t9 = env23;
      t21 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t19 = env16;
      t2 = env15;
      t6 = env14;
      t14 = env13;
      t18 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 111:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t18 = env16;
      t21 = env15;
      t2 = env14;
      t6 = env13;
      t14 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 112:
      t10 = env24;
      t9 = env23;
      t23 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t18 = env16;
      t21 = env15;
      t2 = env14;
      t6 = env13;
      t14 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 113:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      t26 = env15;
      wA = env14;
      t25 = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      bodyB = env9;
      bodyA = env8;
      wB = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 114:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      t28 = env17;
      invIB = env16;
      t26 = env15;
      wA = env14;
      t25 = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      bodyB = env9;
      bodyA = env8;
      wB = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 115:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      t25 = env16;
      t28 = env15;
      invIB = env14;
      wA = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      bodyB = env9;
      bodyA = env8;
      wB = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 116:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      t9 = env19;
      cp1 = env18;
      t25 = env17;
      t28 = env16;
      t30 = env15;
      invIB = env14;
      wA = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      bodyB = env9;
      bodyA = env8;
      wB = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 117:
      cp2 = env22;
      t28 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      wA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t8 = env9;
      t3 = env8;
      t7 = env7;
      t5 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t32 = env2;
      t33 = env1;
      t4 = env0;
      break;
    case 118:
      t32 = env23;
      t28 = env22;
      t10 = env21;
      t35 = env20;
      t9 = env19;
      wA = env18;
      t1 = env17;
      wB = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      i = env1;
      t33 = env0;
      break;
    case 119:
      t28 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      wA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t8 = env9;
      t7 = env8;
      t2 = env7;
      t6 = env6;
      t32 = env5;
      i = env4;
      t35 = env3;
      t3 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 120:
      t28 = env23;
      t10 = env22;
      t37 = env21;
      t9 = env20;
      wA = env19;
      t1 = env18;
      wB = env17;
      t8 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      invIB = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      t32 = env2;
      i = env1;
      t35 = env0;
      break;
    case 121:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t11 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 122:
      t10 = env27;
      t9 = env26;
      t13 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      t11 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 123:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t15 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 124:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t17 = env21;
      t7 = env20;
      t2 = env19;
      t15 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 125:
      t10 = env27;
      t9 = env26;
      t15 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t17 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 126:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      t11 = env24;
      wB = env23;
      vn2 = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 127:
      t11 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      wA = env9;
      t8 = env8;
      t3 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t12 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 128:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t3 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t12 = env13;
      t5 = env12;
      t4 = env11;
      t11 = env10;
      cp2 = env9;
      cp1 = env8;
      invIB = env7;
      t14 = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 129:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      wA = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      t14 = env5;
      t11 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 130:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t14 = env16;
      t2 = env15;
      t11 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      t16 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 131:
      t10 = env23;
      t9 = env22;
      t8 = env21;
      t1 = env20;
      wB = env19;
      t19 = env18;
      wA = env17;
      t18 = env16;
      t14 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 132:
      t10 = env24;
      t9 = env23;
      t8 = env22;
      t1 = env21;
      wB = env20;
      t19 = env19;
      wA = env18;
      t18 = env17;
      t14 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      t21 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 133:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      t18 = env20;
      t21 = env19;
      wB = env18;
      wA = env17;
      t8 = env16;
      t14 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 134:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      t18 = env21;
      t21 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t14 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      t23 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 135:
      t26 = env21;
      cp2 = env20;
      t25 = env19;
      wA = env18;
      cp1 = env17;
      t9 = env16;
      invIB = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      bodyB = env11;
      bodyA = env10;
      wB = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t10 = env3;
      t3 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 136:
      cp2 = env22;
      t25 = env21;
      wA = env20;
      t28 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t8 = env9;
      t3 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t10 = env3;
      t26 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 137:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      wA = env18;
      cp1 = env17;
      t9 = env16;
      invIB = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      bodyB = env11;
      bodyA = env10;
      wB = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t25 = env3;
      t28 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 138:
      t3 = env22;
      cp2 = env21;
      t30 = env20;
      wA = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t10 = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t25 = env3;
      t28 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 139:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      wA = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t33 = env9;
      t8 = env8;
      t32 = env7;
      t28 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 140:
      t10 = env23;
      wA = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t3 = env14;
      t5 = env13;
      t4 = env12;
      t35 = env11;
      cp2 = env10;
      cp1 = env9;
      invIB = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      t33 = env3;
      t32 = env2;
      t28 = env1;
      i = env0;
      break;
    case 141:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      wA = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      t1 = env15;
      vB = env14;
      vA = env13;
      bodyA = env12;
      bodyB = env11;
      t32 = env10;
      t35 = env9;
      wB = env8;
      t8 = env7;
      t28 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 142:
      t10 = env23;
      wA = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t37 = env13;
      t4 = env12;
      t3 = env11;
      cp2 = env10;
      cp1 = env9;
      invIB = env8;
      vB = env7;
      vA = env6;
      bodyA = env5;
      bodyB = env4;
      t32 = env3;
      t35 = env2;
      t28 = env1;
      i = env0;
      break;
    case 143:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t11 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 144:
      t10 = env27;
      t9 = env26;
      t13 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t11 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 145:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      t15 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 146:
      t10 = env27;
      t9 = env26;
      t17 = env25;
      t1 = env24;
      t15 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 147:
      t10 = env27;
      t9 = env26;
      t15 = env25;
      t17 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 148:
      t10 = env27;
      t11 = env26;
      t9 = env25;
      vn1 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 149:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      wA = env9;
      t12 = env8;
      t8 = env7;
      t11 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 150:
      t10 = env23;
      t14 = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t12 = env17;
      t8 = env16;
      t11 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 151:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      t1 = env16;
      invIA = env15;
      vB = env14;
      vA = env13;
      bodyA = env12;
      bodyB = env11;
      t11 = env10;
      t14 = env9;
      wB = env8;
      wA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 152:
      t10 = env23;
      t16 = env22;
      t9 = env21;
      t1 = env20;
      t11 = env19;
      t14 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 153:
      t10 = env23;
      t9 = env22;
      t19 = env21;
      t18 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 154:
      t21 = env24;
      t10 = env23;
      t9 = env22;
      t19 = env21;
      t18 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 155:
      t10 = env23;
      t18 = env22;
      t21 = env21;
      t9 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 156:
      t23 = env24;
      t10 = env23;
      t18 = env22;
      t21 = env21;
      t9 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 157:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t8 = env9;
      t7 = env8;
      t26 = env7;
      t2 = env6;
      t25 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 158:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      bodyB = env13;
      bodyA = env12;
      wB = env11;
      t8 = env10;
      t7 = env9;
      t26 = env8;
      t2 = env7;
      t25 = env6;
      wA = env5;
      i = env4;
      t6 = env3;
      t28 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 159:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t25 = env9;
      t28 = env8;
      t8 = env7;
      t2 = env6;
      t7 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 160:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      bodyB = env13;
      bodyA = env12;
      wB = env11;
      t25 = env10;
      t28 = env9;
      t8 = env8;
      t2 = env7;
      t7 = env6;
      wA = env5;
      i = env4;
      t6 = env3;
      t30 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 161:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      t33 = env16;
      t28 = env15;
      t32 = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      bodyB = env10;
      bodyA = env9;
      wB = env8;
      t8 = env7;
      t2 = env6;
      t7 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 162:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      t33 = env9;
      t28 = env8;
      t32 = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      wA = env2;
      i = env1;
      t35 = env0;
      break;
    case 163:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      t32 = env17;
      t35 = env16;
      invIB = env15;
      t28 = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      bodyB = env10;
      bodyA = env9;
      wB = env8;
      t8 = env7;
      t2 = env6;
      t7 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 164:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      t32 = env10;
      t35 = env9;
      invIB = env8;
      t28 = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      wA = env2;
      i = env1;
      t37 = env0;
      break;
    case 165:
      t10 = env26;
      t9 = env25;
      vn1 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 166:
      t10 = env26;
      t9 = env25;
      vn2 = env24;
      vn1 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 167:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      wA = env9;
      t8 = env8;
      t2 = env7;
      t7 = env6;
      t12 = env5;
      i = env4;
      t6 = env3;
      t11 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 168:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t12 = env15;
      t6 = env14;
      t11 = env13;
      t3 = env12;
      t5 = env11;
      t4 = env10;
      t14 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 169:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      wA = env9;
      t8 = env8;
      t11 = env7;
      t14 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 170:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t11 = env17;
      t14 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t3 = env12;
      t5 = env11;
      t4 = env10;
      t16 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 171:
      t10 = env23;
      t9 = env22;
      t19 = env21;
      t1 = env20;
      t18 = env19;
      t14 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 172:
      t10 = env24;
      t9 = env23;
      t19 = env22;
      t1 = env21;
      t18 = env20;
      t14 = env19;
      wB = env18;
      wA = env17;
      t8 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t21 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 173:
      t10 = env23;
      t9 = env22;
      t18 = env21;
      t21 = env20;
      t1 = env19;
      t14 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 174:
      t10 = env24;
      t9 = env23;
      t18 = env22;
      t21 = env21;
      t1 = env20;
      t14 = env19;
      wB = env18;
      wA = env17;
      t8 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t23 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 175:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t8 = env9;
      t7 = env8;
      t25 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t26 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 176:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      bodyB = env13;
      bodyA = env12;
      wB = env11;
      t8 = env10;
      t28 = env9;
      t7 = env8;
      t25 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t26 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 177:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t8 = env9;
      t7 = env8;
      t2 = env7;
      t25 = env6;
      t28 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 178:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      t8 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t2 = env9;
      t7 = env8;
      t30 = env7;
      t25 = env6;
      t28 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 179:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      t33 = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      wB = env10;
      t32 = env9;
      t28 = env8;
      t8 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 180:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t7 = env18;
      t35 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      vB = env8;
      vA = env7;
      t33 = env6;
      bodyB = env5;
      bodyA = env4;
      t32 = env3;
      t28 = env2;
      i = env1;
      wA = env0;
      break;
    case 181:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      t35 = env16;
      t32 = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      bodyB = env11;
      bodyA = env10;
      wB = env9;
      t28 = env8;
      t8 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 182:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t37 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      t35 = env8;
      t32 = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      t28 = env2;
      i = env1;
      wA = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.dv;
      t2 = this.tangent;
      t3 = this.d;
      t4 = this.x;
      t5 = this.P1;
      t6 = this.P2;
      t7 = this.temp1;
      t8 = this.temp2;
      t9 = this.dv1;
      t10 = this.dv2;
      i = 0;
    default:
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, i, t11, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t17, t18, friction, j, ccp, a, t13, t20, t24, t26, t29, vt, lambda, maxFriction, newImpulse, t34, Px, Py, t38, t40, t42, t44, t46, t48, t50, a1, t12, t19, b, t23, t25, t28, vn, t31, t16, t22, cp1, cp2, t30, t32, t36, t41, vn1, t47, vn2, t53, t56, t58, t60, t63, t65, t67, t69, t71, t14, t21, t33, t35, t37, t15;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t11 = this.constraintCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t11))
                break L0;
              t11 = this.constraints;
              if (i >= t11.length)
                throw $.ioore(i);
              c = t11[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              wA = bodyA.get$angularVelocity();
            case 2:
              state0 = 0;
              wB = bodyB.get$angularVelocity();
            case 3:
              state0 = 0;
              vA = bodyA.get$linearVelocity();
              vB = bodyB.get$linearVelocity();
              invMassA = bodyA.get$invMass();
            case 4:
              state0 = 0;
              invIA = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              invMassB = bodyB.get$invMass();
            case 6:
              state0 = 0;
              invIB = bodyB.get$invInertia();
            case 7:
              state0 = 0;
              t17 = c.get$normal().get$y();
              if (typeof t17 !== 'number')
                throw $.iae(t17);
              t2.x = 1 * t17;
              t18 = c.get$normal().get$x();
              if (typeof t18 !== 'number')
                throw $.iae(t18);
              t2.y = -1 * t18;
              friction = c.get$friction();
            case 8:
              state0 = 0;
              j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t11 = c.get$pointCount();
                    case 9:
                      state0 = 0;
                      if (!$.ltB(j, t11))
                        break L1;
                      t11 = c.get$points();
                    case 10:
                      state0 = 0;
                      ccp = $.index(t11, j);
                      a = ccp.get$rA();
                      t11 = $.neg(wB);
                      t13 = ccp.get$rB().get$y();
                    case 11:
                      state0 = 0;
                      t13 = $.mul(t11, t13);
                      t11 = vB.get$x();
                    case 12:
                      state0 = 0;
                      t11 = $.add(t13, t11);
                      t13 = vA.get$x();
                    case 13:
                      state0 = 0;
                      t13 = $.sub(t11, t13);
                      t11 = a.get$y();
                    case 14:
                      state0 = 0;
                      t1.x = $.add(t13, $.mul(wA, t11));
                      t18 = ccp.get$rB().get$x();
                    case 15:
                      state0 = 0;
                      t18 = $.mul(wB, t18);
                      t20 = vB.get$y();
                    case 16:
                      state0 = 0;
                      t20 = $.add(t18, t20);
                      t18 = vA.get$y();
                    case 17:
                      state0 = 0;
                      t18 = $.sub(t20, t18);
                      t20 = a.get$x();
                    case 18:
                      state0 = 0;
                      t1.y = $.sub(t18, $.mul(wA, t20));
                      t24 = t1.x;
                    case 19:
                      state0 = 0;
                      t26 = t2.x;
                    case 20:
                      state0 = 0;
                      t26 = $.mul(t24, t26);
                      t24 = t1.y;
                    case 21:
                      state0 = 0;
                      t29 = t2.y;
                    case 22:
                      state0 = 0;
                      vt = $.add(t26, $.mul(t24, t29));
                      t26 = ccp.get$tangentMass();
                    case 23:
                      state0 = 0;
                      lambda = $.mul(t26, $.neg(vt));
                      t26 = ccp.get$normalImpulse();
                    case 24:
                      state0 = 0;
                      maxFriction = $.mul(friction, t26);
                      t26 = ccp.get$tangentImpulse();
                    case 25:
                      state0 = 0;
                      t26 = $.add(t26, lambda);
                      newImpulse = $.max($.neg(maxFriction), $.min(t26, maxFriction));
                      t34 = ccp.get$tangentImpulse();
                      if (typeof t34 !== 'number')
                        throw $.iae(t34);
                      lambda = newImpulse - t34;
                      t34 = t2.x;
                    case 26:
                      state0 = 0;
                      Px = $.mul(t34, lambda);
                      t34 = t2.y;
                    case 27:
                      state0 = 0;
                      Py = $.mul(t34, lambda);
                      t34 = vA.get$x();
                    case 28:
                      state0 = 0;
                      vA.set$x($.sub(t34, $.mul(Px, invMassA)));
                      t38 = vA.get$y();
                    case 29:
                      state0 = 0;
                      vA.set$y($.sub(t38, $.mul(Py, invMassA)));
                      t40 = ccp.get$rA().get$x();
                    case 30:
                      state0 = 0;
                      t40 = $.mul(t40, Py);
                      t42 = ccp.get$rA().get$y();
                    case 31:
                      state0 = 0;
                      wA = $.sub(wA, $.mul(invIA, $.sub(t40, $.mul(t42, Px))));
                      t44 = vB.get$x();
                    case 32:
                      state0 = 0;
                      vB.set$x($.add(t44, $.mul(Px, invMassB)));
                      t46 = vB.get$y();
                    case 33:
                      state0 = 0;
                      vB.set$y($.add(t46, $.mul(Py, invMassB)));
                      t48 = ccp.get$rB().get$x();
                    case 34:
                      state0 = 0;
                      t48 = $.mul(t48, Py);
                      t50 = ccp.get$rB().get$y();
                    case 35:
                      state0 = 0;
                      wB = $.add(wB, $.mul(invIB, $.sub(t48, $.mul(t50, Px))));
                      ccp.set$tangentImpulse(newImpulse);
                      ++j;
                  }
              t11 = c.get$pointCount();
            case 36:
              state0 = 0;
              t11 = $.eqB(t11, 1);
              t13 = c.get$points();
            case 37:
              state0 = 0;
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
              if (state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 0 && t11)
                switch (state0) {
                  case 0:
                    ccp = $.index(t13, 0);
                    a1 = ccp.get$rA();
                    t11 = $.neg(wB);
                    t12 = ccp.get$rB().get$y();
                  case 38:
                    state0 = 0;
                    t12 = $.mul(t11, t12);
                    t11 = vB.get$x();
                  case 39:
                    state0 = 0;
                    t11 = $.add(t12, t11);
                    t12 = vA.get$x();
                  case 40:
                    state0 = 0;
                    t12 = $.sub(t11, t12);
                    t11 = a1.get$y();
                  case 41:
                    state0 = 0;
                    t1.x = $.add(t12, $.mul(wA, t11));
                    t17 = ccp.get$rB().get$x();
                  case 42:
                    state0 = 0;
                    t17 = $.mul(wB, t17);
                    t19 = vB.get$y();
                  case 43:
                    state0 = 0;
                    t19 = $.add(t17, t19);
                    t17 = vA.get$y();
                  case 44:
                    state0 = 0;
                    t17 = $.sub(t19, t17);
                    t19 = a1.get$x();
                  case 45:
                    state0 = 0;
                    t1.y = $.sub(t17, $.mul(wA, t19));
                    b = c.get$normal();
                    t23 = t1.x;
                  case 46:
                    state0 = 0;
                    t25 = b.get$x();
                  case 47:
                    state0 = 0;
                    t25 = $.mul(t23, t25);
                    t23 = t1.y;
                  case 48:
                    state0 = 0;
                    t28 = b.get$y();
                  case 49:
                    state0 = 0;
                    vn = $.add(t25, $.mul(t23, t28));
                    t25 = ccp.get$normalMass();
                  case 50:
                    state0 = 0;
                    t25 = $.neg(t25);
                    t31 = ccp.get$velocityBias();
                  case 51:
                    state0 = 0;
                    lambda = $.mul(t25, $.sub(vn, t31));
                    t25 = ccp.get$normalImpulse();
                  case 52:
                    state0 = 0;
                    a = $.add(t25, lambda);
                    newImpulse = $.gtB(a, 0) ? a : 0;
                    t11 = ccp.get$normalImpulse();
                  case 53:
                    state0 = 0;
                    lambda = $.sub(newImpulse, t11);
                    t11 = c.get$normal().get$x();
                  case 54:
                    state0 = 0;
                    Px = $.mul(t11, lambda);
                    t11 = c.get$normal().get$y();
                  case 55:
                    state0 = 0;
                    Py = $.mul(t11, lambda);
                    t11 = vA.get$x();
                  case 56:
                    state0 = 0;
                    vA.set$x($.sub(t11, $.mul(Px, invMassA)));
                    t16 = vA.get$y();
                  case 57:
                    state0 = 0;
                    vA.set$y($.sub(t16, $.mul(Py, invMassA)));
                    t18 = ccp.get$rA().get$x();
                  case 58:
                    state0 = 0;
                    t18 = $.mul(t18, Py);
                    t20 = ccp.get$rA().get$y();
                  case 59:
                    state0 = 0;
                    wA = $.sub(wA, $.mul(invIA, $.sub(t18, $.mul(t20, Px))));
                    t22 = vB.get$x();
                  case 60:
                    state0 = 0;
                    vB.set$x($.add(t22, $.mul(Px, invMassB)));
                    t24 = vB.get$y();
                  case 61:
                    state0 = 0;
                    vB.set$y($.add(t24, $.mul(Py, invMassB)));
                    t26 = ccp.get$rB().get$x();
                  case 62:
                    state0 = 0;
                    t26 = $.mul(t26, Py);
                    t28 = ccp.get$rB().get$y();
                  case 63:
                    state0 = 0;
                    wB = $.add(wB, $.mul(invIB, $.sub(t26, $.mul(t28, Px))));
                    ccp.set$normalImpulse(newImpulse);
                }
              else
                switch (state0) {
                  case 0:
                    cp1 = $.index(t13, 0);
                    t11 = c.get$points();
                  case 64:
                    state0 = 0;
                    cp2 = $.index(t11, 1);
                    a = $.Vector$(cp1.get$normalImpulse(), cp2.get$normalImpulse());
                    t11 = $.neg(wB);
                    t13 = cp1.get$rB().get$y();
                  case 65:
                    state0 = 0;
                    t13 = $.mul(t11, t13);
                    t11 = vB.get$x();
                  case 66:
                    state0 = 0;
                    t11 = $.add(t13, t11);
                    t13 = vA.get$x();
                  case 67:
                    state0 = 0;
                    t13 = $.sub(t11, t13);
                    t11 = cp1.get$rA().get$y();
                  case 68:
                    state0 = 0;
                    t9.x = $.add(t13, $.mul(wA, t11));
                    t18 = cp1.get$rB().get$x();
                  case 69:
                    state0 = 0;
                    t18 = $.mul(wB, t18);
                    t20 = vB.get$y();
                  case 70:
                    state0 = 0;
                    t20 = $.add(t18, t20);
                    t18 = vA.get$y();
                  case 71:
                    state0 = 0;
                    t18 = $.sub(t20, t18);
                    t20 = cp1.get$rA().get$x();
                  case 72:
                    state0 = 0;
                    t9.y = $.sub(t18, $.mul(wA, t20));
                    t24 = $.neg(wB);
                    t25 = cp2.get$rB().get$y();
                  case 73:
                    state0 = 0;
                    t25 = $.mul(t24, t25);
                    t24 = vB.get$x();
                  case 74:
                    state0 = 0;
                    t24 = $.add(t25, t24);
                    t25 = vA.get$x();
                  case 75:
                    state0 = 0;
                    t25 = $.sub(t24, t25);
                    t24 = cp2.get$rA().get$y();
                  case 76:
                    state0 = 0;
                    t10.x = $.add(t25, $.mul(wA, t24));
                    t30 = cp2.get$rB().get$x();
                  case 77:
                    state0 = 0;
                    t30 = $.mul(wB, t30);
                    t32 = vB.get$y();
                  case 78:
                    state0 = 0;
                    t32 = $.add(t30, t32);
                    t30 = vA.get$y();
                  case 79:
                    state0 = 0;
                    t30 = $.sub(t32, t30);
                    t32 = cp2.get$rA().get$x();
                  case 80:
                    state0 = 0;
                    t10.y = $.sub(t30, $.mul(wA, t32));
                    t36 = t9.x;
                  case 81:
                    state0 = 0;
                    t38 = c.get$normal().get$x();
                  case 82:
                    state0 = 0;
                    t38 = $.mul(t36, t38);
                    t36 = t9.y;
                  case 83:
                    state0 = 0;
                    t41 = c.get$normal().get$y();
                  case 84:
                    state0 = 0;
                    vn1 = $.add(t38, $.mul(t36, t41));
                    t38 = t10.x;
                  case 85:
                    state0 = 0;
                    t44 = c.get$normal().get$x();
                  case 86:
                    state0 = 0;
                    t44 = $.mul(t38, t44);
                    t38 = t10.y;
                  case 87:
                    state0 = 0;
                    t47 = c.get$normal().get$y();
                  case 88:
                    state0 = 0;
                    vn2 = $.add(t44, $.mul(t38, t47));
                    t44 = cp1.get$velocityBias();
                  case 89:
                    state0 = 0;
                    t44 = $.sub(vn1, t44);
                    t50 = cp2.get$velocityBias();
                  case 90:
                    state0 = 0;
                    b = $.Vector$(t44, $.sub(vn2, t50));
                    t44 = c.get$K().get$col1().get$x();
                  case 91:
                    state0 = 0;
                    t53 = a.x;
                  case 92:
                    state0 = 0;
                    t53 = $.mul(t44, t53);
                    t44 = c.get$K().get$col2().get$x();
                  case 93:
                    state0 = 0;
                    t56 = a.y;
                  case 94:
                    state0 = 0;
                    t8.x = $.add(t53, $.mul(t44, t56));
                    t58 = c.get$K().get$col1().get$y();
                  case 95:
                    state0 = 0;
                    t60 = a.x;
                  case 96:
                    state0 = 0;
                    t60 = $.mul(t58, t60);
                    t58 = c.get$K().get$col2().get$y();
                  case 97:
                    state0 = 0;
                    t63 = a.y;
                  case 98:
                    state0 = 0;
                    t8.y = $.add(t60, $.mul(t58, t63));
                    t65 = b.x;
                  case 99:
                    state0 = 0;
                    t67 = t8.x;
                  case 100:
                    state0 = 0;
                    b.x = $.sub(t65, t67);
                    t69 = b.y;
                  case 101:
                    state0 = 0;
                    t71 = t8.y;
                  case 102:
                    state0 = 0;
                    b.y = $.sub(t69, t71);
                  default:
                    L2:
                      while (true)
                        switch (state0) {
                          case 0:
                            if (!true)
                              break L2;
                            $.Matrix22_mulMatrixAndVectorToOut(c.get$normalMass(), b, t4);
                            t4.mulLocal$1(-1);
                            t11 = t4.get$x();
                          case 103:
                            state0 = 0;
                          case 104:
                            if (state0 === 104 || state0 === 0 && $.geB(t11, 0))
                              switch (state0) {
                                case 0:
                                  t11 = t4.get$y();
                                case 104:
                                  state0 = 0;
                                  t11 = $.geB(t11, 0);
                              }
                            else
                              t11 = false;
                          default:
                            if (state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 116 || state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 0 && t11)
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 105:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 106:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 107:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 108:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 109:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 110:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 111:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 112:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 113:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 114:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 115:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 116:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 117:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 118:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 119:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 120:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            t11 = cp1.get$normalMass();
                          case 121:
                            state0 = 0;
                            t11 = $.neg(t11);
                            t13 = b.x;
                          case 122:
                            state0 = 0;
                            t4.set$x($.mul(t11, t13));
                            t4.set$y(0);
                            t15 = c.get$K().get$col1().get$y();
                          case 123:
                            state0 = 0;
                            t17 = t4.get$x();
                          case 124:
                            state0 = 0;
                            t17 = $.mul(t15, t17);
                            t15 = b.y;
                          case 125:
                            state0 = 0;
                            vn2 = $.add(t17, t15);
                            t11 = t4.get$x();
                          case 126:
                            state0 = 0;
                          case 127:
                          case 128:
                          case 129:
                          case 130:
                          case 131:
                          case 132:
                          case 133:
                          case 134:
                          case 135:
                          case 136:
                          case 137:
                          case 138:
                          case 139:
                          case 140:
                          case 141:
                          case 142:
                            if (state0 === 142 || state0 === 141 || state0 === 140 || state0 === 139 || state0 === 138 || state0 === 137 || state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 127 || state0 === 0 && $.geB(t11, 0) && $.geB(vn2, 0))
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 127:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 128:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 129:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 130:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 131:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 132:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 133:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 134:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 135:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 136:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 137:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 138:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 139:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 140:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 141:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 142:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            t4.set$x(0);
                            t11 = cp2.get$normalMass();
                          case 143:
                            state0 = 0;
                            t11 = $.neg(t11);
                            t13 = b.y;
                          case 144:
                            state0 = 0;
                            t4.set$y($.mul(t11, t13));
                            t15 = c.get$K().get$col2().get$x();
                          case 145:
                            state0 = 0;
                            t17 = t4.get$y();
                          case 146:
                            state0 = 0;
                            t17 = $.mul(t15, t17);
                            t15 = b.x;
                          case 147:
                            state0 = 0;
                            vn1 = $.add(t17, t15);
                            t11 = t4.get$y();
                          case 148:
                            state0 = 0;
                          case 149:
                          case 150:
                          case 151:
                          case 152:
                          case 153:
                          case 154:
                          case 155:
                          case 156:
                          case 157:
                          case 158:
                          case 159:
                          case 160:
                          case 161:
                          case 162:
                          case 163:
                          case 164:
                            if (state0 === 164 || state0 === 163 || state0 === 162 || state0 === 161 || state0 === 160 || state0 === 159 || state0 === 158 || state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 152 || state0 === 151 || state0 === 150 || state0 === 149 || state0 === 0 && $.geB(t11, 0) && $.geB(vn1, 0))
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 149:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 150:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 151:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 152:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 153:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 154:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 155:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 156:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 157:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 158:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 159:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 160:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 161:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 162:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 163:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 164:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            t4.set$x(0);
                            t4.set$y(0);
                            vn1 = b.x;
                          case 165:
                            state0 = 0;
                            vn2 = b.y;
                          case 166:
                            state0 = 0;
                          case 167:
                          case 168:
                          case 169:
                          case 170:
                          case 171:
                          case 172:
                          case 173:
                          case 174:
                          case 175:
                          case 176:
                          case 177:
                          case 178:
                          case 179:
                          case 180:
                          case 181:
                          case 182:
                            if (state0 === 182 || state0 === 181 || state0 === 180 || state0 === 179 || state0 === 178 || state0 === 177 || state0 === 176 || state0 === 175 || state0 === 174 || state0 === 173 || state0 === 172 || state0 === 171 || state0 === 170 || state0 === 169 || state0 === 168 || state0 === 167 || state0 === 0 && $.geB(vn1, 0) && $.geB(vn2, 0))
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 167:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 168:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 169:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 170:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 171:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 172:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 173:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 174:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 175:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 176:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 177:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 178:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 179:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 180:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 181:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 182:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            break L2;
                        }
                }
              bodyA.get$linearVelocity().setFrom$1(vA);
              bodyA.set$angularVelocity(wA);
              bodyB.get$linearVelocity().setFrom$1(vB);
              bodyB.set$angularVelocity(wB);
              ++i;
          }
  }
},
 storeImpulses$0: function() {
  var i, t1, c, m, j;
  for (i = 0; $.ltB(i, this.constraintCount); ++i) {
    t1 = this.constraints;
    if (i >= t1.length)
      throw $.ioore(i);
    c = t1[i];
    m = c.get$manifold();
    for (j = 0; $.ltB(j, c.get$pointCount()); ++j) {
      t1 = $.index(c.get$points(), j).get$normalImpulse();
      $.index(m.get$points(), j).set$normalImpulse(t1);
      t1 = $.index(c.get$points(), j).get$tangentImpulse();
      $.index(m.get$points(), j).set$tangentImpulse(t1);
    }
  }
},
 solvePositionConstraints$1: function(baumgarte) {
  var t1, t2, t3, t4, psm, point, minSeparation, i, t5, c, bodyA, bodyB, t7, invMassA, invIA, t10, invMassB, invIB, j, t6, normal, separation, C, t9, t11, t13, rnA, rnB, K, impulse, t14, t16, t18, t20, t23;
  t1 = this.P;
  t2 = this.temp1;
  t3 = this.rA;
  t4 = this.rB;
  psm = this.psolver;
  point = psm.point;
  minSeparation = 0;
  i = 0;
  while (true) {
    t5 = this.constraintCount;
    if (typeof t5 !== 'number')
      return this.solvePositionConstraints$1$bailout(1, baumgarte, t5, t4, psm, minSeparation, t2, i, t1, t3, point);
    if (!(i < t5))
      break;
    t5 = this.constraints;
    if (i >= t5.length)
      throw $.ioore(i);
    c = t5[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    t5 = bodyA.get$mass();
    if (typeof t5 !== 'number')
      return this.solvePositionConstraints$1$bailout(2, baumgarte, minSeparation, t2, i, t1, t3, c, bodyA, bodyB, t5, t4, psm, point);
    t7 = bodyA.get$invMass();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(3, baumgarte, minSeparation, t2, i, t1, t3, c, bodyA, bodyB, t5, t4, t7, psm, point);
    invMassA = t5 * t7;
    t7 = bodyA.get$invInertia();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(5, baumgarte, minSeparation, t2, i, t1, t3, c, bodyA, bodyB, t4, invMassA, psm, point, t7, t5);
    invIA = t5 * t7;
    t7 = bodyB.get$mass();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(6, baumgarte, minSeparation, t2, i, t1, t3, c, bodyA, bodyB, t4, invMassA, psm, point, invIA, t7);
    t10 = bodyB.get$invMass();
    if (typeof t10 !== 'number')
      return this.solvePositionConstraints$1$bailout(7, baumgarte, minSeparation, t2, i, t1, t3, c, bodyA, bodyB, t4, invMassA, psm, point, invIA, t7, t10);
    invMassB = t7 * t10;
    t10 = bodyB.get$invInertia();
    if (typeof t10 !== 'number')
      return this.solvePositionConstraints$1$bailout(9, baumgarte, t10, t1, t2, i, minSeparation, t3, c, bodyA, bodyB, t4, invMassA, psm, point, invIA, invMassB, t7);
    invIB = t7 * t10;
    t5 = invMassA + invMassB;
    j = 0;
    while (true) {
      t6 = c.get$pointCount();
      if (typeof t6 !== 'number')
        return this.solvePositionConstraints$1$bailout(10, baumgarte, invIB, t1, t2, i, t3, j, minSeparation, c, bodyA, bodyB, t6, t4, invMassA, psm, point, invIA, invMassB);
      if (!(j < t6))
        break;
      psm.initialize$2(c, j);
      normal = psm.normal;
      separation = psm.separation;
      if (typeof separation !== 'number')
        return this.solvePositionConstraints$1$bailout(11, baumgarte, invIB, t1, t2, i, t3, j, minSeparation, c, bodyA, bodyB, t4, invMassA, normal, point, separation, invIA, psm, invMassB);
      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
      minSeparation = $.min(minSeparation, separation);
      C = $.max(-0.2, $.min(baumgarte * (separation + 0.005), 0));
      t7 = t3.x;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(12, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, t7, invMassB);
      t9 = normal.y;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(13, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, t7, invMassB, t9);
      t7 *= t9;
      t11 = t3.y;
      if (typeof t11 !== 'number')
        return this.solvePositionConstraints$1$bailout(14, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, c, bodyA, bodyB, C, t4, invMassA, normal, t7, psm, invIA, point, invMassB, t11);
      t13 = normal.x;
      if (typeof t13 !== 'number')
        return this.solvePositionConstraints$1$bailout(15, t13, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, c, bodyA, bodyB, C, t4, invMassA, normal, t7, psm, invIA, point, invMassB, t11);
      rnA = t7 - t11 * t13;
      t7 = t4.x;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(16, baumgarte, invIB, t7, minSeparation, t1, t2, i, t3, j, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, invMassB, rnA);
      t9 = t7 * t9;
      t7 = t4.y;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(18, baumgarte, invIB, t9, t7, minSeparation, t1, t2, i, t3, j, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, invMassB, rnA);
      rnB = t9 - t7 * t13;
      K = t5 + invIA * rnA * rnA + invIB * rnB * rnB;
      impulse = K > 0 ? -C / K : 0;
      t1.setFrom$1(normal).mulLocal$1(impulse);
      t2.setFrom$1(t1).mulLocal$1(invMassA);
      bodyA.get$sweep().get$center().subLocal$1(t2);
      t6 = bodyA.get$sweep();
      t7 = t6.get$angle();
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(20, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, t6, t7, bodyA, bodyB, c, t4, invMassA, psm, point, invIA, invMassB);
      t9 = t3.x;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(21, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, t9, t6, t7, bodyA, bodyB, c, t4, invMassA, psm, point, invIA, invMassB);
      t11 = t1.y;
      if (typeof t11 !== 'number')
        return this.solvePositionConstraints$1$bailout(22, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, t9, t11, t6, t7, bodyA, bodyB, c, t4, invMassA, psm, point, invIA, invMassB);
      t11 = t9 * t11;
      t9 = t3.y;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(23, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, t9, t7, bodyA, bodyB, c, t4, t6, t11, invMassA, point, psm, invIA, invMassB);
      t14 = t1.x;
      if (typeof t14 !== 'number')
        return this.solvePositionConstraints$1$bailout(24, baumgarte, invIB, minSeparation, t1, t2, i, t3, j, t6, t7, bodyA, bodyB, t14, t4, t9, t11, invMassA, point, psm, invIA, invMassB, c);
      t6.set$angle(t7 - invIA * (t11 - t9 * t14));
      bodyA.synchronizeTransform$0();
      t2.setFrom$1(t1).mulLocal$1(invMassB);
      bodyB.get$sweep().get$center().addLocal$1(t2);
      t6 = bodyB.get$sweep();
      t16 = t6.get$angle();
      if (typeof t16 !== 'number')
        return this.solvePositionConstraints$1$bailout(25, baumgarte, invIB, minSeparation, t1, t2, i, t6, j, t16, t3, c, bodyA, bodyB, t4, invMassA, psm, point, invIA, invMassB);
      t18 = t4.x;
      if (typeof t18 !== 'number')
        return this.solvePositionConstraints$1$bailout(26, baumgarte, invIB, minSeparation, t1, t2, i, t6, j, t16, t3, c, bodyA, bodyB, t4, t18, invMassA, point, psm, invIA, invMassB);
      t20 = t1.y;
      if (typeof t20 !== 'number')
        return this.solvePositionConstraints$1$bailout(27, baumgarte, invIB, minSeparation, t1, t2, i, t6, j, t16, t3, c, bodyA, bodyB, t4, t18, t20, point, invMassA, invIA, psm, invMassB);
      t20 = t18 * t20;
      t18 = t4.y;
      if (typeof t18 !== 'number')
        return this.solvePositionConstraints$1$bailout(28, baumgarte, invIB, minSeparation, t1, t2, i, t6, j, t16, t3, c, bodyA, t20, bodyB, t4, invMassA, psm, t18, point, invIA, invMassB);
      t23 = t1.x;
      if (typeof t23 !== 'number')
        return this.solvePositionConstraints$1$bailout(29, baumgarte, invIB, minSeparation, t1, t2, i, t6, j, t16, t3, c, bodyA, t20, bodyB, t4, invMassA, psm, t18, t23, invIA, point, invMassB);
      t6.set$angle(t16 + invIB * (t20 - t18 * t23));
      bodyB.synchronizeTransform$0();
      ++j;
    }
    ++i;
  }
  return minSeparation >= -0.0075;
},
 solvePositionConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22) {
  switch (state0) {
    case 1:
      point = env9;
      t3 = env8;
      t1 = env7;
      i = env6;
      t2 = env5;
      minSeparation = env4;
      psm = env3;
      t4 = env2;
      t5 = env1;
      baumgarte = env0;
      break;
    case 2:
      point = env12;
      psm = env11;
      t4 = env10;
      t5 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      i = env3;
      t2 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 3:
      point = env13;
      psm = env12;
      t7 = env11;
      t4 = env10;
      t5 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      i = env3;
      t2 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 4:
      t7 = env13;
      point = env12;
      psm = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      i = env3;
      t2 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 5:
      t7 = env14;
      t9 = env13;
      point = env12;
      psm = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      i = env3;
      t2 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 6:
      t9 = env14;
      invIA = env13;
      point = env12;
      psm = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      i = env3;
      t2 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 7:
      t11 = env15;
      t9 = env14;
      invIA = env13;
      point = env12;
      psm = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      i = env3;
      t2 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 8:
      t11 = env15;
      invMassB = env14;
      invIA = env13;
      point = env12;
      psm = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      i = env3;
      t2 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 9:
      t11 = env16;
      invMassB = env15;
      invIA = env14;
      point = env13;
      psm = env12;
      invMassA = env11;
      t4 = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t3 = env6;
      minSeparation = env5;
      i = env4;
      t2 = env3;
      t1 = env2;
      t13 = env1;
      baumgarte = env0;
      break;
    case 10:
      invMassB = env17;
      invIA = env16;
      point = env15;
      psm = env14;
      invMassA = env13;
      t4 = env12;
      t5 = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      minSeparation = env7;
      j = env6;
      t3 = env5;
      i = env4;
      t2 = env3;
      t1 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 11:
      invMassB = env18;
      psm = env17;
      invIA = env16;
      separation = env15;
      point = env14;
      normal = env13;
      invMassA = env12;
      t4 = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      minSeparation = env7;
      j = env6;
      t3 = env5;
      i = env4;
      t2 = env3;
      t1 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 12:
      invMassB = env19;
      t7 = env18;
      invIA = env17;
      psm = env16;
      point = env15;
      normal = env14;
      invMassA = env13;
      t4 = env12;
      C = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 13:
      t9 = env20;
      invMassB = env19;
      t7 = env18;
      invIA = env17;
      psm = env16;
      point = env15;
      normal = env14;
      invMassA = env13;
      t4 = env12;
      C = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 14:
      t7 = env20;
      invMassB = env19;
      point = env18;
      invIA = env17;
      psm = env16;
      t9 = env15;
      normal = env14;
      invMassA = env13;
      t4 = env12;
      C = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 15:
      t7 = env21;
      invMassB = env20;
      point = env19;
      invIA = env18;
      psm = env17;
      t9 = env16;
      normal = env15;
      invMassA = env14;
      t4 = env13;
      C = env12;
      bodyB = env11;
      bodyA = env10;
      c = env9;
      j = env8;
      t3 = env7;
      i = env6;
      t2 = env5;
      t1 = env4;
      minSeparation = env3;
      invIB = env2;
      baumgarte = env1;
      t12 = env0;
      break;
    case 16:
      rnA = env20;
      invMassB = env19;
      invIA = env18;
      psm = env17;
      point = env16;
      normal = env15;
      invMassA = env14;
      t4 = env13;
      C = env12;
      bodyB = env11;
      bodyA = env10;
      c = env9;
      j = env8;
      t3 = env7;
      i = env6;
      t2 = env5;
      t1 = env4;
      minSeparation = env3;
      t9 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 17:
      rnA = env21;
      invMassB = env20;
      invIA = env19;
      psm = env18;
      point = env17;
      normal = env16;
      invMassA = env15;
      t4 = env14;
      C = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      j = env9;
      t3 = env8;
      i = env7;
      t2 = env6;
      t1 = env5;
      minSeparation = env4;
      t15 = env3;
      t9 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 18:
      rnA = env21;
      invMassB = env20;
      invIA = env19;
      psm = env18;
      point = env17;
      normal = env16;
      invMassA = env15;
      t4 = env14;
      C = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      j = env9;
      t3 = env8;
      i = env7;
      t2 = env6;
      t1 = env5;
      minSeparation = env4;
      t9 = env3;
      t15 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 19:
      t4 = env22;
      j = env21;
      t3 = env20;
      t2 = env19;
      t1 = env18;
      t18 = env17;
      t9 = env16;
      t15 = env15;
      invIB = env14;
      rnA = env13;
      invMassB = env12;
      invIA = env11;
      psm = env10;
      point = env9;
      normal = env8;
      invMassA = env7;
      C = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 20:
      invMassB = env18;
      invIA = env17;
      point = env16;
      psm = env15;
      invMassA = env14;
      t4 = env13;
      c = env12;
      bodyB = env11;
      bodyA = env10;
      t6 = env9;
      t5 = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 21:
      invMassB = env19;
      invIA = env18;
      point = env17;
      psm = env16;
      invMassA = env15;
      t4 = env14;
      c = env13;
      bodyB = env12;
      bodyA = env11;
      t6 = env10;
      t5 = env9;
      t8 = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 22:
      invMassB = env20;
      invIA = env19;
      point = env18;
      psm = env17;
      invMassA = env16;
      t4 = env15;
      c = env14;
      bodyB = env13;
      bodyA = env12;
      t6 = env11;
      t5 = env10;
      t10 = env9;
      t8 = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 23:
      invMassB = env20;
      invIA = env19;
      psm = env18;
      point = env17;
      invMassA = env16;
      t10 = env15;
      t5 = env14;
      t4 = env13;
      c = env12;
      bodyB = env11;
      bodyA = env10;
      t6 = env9;
      t8 = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 24:
      c = env21;
      invMassB = env20;
      invIA = env19;
      psm = env18;
      point = env17;
      invMassA = env16;
      t10 = env15;
      t8 = env14;
      t4 = env13;
      t13 = env12;
      bodyB = env11;
      bodyA = env10;
      t6 = env9;
      t5 = env8;
      j = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 25:
      invMassB = env18;
      invIA = env17;
      point = env16;
      psm = env15;
      invMassA = env14;
      t4 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      t15 = env8;
      j = env7;
      t5 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 26:
      invMassB = env19;
      invIA = env18;
      psm = env17;
      point = env16;
      invMassA = env15;
      t17 = env14;
      t4 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      t15 = env8;
      j = env7;
      t5 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 27:
      invMassB = env20;
      psm = env19;
      invIA = env18;
      invMassA = env17;
      point = env16;
      t19 = env15;
      t17 = env14;
      t4 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      t15 = env8;
      j = env7;
      t5 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 28:
      invMassB = env20;
      invIA = env19;
      point = env18;
      t17 = env17;
      psm = env16;
      invMassA = env15;
      t4 = env14;
      bodyB = env13;
      t19 = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      t15 = env8;
      j = env7;
      t5 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 29:
      invMassB = env21;
      point = env20;
      invIA = env19;
      t22 = env18;
      t17 = env17;
      psm = env16;
      invMassA = env15;
      t4 = env14;
      bodyB = env13;
      t19 = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      t15 = env8;
      j = env7;
      t5 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.P;
      t2 = this.temp1;
      t3 = this.rA;
      t4 = this.rB;
      psm = this.psolver;
      point = psm.point;
      minSeparation = 0;
      i = 0;
    default:
      var t1, t2, t3, t4, psm, point, minSeparation, i, t5, baumgarte, c, bodyA, bodyB, t7, invMassA, t9, invIA, t11, invMassB, t13, invIB, j, normal, separation, t6, C, t12, rnA, t15, t18, rnB, K, impulse, t8, t10, t17, t19, t22;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t5 = this.constraintCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t5))
                break L0;
              t5 = this.constraints;
              if (i >= t5.length)
                throw $.ioore(i);
              c = t5[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              t5 = bodyA.get$mass();
            case 2:
              state0 = 0;
              t7 = bodyA.get$invMass();
            case 3:
              state0 = 0;
              invMassA = $.mul(t5, t7);
              t7 = bodyA.get$mass();
            case 4:
              state0 = 0;
              t9 = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              invIA = $.mul(t7, t9);
              t9 = bodyB.get$mass();
            case 6:
              state0 = 0;
              t11 = bodyB.get$invMass();
            case 7:
              state0 = 0;
              invMassB = $.mul(t9, t11);
              t11 = bodyB.get$mass();
            case 8:
              state0 = 0;
              t13 = bodyB.get$invInertia();
            case 9:
              state0 = 0;
              invIB = $.mul(t11, t13);
              j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t5 = c.get$pointCount();
                    case 10:
                      state0 = 0;
                      if (!$.ltB(j, t5))
                        break L1;
                      psm.initialize$2(c, j);
                      normal = psm.normal;
                      separation = psm.separation;
                    case 11:
                      state0 = 0;
                      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
                      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
                      minSeparation = $.min(minSeparation, separation);
                      t6 = $.add(separation, 0.005);
                      if (typeof t6 !== 'number')
                        throw $.iae(t6);
                      C = $.max(-0.2, $.min(baumgarte * t6, 0));
                      t7 = t3.x;
                    case 12:
                      state0 = 0;
                      t9 = normal.y;
                    case 13:
                      state0 = 0;
                      t9 = $.mul(t7, t9);
                      t7 = t3.y;
                    case 14:
                      state0 = 0;
                      t12 = normal.x;
                    case 15:
                      state0 = 0;
                      rnA = $.sub(t9, $.mul(t7, t12));
                      t9 = t4.x;
                    case 16:
                      state0 = 0;
                      t15 = normal.y;
                    case 17:
                      state0 = 0;
                      t15 = $.mul(t9, t15);
                      t9 = t4.y;
                    case 18:
                      state0 = 0;
                      t18 = normal.x;
                    case 19:
                      state0 = 0;
                      rnB = $.sub(t15, $.mul(t9, t18));
                      K = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rnA), rnA)), $.mul($.mul(invIB, rnB), rnB));
                      if ($.gtB(K, 0)) {
                        t5 = -C;
                        if (typeof K !== 'number')
                          throw $.iae(K);
                        impulse = t5 / K;
                      } else
                        impulse = 0;
                      t1.setFrom$1(normal).mulLocal$1(impulse);
                      t2.setFrom$1(t1).mulLocal$1(invMassA);
                      bodyA.get$sweep().get$center().subLocal$1(t2);
                      t5 = bodyA.get$sweep();
                      t6 = t5.get$angle();
                    case 20:
                      state0 = 0;
                      t8 = t3.x;
                    case 21:
                      state0 = 0;
                      t10 = t1.y;
                    case 22:
                      state0 = 0;
                      t10 = $.mul(t8, t10);
                      t8 = t3.y;
                    case 23:
                      state0 = 0;
                      t13 = t1.x;
                    case 24:
                      state0 = 0;
                      t5.set$angle($.sub(t6, $.mul(invIA, $.sub(t10, $.mul(t8, t13)))));
                      bodyA.synchronizeTransform$0();
                      t2.setFrom$1(t1).mulLocal$1(invMassB);
                      bodyB.get$sweep().get$center().addLocal$1(t2);
                      t5 = bodyB.get$sweep();
                      t15 = t5.get$angle();
                    case 25:
                      state0 = 0;
                      t17 = t4.x;
                    case 26:
                      state0 = 0;
                      t19 = t1.y;
                    case 27:
                      state0 = 0;
                      t19 = $.mul(t17, t19);
                      t17 = t4.y;
                    case 28:
                      state0 = 0;
                      t22 = t1.x;
                    case 29:
                      state0 = 0;
                      t5.set$angle($.add(t15, $.mul(invIB, $.sub(t19, $.mul(t17, t22)))));
                      bodyB.synchronizeTransform$0();
                      ++j;
                  }
              ++i;
          }
      return minSeparation >= -0.0075;
  }
},
 ContactSolver$0: function() {
  var i, t1, t2;
  for (i = 0; t1 = this.constraints, i < t1.length; ++i) {
    t2 = $.ContactConstraint$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
}
};

$$.PositionSolverManifold = {"": ["normal?", "point", "separation", "pointA?", "pointB?", "temp", "planePoint", "clipPoint"],
 "super": "Object",
 initialize$2: function(cc, index) {
  var t1, t2, t3, t4;
  switch (cc.get$type()) {
    case 0:
      t1 = cc.get$bodyA();
      t2 = cc.get$localPoint();
      t3 = this.pointA;
      t1.getWorldPointToOut$2(t2, t3);
      t2 = cc.get$bodyB();
      t1 = $.index(cc.get$points(), 0).get$localPoint();
      t4 = this.pointB;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = $.gtB($.MathBox_distanceSquared(t3, t4), 1.4208639999999999e-14);
      t2 = this.normal;
      if (t1) {
        t2.setFrom$1(t4).subLocal$1(t3);
        this.normal.normalize$0();
      } else
        t2.setCoords$2(1, 0);
      this.point.setFrom$1(t3).addLocal$1(t4).mulLocal$1(0.5);
      t1 = this.temp;
      t1.setFrom$1(t4).subLocal$1(t3);
      t3 = this.normal;
      this.separation = $.sub($.add($.mul(t1.x, t3.x), $.mul(t1.y, t3.y)), cc.get$radius());
      break;
    case 1:
      cc.get$bodyA().getWorldVectorToOut$2(cc.get$localNormal(), this.normal);
      t1 = cc.get$bodyA();
      t2 = cc.get$localPoint();
      t3 = this.planePoint;
      t1.getWorldPointToOut$2(t2, t3);
      t2 = cc.get$bodyB();
      t1 = $.index(cc.get$points(), index).get$localPoint();
      t4 = this.clipPoint;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = this.temp;
      t1.setFrom$1(t4).subLocal$1(t3);
      t3 = this.normal;
      this.separation = $.sub($.add($.mul(t1.x, t3.x), $.mul(t1.y, t3.y)), cc.get$radius());
      this.point.setFrom$1(t4);
      break;
    case 2:
      cc.get$bodyB().getWorldVectorToOut$2(cc.get$localNormal(), this.normal);
      t1 = cc.get$bodyB();
      t2 = cc.get$localPoint();
      t3 = this.planePoint;
      t1.getWorldPointToOut$2(t2, t3);
      t2 = cc.get$bodyA();
      t1 = $.index(cc.get$points(), index).get$localPoint();
      t4 = this.clipPoint;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = this.temp;
      t1.setFrom$1(t4).subLocal$1(t3);
      t3 = this.normal;
      this.separation = $.sub($.add($.mul(t1.x, t3.x), $.mul(t1.y, t3.y)), cc.get$radius());
      this.point.setFrom$1(t4);
      this.normal.negateLocal$0();
      break;
  }
}
};

$$.PolygonAndCircleContact = {"": ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(1, fA.get$type(), null);
  $.Expect_equals(0, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collidePolygonAndCircle$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.PolygonContact = {"": ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(1, fA.get$type(), null);
  $.Expect_equals(1, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collidePolygons$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.TimeOfImpactSolver = {"": ["constraints", "count=", "toiBody", "psm", "rA?", "rB?", "P", "temp"],
 "super": "Object",
 initialize$3: function(contacts, argCount, argToiBody) {
  var old, i, t1, t2, contact, fixtureA, fixtureB, shapeA, shapeB, radiusA, radiusB, bodyA, bodyB, manifold, constraint, j, cp;
  this.count = argCount;
  this.toiBody = argToiBody;
  if ($.geB(this.count, this.constraints.length)) {
    old = this.constraints;
    this.constraints = $._ListImpl_List($.max(this.count, old.length * 2));
    $.setRange$3(this.constraints, 0, old.length, old);
    for (i = old.length; t1 = this.constraints, i < t1.length; ++i) {
      t2 = $.TimeOfImpactConstraint$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  for (t1 = contacts.length, i = 0; $.ltB(i, this.count); ++i) {
    if (i >= t1)
      throw $.ioore(i);
    contact = contacts[i];
    fixtureA = contact.get$fixtureA();
    fixtureB = contact.get$fixtureB();
    shapeA = fixtureA.get$shape();
    shapeB = fixtureB.get$shape();
    radiusA = shapeA.get$radius();
    radiusB = shapeB.get$radius();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    manifold = contact.get$manifold();
    t2 = this.constraints;
    if (i >= t2.length)
      throw $.ioore(i);
    constraint = t2[i];
    constraint.set$bodyA(bodyA);
    constraint.set$bodyB(bodyB);
    constraint.get$localNormal().setFrom$1(manifold.get$localNormal());
    constraint.get$localPoint().setFrom$1(manifold.get$localPoint());
    constraint.set$type(manifold.get$type());
    constraint.set$pointCount(manifold.get$pointCount());
    constraint.set$radius($.add(radiusA, radiusB));
    for (j = 0; $.ltB(j, constraint.get$pointCount()); ++j) {
      cp = $.index(manifold.get$points(), j);
      $.indexSet(constraint.get$localPoints(), j, cp.get$localPoint());
    }
  }
},
 solve$1: function(baumgarte) {
  var t1, t2, t3, t4, t5, normal, point, minSeparation, i, t6, c, bodyA, bodyB, massA, massB, invMassA, invIA, invMassB, invIB, j, t7, separation, C, t8, t10, t12, t14, rnA, rnB, K, impulse, t15, t17, t19, t21, t24;
  t1 = this.P;
  t2 = this.temp;
  t3 = this.rA;
  t4 = this.rB;
  t5 = this.psm;
  normal = t5.normal;
  point = t5.point;
  minSeparation = 0;
  i = 0;
  while (true) {
    t6 = this.count;
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(1, baumgarte, t5, t4, i, normal, point, minSeparation, t1, t2, t3, t6);
    if (!(i < t6))
      break;
    t6 = this.constraints;
    if (i >= t6.length)
      throw $.ioore(i);
    c = t6[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    massA = bodyA.get$mass();
    if (typeof massA !== 'number')
      return this.solve$1$bailout(2, baumgarte, t5, t4, normal, i, point, minSeparation, c, bodyA, bodyB, massA, t1, t2, t3);
    massB = bodyB.get$mass();
    if (typeof massB !== 'number')
      return this.solve$1$bailout(3, baumgarte, t5, t4, normal, i, point, minSeparation, c, bodyA, bodyB, massA, massB, t1, t2, t3);
    if ($.eqB(bodyA, this.toiBody))
      massB = 0;
    else
      massA = 0;
    t6 = bodyA.get$invMass();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(4, baumgarte, massB, t5, t4, normal, i, point, minSeparation, c, bodyA, bodyB, t1, t2, massA, t3, t6);
    invMassA = massA * t6;
    t6 = bodyA.get$invInertia();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(5, baumgarte, invMassA, t6, t5, t4, normal, i, point, minSeparation, c, bodyA, bodyB, t1, t2, massA, t3, massB);
    invIA = massA * t6;
    t6 = bodyB.get$invMass();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(6, baumgarte, invMassA, invIA, t5, t4, normal, t6, point, i, minSeparation, c, bodyA, bodyB, t1, t2, t3, massB);
    invMassB = massB * t6;
    t6 = bodyB.get$invInertia();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(7, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, i, t6, minSeparation, c, bodyA, bodyB, t1, t2, t3, massB);
    invIB = massB * t6;
    t6 = invMassA + invMassB;
    j = 0;
    while (true) {
      t7 = c.get$pointCount();
      if (typeof t7 !== 'number')
        return this.solve$1$bailout(8, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, minSeparation, c, bodyA, bodyB, i, j, t2, t7, t1, t3);
      if (!(j < t7))
        break;
      t5.initialize$2(c, j);
      separation = t5.separation;
      if (typeof separation !== 'number')
        return this.solve$1$bailout(9, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, separation, minSeparation, c, bodyA, bodyB, i, j, t2, t1, t3);
      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
      minSeparation = $.min(minSeparation, separation);
      C = $.max(-0.2, $.min(baumgarte * (separation + 0.005), 0));
      t8 = t3.x;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(10, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, i, t8, c, bodyA, minSeparation, bodyB, j, t2, t1, t3);
      t10 = normal.y;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(11, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, i, t8, t10, bodyA, minSeparation, bodyB, c, j, t2, t1, t3);
      t8 *= t10;
      t12 = t3.y;
      if (typeof t12 !== 'number')
        return this.solve$1$bailout(12, C, invMassA, baumgarte, invIA, t8, t4, normal, invMassB, point, invIB, t5, i, c, bodyA, minSeparation, bodyB, t12, j, t2, t1, t3);
      t14 = normal.x;
      if (typeof t14 !== 'number')
        return this.solve$1$bailout(13, C, invMassA, baumgarte, invIA, t8, t4, normal, invMassB, point, invIB, t5, i, c, bodyA, minSeparation, bodyB, t12, t14, j, t2, t1, t3);
      rnA = t8 - t12 * t14;
      t8 = t4.x;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(14, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, rnA, i, c, bodyA, minSeparation, bodyB, t8, j, t2, t1, t3);
      t10 = t8 * t10;
      t8 = t4.y;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(16, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, rnA, i, t10, bodyA, minSeparation, bodyB, t8, j, t2, t1, t3, c);
      rnB = t10 - t8 * t14;
      K = t6 + invIA * rnA * rnA + invIB * rnB * rnB;
      impulse = K > 0 ? -C / K : 0;
      t1.setFrom$1(normal).mulLocal$1(impulse);
      t2.setFrom$1(t1).mulLocal$1(invMassA);
      bodyA.get$sweep().get$center().subLocal$1(t2);
      t7 = bodyA.get$sweep();
      t8 = t7.get$angle();
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(18, baumgarte, invMassA, invIA, t5, t4, invMassB, normal, point, invIB, i, c, bodyA, minSeparation, bodyB, j, t2, t1, t3, t8, t7);
      t10 = t3.x;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(19, baumgarte, invMassA, t7, invIA, t5, t4, invMassB, normal, point, invIB, i, c, bodyA, minSeparation, bodyB, j, t2, t1, t3, t8, t10);
      t12 = t1.y;
      if (typeof t12 !== 'number')
        return this.solve$1$bailout(20, t12, baumgarte, t10, invIA, t5, t4, invMassB, normal, point, invIB, invMassA, i, c, bodyA, minSeparation, bodyB, j, t2, t1, t3, t8, t7);
      t12 = t10 * t12;
      t10 = t3.y;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(21, baumgarte, t10, invMassA, t12, invIA, t5, t4, invMassB, normal, point, invIB, t3, i, c, bodyA, minSeparation, bodyB, j, t2, t1, t7, t8);
      t15 = t1.x;
      if (typeof t15 !== 'number')
        return this.solve$1$bailout(22, baumgarte, t10, t15, t4, i, c, bodyA, minSeparation, bodyB, t7, t8, invMassA, t12, invIA, t5, invMassB, normal, point, invIB, j, t2, t1, t3);
      t7.set$angle(t8 - invIA * (t12 - t10 * t15));
      bodyA.synchronizeTransform$0();
      t2.setFrom$1(t1).mulLocal$1(invMassB);
      bodyB.get$sweep().get$center().addLocal$1(t2);
      t7 = bodyB.get$sweep();
      t17 = t7.get$angle();
      if (typeof t17 !== 'number')
        return this.solve$1$bailout(23, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, i, c, bodyA, minSeparation, bodyB, t7, j, t17, t2, t1, t3);
      t19 = t4.x;
      if (typeof t19 !== 'number')
        return this.solve$1$bailout(24, baumgarte, invMassA, invIA, t5, t4, normal, t19, point, invIB, invMassB, c, bodyA, minSeparation, bodyB, i, t7, j, t17, t2, t1, t3);
      t21 = t1.y;
      if (typeof t21 !== 'number')
        return this.solve$1$bailout(25, baumgarte, invMassA, invIA, t5, t4, normal, t19, t21, invIB, point, invMassB, c, bodyA, minSeparation, bodyB, i, t7, j, t17, t2, t1, t3);
      t21 = t19 * t21;
      t19 = t4.y;
      if (typeof t19 !== 'number')
        return this.solve$1$bailout(26, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, t19, i, c, bodyA, minSeparation, bodyB, t7, j, t17, t2, t1, t3, t21);
      t24 = t1.x;
      if (typeof t24 !== 'number')
        return this.solve$1$bailout(27, baumgarte, t4, i, t19, t24, c, bodyA, minSeparation, bodyB, invMassA, invIA, t5, normal, invMassB, point, invIB, t7, j, t17, t2, t1, t3, t21);
      t7.set$angle(t17 + invIB * (t21 - t19 * t24));
      bodyB.synchronizeTransform$0();
      ++j;
    }
    ++i;
  }
  return minSeparation >= -0.0075;
},
 solve$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22) {
  switch (state0) {
    case 1:
      t6 = env10;
      t3 = env9;
      t2 = env8;
      t1 = env7;
      minSeparation = env6;
      point = env5;
      normal = env4;
      i = env3;
      t4 = env2;
      t5 = env1;
      baumgarte = env0;
      break;
    case 2:
      t3 = env13;
      t2 = env12;
      t1 = env11;
      massA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      minSeparation = env6;
      point = env5;
      i = env4;
      normal = env3;
      t4 = env2;
      t5 = env1;
      baumgarte = env0;
      break;
    case 3:
      t3 = env14;
      t2 = env13;
      t1 = env12;
      massB = env11;
      massA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      minSeparation = env6;
      point = env5;
      i = env4;
      normal = env3;
      t4 = env2;
      t5 = env1;
      baumgarte = env0;
      break;
    case 4:
      t6 = env15;
      t3 = env14;
      massA = env13;
      t2 = env12;
      t1 = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      minSeparation = env7;
      point = env6;
      i = env5;
      normal = env4;
      t4 = env3;
      t5 = env2;
      massB = env1;
      baumgarte = env0;
      break;
    case 5:
      massB = env16;
      t3 = env15;
      massA = env14;
      t2 = env13;
      t1 = env12;
      bodyB = env11;
      bodyA = env10;
      c = env9;
      minSeparation = env8;
      point = env7;
      i = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      t6 = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 6:
      massB = env16;
      t3 = env15;
      t2 = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      minSeparation = env9;
      i = env8;
      point = env7;
      t6 = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 7:
      massB = env17;
      t3 = env16;
      t2 = env15;
      t1 = env14;
      bodyB = env13;
      bodyA = env12;
      c = env11;
      minSeparation = env10;
      t6 = env9;
      i = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 8:
      t3 = env18;
      t1 = env17;
      t6 = env16;
      t2 = env15;
      j = env14;
      i = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      minSeparation = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 9:
      t3 = env18;
      t1 = env17;
      t2 = env16;
      j = env15;
      i = env14;
      bodyB = env13;
      bodyA = env12;
      c = env11;
      minSeparation = env10;
      separation = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 10:
      t3 = env19;
      t1 = env18;
      t2 = env17;
      j = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      c = env12;
      t8 = env11;
      i = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 11:
      t3 = env20;
      t1 = env19;
      t2 = env18;
      j = env17;
      c = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      t10 = env12;
      t8 = env11;
      i = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 12:
      t3 = env20;
      t1 = env19;
      t2 = env18;
      j = env17;
      t8 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      c = env12;
      i = env11;
      t5 = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t10 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 13:
      t3 = env21;
      t1 = env20;
      t2 = env19;
      j = env18;
      t13 = env17;
      t8 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      c = env12;
      i = env11;
      t5 = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t10 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 14:
      t3 = env20;
      t1 = env19;
      t2 = env18;
      j = env17;
      t10 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      c = env12;
      i = env11;
      rnA = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 15:
      t3 = env21;
      t1 = env20;
      t2 = env19;
      j = env18;
      t16 = env17;
      t10 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      c = env12;
      i = env11;
      rnA = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 16:
      c = env21;
      t3 = env20;
      t1 = env19;
      t2 = env18;
      j = env17;
      t10 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      t16 = env12;
      i = env11;
      rnA = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 17:
      t3 = env22;
      t1 = env21;
      t2 = env20;
      j = env19;
      t19 = env18;
      t10 = env17;
      t16 = env16;
      rnA = env15;
      invIB = env14;
      point = env13;
      invMassB = env12;
      normal = env11;
      t5 = env10;
      invIA = env9;
      invMassA = env8;
      C = env7;
      bodyB = env6;
      minSeparation = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      t4 = env1;
      baumgarte = env0;
      break;
    case 18:
      t6 = env19;
      t7 = env18;
      t3 = env17;
      t1 = env16;
      t2 = env15;
      j = env14;
      bodyB = env13;
      minSeparation = env12;
      bodyA = env11;
      c = env10;
      i = env9;
      invIB = env8;
      point = env7;
      normal = env6;
      invMassB = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 19:
      t9 = env20;
      t7 = env19;
      t3 = env18;
      t1 = env17;
      t2 = env16;
      j = env15;
      bodyB = env14;
      minSeparation = env13;
      bodyA = env12;
      c = env11;
      i = env10;
      invIB = env9;
      point = env8;
      normal = env7;
      invMassB = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      t6 = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 20:
      t6 = env21;
      t7 = env20;
      t3 = env19;
      t1 = env18;
      t2 = env17;
      j = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      c = env12;
      i = env11;
      invMassA = env10;
      invIB = env9;
      point = env8;
      normal = env7;
      invMassB = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      t9 = env2;
      baumgarte = env1;
      t11 = env0;
      break;
    case 21:
      t7 = env21;
      t6 = env20;
      t1 = env19;
      t2 = env18;
      j = env17;
      bodyB = env16;
      minSeparation = env15;
      bodyA = env14;
      c = env13;
      i = env12;
      t3 = env11;
      invIB = env10;
      point = env9;
      normal = env8;
      invMassB = env7;
      t4 = env6;
      t5 = env5;
      invIA = env4;
      t11 = env3;
      invMassA = env2;
      t9 = env1;
      baumgarte = env0;
      break;
    case 22:
      t3 = env22;
      t1 = env21;
      t2 = env20;
      j = env19;
      invIB = env18;
      point = env17;
      normal = env16;
      invMassB = env15;
      t5 = env14;
      invIA = env13;
      t11 = env12;
      invMassA = env11;
      t7 = env10;
      t6 = env9;
      bodyB = env8;
      minSeparation = env7;
      bodyA = env6;
      c = env5;
      i = env4;
      t4 = env3;
      t14 = env2;
      t9 = env1;
      baumgarte = env0;
      break;
    case 23:
      t3 = env19;
      t1 = env18;
      t2 = env17;
      t16 = env16;
      j = env15;
      t6 = env14;
      bodyB = env13;
      minSeparation = env12;
      bodyA = env11;
      c = env10;
      i = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 24:
      t3 = env20;
      t1 = env19;
      t2 = env18;
      t16 = env17;
      j = env16;
      t6 = env15;
      i = env14;
      bodyB = env13;
      minSeparation = env12;
      bodyA = env11;
      c = env10;
      invMassB = env9;
      invIB = env8;
      point = env7;
      t18 = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 25:
      t3 = env21;
      t1 = env20;
      t2 = env19;
      t16 = env18;
      j = env17;
      t6 = env16;
      i = env15;
      bodyB = env14;
      minSeparation = env13;
      bodyA = env12;
      c = env11;
      invMassB = env10;
      point = env9;
      invIB = env8;
      t20 = env7;
      t18 = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 26:
      t20 = env21;
      t3 = env20;
      t1 = env19;
      t2 = env18;
      t16 = env17;
      j = env16;
      t6 = env15;
      bodyB = env14;
      minSeparation = env13;
      bodyA = env12;
      c = env11;
      i = env10;
      t18 = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 27:
      t20 = env22;
      t3 = env21;
      t1 = env20;
      t2 = env19;
      t16 = env18;
      j = env17;
      t6 = env16;
      invIB = env15;
      point = env14;
      invMassB = env13;
      normal = env12;
      t5 = env11;
      invIA = env10;
      invMassA = env9;
      bodyB = env8;
      minSeparation = env7;
      bodyA = env6;
      c = env5;
      t23 = env4;
      t18 = env3;
      i = env2;
      t4 = env1;
      baumgarte = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.P;
      t2 = this.temp;
      t3 = this.rA;
      t4 = this.rB;
      t5 = this.psm;
      normal = t5.normal;
      point = t5.point;
      minSeparation = 0;
      i = 0;
    default:
      var t1, t2, t3, t4, t5, normal, point, minSeparation, i, t6, baumgarte, c, bodyA, bodyB, massA, massB, invMassA, invIA, invMassB, invIB, j, separation, t7, C, t8, t10, t13, rnA, t16, t19, rnB, K, impulse, t9, t11, t14, t18, t20, t23;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t6 = this.count;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t6))
                break L0;
              t6 = this.constraints;
              if (i >= t6.length)
                throw $.ioore(i);
              c = t6[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              massA = bodyA.get$mass();
            case 2:
              state0 = 0;
              massB = bodyB.get$mass();
            case 3:
              state0 = 0;
              if ($.eqB(bodyA, this.toiBody))
                massB = 0;
              else
                massA = 0;
              t6 = bodyA.get$invMass();
            case 4:
              state0 = 0;
              invMassA = $.mul(massA, t6);
              t6 = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              invIA = $.mul(massA, t6);
              t6 = bodyB.get$invMass();
            case 6:
              state0 = 0;
              invMassB = $.mul(massB, t6);
              t6 = bodyB.get$invInertia();
            case 7:
              state0 = 0;
              invIB = $.mul(massB, t6);
              j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t6 = c.get$pointCount();
                    case 8:
                      state0 = 0;
                      if (!$.ltB(j, t6))
                        break L1;
                      t5.initialize$2(c, j);
                      separation = t5.separation;
                    case 9:
                      state0 = 0;
                      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
                      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
                      minSeparation = $.min(minSeparation, separation);
                      t7 = $.add(separation, 0.005);
                      if (typeof t7 !== 'number')
                        throw $.iae(t7);
                      C = $.max(-0.2, $.min(baumgarte * t7, 0));
                      t8 = t3.x;
                    case 10:
                      state0 = 0;
                      t10 = normal.y;
                    case 11:
                      state0 = 0;
                      t10 = $.mul(t8, t10);
                      t8 = t3.y;
                    case 12:
                      state0 = 0;
                      t13 = normal.x;
                    case 13:
                      state0 = 0;
                      rnA = $.sub(t10, $.mul(t8, t13));
                      t10 = t4.x;
                    case 14:
                      state0 = 0;
                      t16 = normal.y;
                    case 15:
                      state0 = 0;
                      t16 = $.mul(t10, t16);
                      t10 = t4.y;
                    case 16:
                      state0 = 0;
                      t19 = normal.x;
                    case 17:
                      state0 = 0;
                      rnB = $.sub(t16, $.mul(t10, t19));
                      K = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rnA), rnA)), $.mul($.mul(invIB, rnB), rnB));
                      if ($.gtB(K, 0)) {
                        t6 = -C;
                        if (typeof K !== 'number')
                          throw $.iae(K);
                        impulse = t6 / K;
                      } else
                        impulse = 0;
                      t1.setFrom$1(normal).mulLocal$1(impulse);
                      t2.setFrom$1(t1).mulLocal$1(invMassA);
                      bodyA.get$sweep().get$center().subLocal$1(t2);
                      t6 = bodyA.get$sweep();
                      t7 = t6.get$angle();
                    case 18:
                      state0 = 0;
                      t9 = t3.x;
                    case 19:
                      state0 = 0;
                      t11 = t1.y;
                    case 20:
                      state0 = 0;
                      t11 = $.mul(t9, t11);
                      t9 = t3.y;
                    case 21:
                      state0 = 0;
                      t14 = t1.x;
                    case 22:
                      state0 = 0;
                      t6.set$angle($.sub(t7, $.mul(invIA, $.sub(t11, $.mul(t9, t14)))));
                      bodyA.synchronizeTransform$0();
                      t2.setFrom$1(t1).mulLocal$1(invMassB);
                      bodyB.get$sweep().get$center().addLocal$1(t2);
                      t6 = bodyB.get$sweep();
                      t16 = t6.get$angle();
                    case 23:
                      state0 = 0;
                      t18 = t4.x;
                    case 24:
                      state0 = 0;
                      t20 = t1.y;
                    case 25:
                      state0 = 0;
                      t20 = $.mul(t18, t20);
                      t18 = t4.y;
                    case 26:
                      state0 = 0;
                      t23 = t1.x;
                    case 27:
                      state0 = 0;
                      t6.set$angle($.add(t16, $.mul(invIB, $.sub(t20, $.mul(t18, t23)))));
                      bodyB.synchronizeTransform$0();
                      ++j;
                  }
              ++i;
          }
      return minSeparation >= -0.0075;
  }
},
 TimeOfImpactSolver$0: function() {
  var i, t1, t2;
  for (i = 0; t1 = this.constraints, i < t1.length; ++i) {
    t2 = $.TimeOfImpactConstraint$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
}
};

$$.TimeOfImpactSolverManifold = {"": ["normal?", "point", "separation", "pointA?", "pointB?", "temp", "planePoint", "clipPoint"],
 "super": "Object",
 initialize$2: function(cc, index) {
  var t1, t2, t3, t4;
  switch (cc.get$type()) {
    case 0:
      t1 = this.pointA;
      t1.setFrom$1(cc.get$bodyA().getWorldPoint$1(cc.get$localPoint()));
      t2 = this.pointB;
      t2.setFrom$1(cc.get$bodyB().getWorldPoint$1($.index(cc.get$localPoints(), 0)));
      t3 = $.gtB($.MathBox_distanceSquared(t1, t2), 1.4208639999999999e-14);
      t4 = this.normal;
      if (t3) {
        t4.setFrom$1(t2).subLocal$1(t1);
        t4.normalize$0();
      } else
        t4.setCoords$2(1, 0);
      this.point.setFrom$1(t1).addLocal$1(t2).mulLocal$1(0.5);
      t3 = this.temp;
      t3.setFrom$1(t2).subLocal$1(t1);
      t1 = this.normal;
      this.separation = $.sub($.add($.mul(t3.x, t1.x), $.mul(t3.y, t1.y)), cc.get$radius());
      break;
    case 1:
      t1 = this.normal;
      t1.setFrom$1(cc.get$bodyA().getWorldVector$1(cc.get$localNormal()));
      t2 = this.planePoint;
      t2.setFrom$1(cc.get$bodyA().getWorldPoint$1(cc.get$localPoint()));
      t3 = this.clipPoint;
      t3.setFrom$1(cc.get$bodyB().getWorldPoint$1($.index(cc.get$localPoints(), index)));
      t4 = this.temp;
      t4.setFrom$1(t3).subLocal$1(t2);
      this.separation = $.sub($.add($.mul(t4.x, t1.x), $.mul(t4.y, t1.y)), cc.get$radius());
      this.point.setFrom$1(t3);
      break;
    case 2:
      t1 = this.normal;
      t1.setFrom$1(cc.get$bodyB().getWorldVector$1(cc.get$localNormal()));
      t2 = this.planePoint;
      t2.setFrom$1(cc.get$bodyB().getWorldPoint$1(cc.get$localPoint()));
      t3 = this.clipPoint;
      t3.setFrom$1(cc.get$bodyA().getWorldPoint$1($.index(cc.get$localPoints(), index)));
      t4 = this.temp;
      t4.setFrom$1(t3).subLocal$1(t2);
      this.separation = $.sub($.add($.mul(t4.x, t1.x), $.mul(t4.y, t1.y)), cc.get$radius());
      this.point.setFrom$1(t3);
      t1.negateLocal$0();
      break;
  }
}
};

$$.TimeOfImpactConstraint = {"": ["localPoints?", "localNormal?", "localPoint?", "type=", "radius=", "pointCount=", "bodyA=", "bodyB="],
 "super": "Object",
 setFrom$1: function(argOther) {
  var t1, t2, i, t3, t4;
  for (t1 = this.localPoints, t2 = t1.length, i = 0; i < t2; ++i) {
    t3 = t1[i];
    t4 = argOther.get$localPoints();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(1, argOther, t3, t4, i, t2, t1);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
  }
  this.localNormal.setFrom$1(argOther.get$localNormal());
  this.localPoint.setFrom$1(argOther.get$localPoint());
  this.type = argOther.get$type();
  this.radius = argOther.get$radius();
  this.pointCount = argOther.get$pointCount();
  this.bodyA = argOther.get$bodyA();
  this.bodyB = argOther.get$bodyB();
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env5;
      t2 = env4;
      i = env3;
      t4 = env2;
      t3 = env1;
      argOther = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.localPoints;
      t2 = t1.length;
      i = 0;
    case 1:
      var t1, t2, i, t3, t4, argOther;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < t2))
                break L0;
              t3 = t1[i];
              t4 = argOther.get$localPoints();
            case 1:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
      this.localNormal.setFrom$1(argOther.get$localNormal());
      this.localPoint.setFrom$1(argOther.get$localPoint());
      this.type = argOther.get$type();
      this.radius = argOther.get$radius();
      this.pointCount = argOther.get$pointCount();
      this.bodyA = argOther.get$bodyA();
      this.bodyB = argOther.get$bodyB();
  }
},
 TimeOfImpactConstraint$0: function() {
  var t1, t2, i;
  for (t1 = this.localPoints, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.DefaultWorldPool = {"": ["collision", "timeOfImpact", "distance="],
 "super": "Object",
 timeOfImpact$2: function(arg0, arg1) { return this.timeOfImpact.call$2(arg0, arg1); },
 distance$3: function(arg0, arg1, arg2) { return this.distance.call$3(arg0, arg1, arg2); },
 getCircleContactStack$0: function() {
  var queue, i;
  queue = $.Queue_Queue();
  for (i = 0; i < 10; ++i)
    queue.addFirst$1($.CircleContact$(this));
  return queue;
},
 getPolyCircleContactStack$0: function() {
  var queue, i;
  queue = $.Queue_Queue();
  for (i = 0; i < 10; ++i)
    queue.addFirst$1($.PolygonAndCircleContact$(this));
  return queue;
},
 getPolyContactStack$0: function() {
  var queue, i;
  queue = $.Queue_Queue();
  for (i = 0; i < 10; ++i)
    queue.addFirst$1($.PolygonContact$(this));
  return queue;
},
 DefaultWorldPool$0: function() {
  this.distance = $.Distance$_construct();
  this.collision = $.Collision$_construct(this);
  this.timeOfImpact = $.TimeOfImpact$_construct(this);
}
};

$$.Camera = {"": ["matrixWorldInverse?", "projectionMatrix?", "projectionMatrixInverse?", "near?", "far?"],
 "super": "Object3D",
 is$Camera: true
};

$$.OrthographicCamera = {"": ["left", "right", "top", "bottom", "matrixWorldInverse", "projectionMatrix", "projectionMatrixInverse", "near", "far", "id", "name", "properties", "parent", "children", "up", "position", "rotation", "scale", "eulerOrder", "_dynamic", "doubleSided", "flipSided", "rotationAutoUpdate", "renderDepth", "matrix", "matrixWorld", "matrixRotationWorld", "matrixAutoUpdate", "matrixWorldNeedsUpdate", "quaternion", "useQuaternion", "boundRadius", "boundRadiusScale", "visible", "castShadow", "receiveShadow", "frustumCulled", "_vector", "__data"],
 "super": "Camera",
 updateProjectionMatrix$0: function() {
  this.projectionMatrix.makeOrthographic$6(this.left, this.right, this.top, this.bottom, this.near, this.far);
},
 OrthographicCamera$6: function(left, right, top$, bottom, near, far) {
  this.updateProjectionMatrix$0();
}
};

$$.Vector3 = {"": ["x=", "y=", "z="],
 "super": "Object",
 setValues$3: function(x, y, z) {
  this.x = x;
  this.y = y;
  this.z = z;
  return this;
},
 setX$1: function(x) {
  this.x = x;
  return this;
},
 setY$1: function(y) {
  this.y = y;
  return this;
},
 setZ$1: function(z) {
  this.z = z;
  return this;
},
 copy$1: function(v) {
  this.x = v.get$x();
  this.y = v.get$y();
  this.z = v.get$z();
  return this;
},
 add$2: function(v1, v2) {
  this.x = $.add(v1.get$x(), v2.get$x());
  this.y = $.add(v1.get$y(), v2.get$y());
  this.z = $.add(v1.get$z(), v2.get$z());
  return this;
},
 addSelf$1: function(v) {
  this.x = $.add(this.x, v.get$x());
  this.y = $.add(this.y, v.get$y());
  this.z = $.add(this.z, v.get$z());
  return this;
},
 sub$2: function(v1, v2) {
  this.x = $.sub(v1.get$x(), v2.get$x());
  this.y = $.sub(v1.get$y(), v2.get$y());
  this.z = $.sub(v1.get$z(), v2.get$z());
  return this;
},
 subSelf$1: function(v) {
  var t1, t3, t5, t7, t9, t11;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.subSelf$1$bailout(1, v, t1);
  t3 = v.get$x();
  if (typeof t3 !== 'number')
    return this.subSelf$1$bailout(2, v, t1, t3);
  this.x = t1 - t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.subSelf$1$bailout(3, v, t5);
  t7 = v.get$y();
  if (typeof t7 !== 'number')
    return this.subSelf$1$bailout(4, v, t7, t5);
  this.y = t5 - t7;
  t9 = this.z;
  if (typeof t9 !== 'number')
    return this.subSelf$1$bailout(5, t9, v);
  t11 = v.get$z();
  if (typeof t11 !== 'number')
    return this.subSelf$1$bailout(6, t9, t11);
  this.z = t9 - t11;
  return this;
},
 subSelf$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      v = env0;
      break;
    case 3:
      t5 = env1;
      v = env0;
      break;
    case 4:
      t5 = env2;
      t7 = env1;
      v = env0;
      break;
    case 5:
      v = env1;
      t9 = env0;
      break;
    case 6:
      t11 = env1;
      t9 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.get$x();
    case 2:
      state0 = 0;
      this.x = $.sub(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = v.get$y();
    case 4:
      state0 = 0;
      this.y = $.sub(t5, t7);
      t9 = this.z;
    case 5:
      state0 = 0;
      t11 = v.get$z();
    case 6:
      var t1, v, t3, t5, t7, t9, t11;
      state0 = 0;
      this.z = $.sub(t9, t11);
      return this;
  }
},
 multiply$2: function(a, b) {
  this.x = $.mul(a.get$x(), b.get$x());
  this.y = $.mul(a.get$y(), b.get$y());
  this.z = $.mul(a.get$z(), b.get$z());
  return this;
},
 multiplyScalar$1: function(s) {
  var t1, t3, t5;
  if (typeof s !== 'number')
    return this.multiplyScalar$1$bailout(1, s);
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.multiplyScalar$1$bailout(2, s, t1);
  this.x = t1 * s;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.multiplyScalar$1$bailout(3, s, t3);
  this.y = t3 * s;
  t5 = this.z;
  if (typeof t5 !== 'number')
    return this.multiplyScalar$1$bailout(4, s, t5);
  this.z = t5 * s;
  return this;
},
 multiplyScalar$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      s = env0;
      break;
    case 2:
      t1 = env1;
      s = env0;
      break;
    case 3:
      t3 = env1;
      s = env0;
      break;
    case 4:
      t5 = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.x;
    case 2:
      state0 = 0;
      this.x = $.mul(t1, s);
      t3 = this.y;
    case 3:
      state0 = 0;
      this.y = $.mul(t3, s);
      t5 = this.z;
    case 4:
      var s, t1, t3, t5;
      state0 = 0;
      this.z = $.mul(t5, s);
      return this;
  }
},
 divideScalar$1: function(s) {
  if (!(s === 0)) {
    this.x = $.div(this.x, s);
    this.y = $.div(this.y, s);
    this.z = $.div(this.z, s);
  } else {
    this.x = 0;
    this.y = 0;
    this.z = 0;
  }
  return this;
},
 negate$0: function() {
  this.x = $.mul(this.x, -1);
  this.y = $.mul(this.y, -1);
  this.z = $.mul(this.z, -1);
  return this;
},
 dot$1: function(v) {
  var t1, t3, t6, t8, t10;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.dot$1$bailout(1, v, t1);
  t3 = v.get$x();
  if (typeof t3 !== 'number')
    return this.dot$1$bailout(2, v, t3, t1);
  t3 = t1 * t3;
  t1 = this.y;
  if (typeof t1 !== 'number')
    return this.dot$1$bailout(3, v, t3, t1);
  t6 = v.get$y();
  if (typeof t6 !== 'number')
    return this.dot$1$bailout(4, v, t6, t3, t1);
  t3 += t1 * t6;
  t8 = this.z;
  if (typeof t8 !== 'number')
    return this.dot$1$bailout(5, v, t3, t8);
  t10 = v.get$z();
  if (typeof t10 !== 'number')
    return this.dot$1$bailout(6, t3, t10, t8);
  return t3 + t8 * t10;
},
 dot$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      v = env0;
      break;
    case 3:
      t1 = env2;
      t3 = env1;
      v = env0;
      break;
    case 4:
      t1 = env3;
      t3 = env2;
      t6 = env1;
      v = env0;
      break;
    case 5:
      t8 = env2;
      t3 = env1;
      v = env0;
      break;
    case 6:
      t8 = env2;
      t10 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.get$x();
    case 2:
      state0 = 0;
      t3 = $.mul(t1, t3);
      t1 = this.y;
    case 3:
      state0 = 0;
      t6 = v.get$y();
    case 4:
      state0 = 0;
      t3 = $.add(t3, $.mul(t1, t6));
      t8 = this.z;
    case 5:
      state0 = 0;
      t10 = v.get$z();
    case 6:
      var t1, v, t3, t6, t8, t10;
      state0 = 0;
      return $.add(t3, $.mul(t8, t10));
  }
},
 lengthSq$0: function() {
  var t1, t2, t3;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  return $.add(t1, $.mul(t3, t3));
},
 length$0: function() {
  var t1, t2, t3;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  return $.sqrt($.add(t1, $.mul(t3, t3)));
},
 get$length: function() { return new $.BoundClosure(this, 'length$0'); },
 normalize$0: function() {
  var t1, t3, t5;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.normalize$0$bailout(1, t1);
  t1 *= t1;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.normalize$0$bailout(2, t3, t1);
  t1 += t3 * t3;
  t5 = this.z;
  if (typeof t5 !== 'number')
    return this.normalize$0$bailout(3, t5, t1);
  return this.divideScalar$1($.sqrt(t1 + t5 * t5));
},
 normalize$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
    case 3:
      t1 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t1 = $.mul(t1, t1);
      t3 = this.y;
    case 2:
      state0 = 0;
      t1 = $.add(t1, $.mul(t3, t3));
      t5 = this.z;
    case 3:
      var t1, t3, t5;
      state0 = 0;
      return this.divideScalar$1($.sqrt($.add(t1, $.mul(t5, t5))));
  }
},
 lerpSelf$2: function(v, alpha) {
  this.x = $.add(this.x, $.mul($.sub(v.get$x(), this.x), alpha));
  this.y = $.add(this.y, $.mul($.sub(v.get$y(), this.y), alpha));
  this.z = $.add(this.z, $.mul($.sub(v.get$z(), this.z), alpha));
  return this;
},
 crossSelf$1: function(v) {
  var x2, y2, z2;
  x2 = this.x;
  y2 = this.y;
  z2 = this.z;
  this.x = $.sub($.mul(y2, v.get$z()), $.mul(z2, v.get$y()));
  this.y = $.sub($.mul(z2, v.get$x()), $.mul(x2, v.get$z()));
  this.z = $.sub($.mul(x2, v.get$y()), $.mul(y2, v.get$x()));
  return this;
},
 distanceTo$1: function(v) {
  return $.sqrt($.Vector3$(0, 0, 0).sub$2(this, v).lengthSq$0());
},
 isZero$0: function() {
  var t1, t2, t3;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  return $.lt($.add(t1, $.mul(t3, t3)), 0.0001);
},
 clone$0: function() {
  return $.Vector3$(this.x, this.y, this.z);
},
 toString$0: function() {
  return '(' + $.S(this.x) + ', ' + $.S(this.y) + ', ' + $.S(this.z) + ')';
},
 is$Vector3: true
};

$$.Matrix4 = {"": ["elements="],
 "super": "Object",
 setValues$16: function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
  var te = this.elements;
  $.indexSet(te, 0, n11);
  $.indexSet(te, 4, n12);
  $.indexSet(te, 8, n13);
  $.indexSet(te, 12, n14);
  $.indexSet(te, 1, n21);
  $.indexSet(te, 5, n22);
  $.indexSet(te, 9, n23);
  $.indexSet(te, 13, n24);
  $.indexSet(te, 2, n31);
  $.indexSet(te, 6, n32);
  $.indexSet(te, 10, n33);
  $.indexSet(te, 14, n34);
  $.indexSet(te, 3, n41);
  $.indexSet(te, 7, n42);
  $.indexSet(te, 11, n43);
  $.indexSet(te, 15, n44);
  return this;
},
 copy$1: function(m) {
  var me = m.get$elements();
  this.setValues$16($.index(me, 0), $.index(me, 4), $.index(me, 8), $.index(me, 12), $.index(me, 1), $.index(me, 5), $.index(me, 9), $.index(me, 13), $.index(me, 2), $.index(me, 6), $.index(me, 10), $.index(me, 14), $.index(me, 3), $.index(me, 7), $.index(me, 11), $.index(me, 15));
  return this;
},
 multiply$2: function(a, b) {
  var ae, be, te, a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44, b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44;
  ae = a.get$elements();
  be = b.get$elements();
  te = this.elements;
  a11 = $.index(ae, 0);
  a12 = $.index(ae, 4);
  a13 = $.index(ae, 8);
  a14 = $.index(ae, 12);
  a21 = $.index(ae, 1);
  a22 = $.index(ae, 5);
  a23 = $.index(ae, 9);
  a24 = $.index(ae, 13);
  a31 = $.index(ae, 2);
  a32 = $.index(ae, 6);
  a33 = $.index(ae, 10);
  a34 = $.index(ae, 14);
  a41 = $.index(ae, 3);
  a42 = $.index(ae, 7);
  a43 = $.index(ae, 11);
  a44 = $.index(ae, 15);
  b11 = $.index(be, 0);
  b12 = $.index(be, 4);
  b13 = $.index(be, 8);
  b14 = $.index(be, 12);
  b21 = $.index(be, 1);
  b22 = $.index(be, 5);
  b23 = $.index(be, 9);
  b24 = $.index(be, 13);
  b31 = $.index(be, 2);
  b32 = $.index(be, 6);
  b33 = $.index(be, 10);
  b34 = $.index(be, 14);
  b41 = $.index(be, 3);
  b42 = $.index(be, 7);
  b43 = $.index(be, 11);
  b44 = $.index(be, 15);
  $.indexSet(te, 0, $.add($.add($.add($.mul(a11, b11), $.mul(a12, b21)), $.mul(a13, b31)), $.mul(a14, b41)));
  $.indexSet(te, 4, $.add($.add($.add($.mul(a11, b12), $.mul(a12, b22)), $.mul(a13, b32)), $.mul(a14, b42)));
  $.indexSet(te, 8, $.add($.add($.add($.mul(a11, b13), $.mul(a12, b23)), $.mul(a13, b33)), $.mul(a14, b43)));
  $.indexSet(te, 12, $.add($.add($.add($.mul(a11, b14), $.mul(a12, b24)), $.mul(a13, b34)), $.mul(a14, b44)));
  $.indexSet(te, 1, $.add($.add($.add($.mul(a21, b11), $.mul(a22, b21)), $.mul(a23, b31)), $.mul(a24, b41)));
  $.indexSet(te, 5, $.add($.add($.add($.mul(a21, b12), $.mul(a22, b22)), $.mul(a23, b32)), $.mul(a24, b42)));
  $.indexSet(te, 9, $.add($.add($.add($.mul(a21, b13), $.mul(a22, b23)), $.mul(a23, b33)), $.mul(a24, b43)));
  $.indexSet(te, 13, $.add($.add($.add($.mul(a21, b14), $.mul(a22, b24)), $.mul(a23, b34)), $.mul(a24, b44)));
  $.indexSet(te, 2, $.add($.add($.add($.mul(a31, b11), $.mul(a32, b21)), $.mul(a33, b31)), $.mul(a34, b41)));
  $.indexSet(te, 6, $.add($.add($.add($.mul(a31, b12), $.mul(a32, b22)), $.mul(a33, b32)), $.mul(a34, b42)));
  $.indexSet(te, 10, $.add($.add($.add($.mul(a31, b13), $.mul(a32, b23)), $.mul(a33, b33)), $.mul(a34, b43)));
  $.indexSet(te, 14, $.add($.add($.add($.mul(a31, b14), $.mul(a32, b24)), $.mul(a33, b34)), $.mul(a34, b44)));
  $.indexSet(te, 3, $.add($.add($.add($.mul(a41, b11), $.mul(a42, b21)), $.mul(a43, b31)), $.mul(a44, b41)));
  $.indexSet(te, 7, $.add($.add($.add($.mul(a41, b12), $.mul(a42, b22)), $.mul(a43, b32)), $.mul(a44, b42)));
  $.indexSet(te, 11, $.add($.add($.add($.mul(a41, b13), $.mul(a42, b23)), $.mul(a43, b33)), $.mul(a44, b43)));
  $.indexSet(te, 15, $.add($.add($.add($.mul(a41, b14), $.mul(a42, b24)), $.mul(a43, b34)), $.mul(a44, b44)));
  return this;
},
 multiplyScalar$1: function(s) {
  var te, t2, t3, t5, t7, t9, t11, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33;
  if (typeof s !== 'number')
    return this.multiplyScalar$1$bailout(1, s);
  te = this.elements;
  if (typeof te !== 'object' || te === null || (te.constructor !== Array || !!te.immutable$list) && !te.is$JavaScriptIndexingBehavior())
    return this.multiplyScalar$1$bailout(2, s, te);
  t2 = te.length;
  if (0 >= t2)
    throw $.ioore(0);
  t3 = te[0];
  if (typeof t3 !== 'number')
    return this.multiplyScalar$1$bailout(3, s, te, t3);
  te[0] = t3 * s;
  if (4 >= t2)
    throw $.ioore(4);
  t5 = te[4];
  if (typeof t5 !== 'number')
    return this.multiplyScalar$1$bailout(4, s, te, t5);
  te[4] = t5 * s;
  if (8 >= t2)
    throw $.ioore(8);
  t7 = te[8];
  if (typeof t7 !== 'number')
    return this.multiplyScalar$1$bailout(5, s, t7, te);
  te[8] = t7 * s;
  if (12 >= t2)
    throw $.ioore(12);
  t9 = te[12];
  if (typeof t9 !== 'number')
    return this.multiplyScalar$1$bailout(6, s, t9, te);
  te[12] = t9 * s;
  t11 = te[1];
  if (typeof t11 !== 'number')
    return this.multiplyScalar$1$bailout(7, s, t11, te);
  te[1] = t11 * s;
  t13 = te[5];
  if (typeof t13 !== 'number')
    return this.multiplyScalar$1$bailout(8, s, t13, te);
  te[5] = t13 * s;
  t15 = te[9];
  if (typeof t15 !== 'number')
    return this.multiplyScalar$1$bailout(9, s, t15, te);
  te[9] = t15 * s;
  if (13 >= t2)
    throw $.ioore(13);
  t17 = te[13];
  if (typeof t17 !== 'number')
    return this.multiplyScalar$1$bailout(10, s, t17, te);
  te[13] = t17 * s;
  t19 = te[2];
  if (typeof t19 !== 'number')
    return this.multiplyScalar$1$bailout(11, s, te, t19);
  te[2] = t19 * s;
  t21 = te[6];
  if (typeof t21 !== 'number')
    return this.multiplyScalar$1$bailout(12, s, te, t21);
  te[6] = t21 * s;
  t23 = te[10];
  if (typeof t23 !== 'number')
    return this.multiplyScalar$1$bailout(13, s, t23, te);
  te[10] = t23 * s;
  if (14 >= t2)
    throw $.ioore(14);
  t25 = te[14];
  if (typeof t25 !== 'number')
    return this.multiplyScalar$1$bailout(14, s, t25, te);
  te[14] = t25 * s;
  t27 = te[3];
  if (typeof t27 !== 'number')
    return this.multiplyScalar$1$bailout(15, s, t27, te);
  te[3] = t27 * s;
  t29 = te[7];
  if (typeof t29 !== 'number')
    return this.multiplyScalar$1$bailout(16, s, t29, te);
  te[7] = t29 * s;
  t31 = te[11];
  if (typeof t31 !== 'number')
    return this.multiplyScalar$1$bailout(17, s, t31, te);
  te[11] = t31 * s;
  if (15 >= t2)
    throw $.ioore(15);
  t33 = te[15];
  if (typeof t33 !== 'number')
    return this.multiplyScalar$1$bailout(18, t33, s, te);
  te[15] = t33 * s;
  return this;
},
 multiplyScalar$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      s = env0;
      break;
    case 2:
      te = env1;
      s = env0;
      break;
    case 3:
      t2 = env2;
      te = env1;
      s = env0;
      break;
    case 4:
      t4 = env2;
      te = env1;
      s = env0;
      break;
    case 5:
      te = env2;
      t6 = env1;
      s = env0;
      break;
    case 6:
      te = env2;
      t8 = env1;
      s = env0;
      break;
    case 7:
      te = env2;
      t10 = env1;
      s = env0;
      break;
    case 8:
      te = env2;
      t12 = env1;
      s = env0;
      break;
    case 9:
      te = env2;
      t14 = env1;
      s = env0;
      break;
    case 10:
      te = env2;
      t16 = env1;
      s = env0;
      break;
    case 11:
      t18 = env2;
      te = env1;
      s = env0;
      break;
    case 12:
      t20 = env2;
      te = env1;
      s = env0;
      break;
    case 13:
      te = env2;
      t22 = env1;
      s = env0;
      break;
    case 14:
      te = env2;
      t24 = env1;
      s = env0;
      break;
    case 15:
      te = env2;
      t26 = env1;
      s = env0;
      break;
    case 16:
      te = env2;
      t28 = env1;
      s = env0;
      break;
    case 17:
      te = env2;
      t30 = env1;
      s = env0;
      break;
    case 18:
      te = env2;
      s = env1;
      t32 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      te = this.elements;
    case 2:
      state0 = 0;
      t2 = $.index(te, 0);
    case 3:
      state0 = 0;
      $.indexSet(te, 0, $.mul(t2, s));
      t4 = $.index(te, 4);
    case 4:
      state0 = 0;
      $.indexSet(te, 4, $.mul(t4, s));
      t6 = $.index(te, 8);
    case 5:
      state0 = 0;
      $.indexSet(te, 8, $.mul(t6, s));
      t8 = $.index(te, 12);
    case 6:
      state0 = 0;
      $.indexSet(te, 12, $.mul(t8, s));
      t10 = $.index(te, 1);
    case 7:
      state0 = 0;
      $.indexSet(te, 1, $.mul(t10, s));
      t12 = $.index(te, 5);
    case 8:
      state0 = 0;
      $.indexSet(te, 5, $.mul(t12, s));
      t14 = $.index(te, 9);
    case 9:
      state0 = 0;
      $.indexSet(te, 9, $.mul(t14, s));
      t16 = $.index(te, 13);
    case 10:
      state0 = 0;
      $.indexSet(te, 13, $.mul(t16, s));
      t18 = $.index(te, 2);
    case 11:
      state0 = 0;
      $.indexSet(te, 2, $.mul(t18, s));
      t20 = $.index(te, 6);
    case 12:
      state0 = 0;
      $.indexSet(te, 6, $.mul(t20, s));
      t22 = $.index(te, 10);
    case 13:
      state0 = 0;
      $.indexSet(te, 10, $.mul(t22, s));
      t24 = $.index(te, 14);
    case 14:
      state0 = 0;
      $.indexSet(te, 14, $.mul(t24, s));
      t26 = $.index(te, 3);
    case 15:
      state0 = 0;
      $.indexSet(te, 3, $.mul(t26, s));
      t28 = $.index(te, 7);
    case 16:
      state0 = 0;
      $.indexSet(te, 7, $.mul(t28, s));
      t30 = $.index(te, 11);
    case 17:
      state0 = 0;
      $.indexSet(te, 11, $.mul(t30, s));
      t32 = $.index(te, 15);
    case 18:
      var s, te, t2, t4, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32;
      state0 = 0;
      $.indexSet(te, 15, $.mul(t32, s));
      return this;
  }
},
 multiplyVector3$1: function(v) {
  var te, vx, vy, vz, t5, t6, t8, t10, t12, d, t14, t16, t18, t20, t22, t23, t25, t27, t29, t31, t32, t34, t36, t38;
  te = this.elements;
  if (typeof te !== 'string' && (typeof te !== 'object' || te === null || te.constructor !== Array && !te.is$JavaScriptIndexingBehavior()))
    return this.multiplyVector3$1$bailout(1, v, te);
  vx = v.get$x();
  if (typeof vx !== 'number')
    return this.multiplyVector3$1$bailout(2, v, te, vx);
  vy = v.get$y();
  if (typeof vy !== 'number')
    return this.multiplyVector3$1$bailout(3, v, te, vy, vx);
  vz = v.get$z();
  if (typeof vz !== 'number')
    return this.multiplyVector3$1$bailout(4, v, te, vy, vz, vx);
  t5 = te.length;
  if (3 >= t5)
    throw $.ioore(3);
  t6 = te[3];
  if (typeof t6 !== 'number')
    return this.multiplyVector3$1$bailout(5, v, te, vy, vz, vx, t6);
  t6 *= vx;
  if (7 >= t5)
    throw $.ioore(7);
  t8 = te[7];
  if (typeof t8 !== 'number')
    return this.multiplyVector3$1$bailout(6, v, te, vy, vz, vx, t6, t8);
  t6 += t8 * vy;
  if (11 >= t5)
    throw $.ioore(11);
  t10 = te[11];
  if (typeof t10 !== 'number')
    return this.multiplyVector3$1$bailout(7, v, t6, te, vy, vz, vx, t10);
  t6 += t10 * vz;
  if (15 >= t5)
    throw $.ioore(15);
  t12 = te[15];
  if (typeof t12 !== 'number')
    return this.multiplyVector3$1$bailout(8, v, te, vy, vz, vx, t6, t12);
  d = 1 / (t6 + t12);
  t14 = te[0];
  if (typeof t14 !== 'number')
    return this.multiplyVector3$1$bailout(9, v, d, te, vy, vz, vx, t14);
  t14 *= vx;
  t16 = te[4];
  if (typeof t16 !== 'number')
    return this.multiplyVector3$1$bailout(10, v, d, te, vy, vz, vx, t14, t16);
  t14 += t16 * vy;
  t18 = te[8];
  if (typeof t18 !== 'number')
    return this.multiplyVector3$1$bailout(11, v, d, t18, te, vy, vz, vx, t14);
  t14 += t18 * vz;
  t20 = te[12];
  if (typeof t20 !== 'number')
    return this.multiplyVector3$1$bailout(12, v, d, te, vy, vz, vx, t20, t14);
  v.set$x((t14 + t20) * d);
  t22 = te.length;
  if (1 >= t22)
    throw $.ioore(1);
  t23 = te[1];
  if (typeof t23 !== 'number')
    return this.multiplyVector3$1$bailout(13, v, d, te, vy, vz, vx, t23);
  t23 *= vx;
  if (5 >= t22)
    throw $.ioore(5);
  t25 = te[5];
  if (typeof t25 !== 'number')
    return this.multiplyVector3$1$bailout(14, v, d, t23, te, vy, vz, vx, t25);
  t23 += t25 * vy;
  if (9 >= t22)
    throw $.ioore(9);
  t27 = te[9];
  if (typeof t27 !== 'number')
    return this.multiplyVector3$1$bailout(15, v, d, te, vy, vz, vx, t23, t27);
  t23 += t27 * vz;
  if (13 >= t22)
    throw $.ioore(13);
  t29 = te[13];
  if (typeof t29 !== 'number')
    return this.multiplyVector3$1$bailout(16, v, d, t29, te, vy, vz, vx, t23);
  v.set$y((t23 + t29) * d);
  t31 = te.length;
  if (2 >= t31)
    throw $.ioore(2);
  t32 = te[2];
  if (typeof t32 !== 'number')
    return this.multiplyVector3$1$bailout(17, v, d, te, vy, vz, vx, t32);
  t32 *= vx;
  if (6 >= t31)
    throw $.ioore(6);
  t34 = te[6];
  if (typeof t34 !== 'number')
    return this.multiplyVector3$1$bailout(18, v, d, te, vy, vz, t32, t34);
  t32 += t34 * vy;
  if (10 >= t31)
    throw $.ioore(10);
  t36 = te[10];
  if (typeof t36 !== 'number')
    return this.multiplyVector3$1$bailout(19, v, d, t32, te, t36, vz);
  t32 += t36 * vz;
  if (14 >= t31)
    throw $.ioore(14);
  t38 = te[14];
  if (typeof t38 !== 'number')
    return this.multiplyVector3$1$bailout(20, v, d, t32, t38);
  v.set$z((t32 + t38) * d);
  return v;
},
 multiplyVector3$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      te = env1;
      v = env0;
      break;
    case 2:
      vx = env2;
      te = env1;
      v = env0;
      break;
    case 3:
      vx = env3;
      vy = env2;
      te = env1;
      v = env0;
      break;
    case 4:
      vx = env4;
      vz = env3;
      vy = env2;
      te = env1;
      v = env0;
      break;
    case 5:
      t5 = env5;
      vx = env4;
      vz = env3;
      vy = env2;
      te = env1;
      v = env0;
      break;
    case 6:
      t7 = env6;
      t5 = env5;
      vx = env4;
      vz = env3;
      vy = env2;
      te = env1;
      v = env0;
      break;
    case 7:
      t9 = env6;
      vx = env5;
      vz = env4;
      vy = env3;
      te = env2;
      t5 = env1;
      v = env0;
      break;
    case 8:
      t11 = env6;
      t5 = env5;
      vx = env4;
      vz = env3;
      vy = env2;
      te = env1;
      v = env0;
      break;
    case 9:
      t11 = env6;
      vx = env5;
      vz = env4;
      vy = env3;
      te = env2;
      d = env1;
      v = env0;
      break;
    case 10:
      t13 = env7;
      t11 = env6;
      vx = env5;
      vz = env4;
      vy = env3;
      te = env2;
      d = env1;
      v = env0;
      break;
    case 11:
      t11 = env7;
      vx = env6;
      vz = env5;
      vy = env4;
      te = env3;
      t15 = env2;
      d = env1;
      v = env0;
      break;
    case 12:
      t11 = env7;
      t17 = env6;
      vx = env5;
      vz = env4;
      vy = env3;
      te = env2;
      d = env1;
      v = env0;
      break;
    case 13:
      t19 = env6;
      vx = env5;
      vz = env4;
      vy = env3;
      te = env2;
      d = env1;
      v = env0;
      break;
    case 14:
      t21 = env7;
      vx = env6;
      vz = env5;
      vy = env4;
      te = env3;
      t19 = env2;
      d = env1;
      v = env0;
      break;
    case 15:
      t23 = env7;
      t19 = env6;
      vx = env5;
      vz = env4;
      vy = env3;
      te = env2;
      d = env1;
      v = env0;
      break;
    case 16:
      t19 = env7;
      vx = env6;
      vz = env5;
      vy = env4;
      te = env3;
      t25 = env2;
      d = env1;
      v = env0;
      break;
    case 17:
      t27 = env6;
      vx = env5;
      vz = env4;
      vy = env3;
      te = env2;
      d = env1;
      v = env0;
      break;
    case 18:
      t29 = env6;
      t27 = env5;
      vz = env4;
      vy = env3;
      te = env2;
      d = env1;
      v = env0;
      break;
    case 19:
      vz = env5;
      t31 = env4;
      te = env3;
      t27 = env2;
      d = env1;
      v = env0;
      break;
    case 20:
      t33 = env3;
      t27 = env2;
      d = env1;
      v = env0;
      break;
  }
  switch (state0) {
    case 0:
      te = this.elements;
    case 1:
      state0 = 0;
      vx = v.get$x();
    case 2:
      state0 = 0;
      vy = v.get$y();
    case 3:
      state0 = 0;
      vz = v.get$z();
    case 4:
      state0 = 0;
      t5 = $.index(te, 3);
    case 5:
      state0 = 0;
      t5 = $.mul(t5, vx);
      t7 = $.index(te, 7);
    case 6:
      state0 = 0;
      t5 = $.add(t5, $.mul(t7, vy));
      t9 = $.index(te, 11);
    case 7:
      state0 = 0;
      t5 = $.add(t5, $.mul(t9, vz));
      t11 = $.index(te, 15);
    case 8:
      state0 = 0;
      t11 = $.add(t5, t11);
      if (typeof t11 !== 'number')
        throw $.iae(t11);
      d = 1 / t11;
      t11 = $.index(te, 0);
    case 9:
      state0 = 0;
      t11 = $.mul(t11, vx);
      t13 = $.index(te, 4);
    case 10:
      state0 = 0;
      t11 = $.add(t11, $.mul(t13, vy));
      t15 = $.index(te, 8);
    case 11:
      state0 = 0;
      t11 = $.add(t11, $.mul(t15, vz));
      t17 = $.index(te, 12);
    case 12:
      state0 = 0;
      v.set$x($.mul($.add(t11, t17), d));
      t19 = $.index(te, 1);
    case 13:
      state0 = 0;
      t19 = $.mul(t19, vx);
      t21 = $.index(te, 5);
    case 14:
      state0 = 0;
      t19 = $.add(t19, $.mul(t21, vy));
      t23 = $.index(te, 9);
    case 15:
      state0 = 0;
      t19 = $.add(t19, $.mul(t23, vz));
      t25 = $.index(te, 13);
    case 16:
      state0 = 0;
      v.set$y($.mul($.add(t19, t25), d));
      t27 = $.index(te, 2);
    case 17:
      state0 = 0;
      t27 = $.mul(t27, vx);
      t29 = $.index(te, 6);
    case 18:
      state0 = 0;
      t27 = $.add(t27, $.mul(t29, vy));
      t31 = $.index(te, 10);
    case 19:
      state0 = 0;
      t27 = $.add(t27, $.mul(t31, vz));
      t33 = $.index(te, 14);
    case 20:
      var te, v, vx, vy, vz, t5, t7, t9, t11, d, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33;
      state0 = 0;
      v.set$z($.mul($.add(t27, t33), d));
      return v;
  }
},
 multiplyVector4$1: function(v) {
  var te, vx, vy, vz, vw, t6, t7, t9, t11, t13, t15, t16, t18, t20, t22, t24, t25, t27, t29, t31, t33, t34, t36, t38, t40;
  te = this.elements;
  if (typeof te !== 'string' && (typeof te !== 'object' || te === null || te.constructor !== Array && !te.is$JavaScriptIndexingBehavior()))
    return this.multiplyVector4$1$bailout(1, v, te);
  vx = v.get$x();
  if (typeof vx !== 'number')
    return this.multiplyVector4$1$bailout(2, v, vx, te);
  vy = v.get$y();
  if (typeof vy !== 'number')
    return this.multiplyVector4$1$bailout(3, v, vx, vy, te);
  vz = v.get$z();
  if (typeof vz !== 'number')
    return this.multiplyVector4$1$bailout(4, v, vx, vy, te, vz);
  vw = v.get$w();
  if (typeof vw !== 'number')
    return this.multiplyVector4$1$bailout(5, v, vx, vy, te, vw, vz);
  t6 = te.length;
  if (0 >= t6)
    throw $.ioore(0);
  t7 = te[0];
  if (typeof t7 !== 'number')
    return this.multiplyVector4$1$bailout(6, v, vx, vy, te, vw, vz, t7);
  t7 *= vx;
  if (4 >= t6)
    throw $.ioore(4);
  t9 = te[4];
  if (typeof t9 !== 'number')
    return this.multiplyVector4$1$bailout(7, v, vx, vy, te, vw, vz, t7, t9);
  t7 += t9 * vy;
  if (8 >= t6)
    throw $.ioore(8);
  t11 = te[8];
  if (typeof t11 !== 'number')
    return this.multiplyVector4$1$bailout(8, v, t7, vx, vy, te, vw, vz, t11);
  t7 += t11 * vz;
  if (12 >= t6)
    throw $.ioore(12);
  t13 = te[12];
  if (typeof t13 !== 'number')
    return this.multiplyVector4$1$bailout(9, v, vx, vy, te, vw, vz, t7, t13);
  v.set$x(t7 + t13 * vw);
  t15 = te.length;
  if (1 >= t15)
    throw $.ioore(1);
  t16 = te[1];
  if (typeof t16 !== 'number')
    return this.multiplyVector4$1$bailout(10, v, vx, vy, te, vw, t16, vz);
  t16 *= vx;
  if (5 >= t15)
    throw $.ioore(5);
  t18 = te[5];
  if (typeof t18 !== 'number')
    return this.multiplyVector4$1$bailout(11, v, vx, vy, te, vw, t16, vz, t18);
  t16 += t18 * vy;
  if (9 >= t15)
    throw $.ioore(9);
  t20 = te[9];
  if (typeof t20 !== 'number')
    return this.multiplyVector4$1$bailout(12, v, t20, vx, vy, te, vw, vz, t16);
  t16 += t20 * vz;
  if (13 >= t15)
    throw $.ioore(13);
  t22 = te[13];
  if (typeof t22 !== 'number')
    return this.multiplyVector4$1$bailout(13, v, vx, vy, te, vw, t16, vz, t22);
  v.set$y(t16 + t22 * vw);
  t24 = te.length;
  if (2 >= t24)
    throw $.ioore(2);
  t25 = te[2];
  if (typeof t25 !== 'number')
    return this.multiplyVector4$1$bailout(14, v, t25, vx, vy, te, vw, vz);
  t25 *= vx;
  if (6 >= t24)
    throw $.ioore(6);
  t27 = te[6];
  if (typeof t27 !== 'number')
    return this.multiplyVector4$1$bailout(15, v, t25, vx, vy, te, vw, t27, vz);
  t25 += t27 * vy;
  if (10 >= t24)
    throw $.ioore(10);
  t29 = te[10];
  if (typeof t29 !== 'number')
    return this.multiplyVector4$1$bailout(16, v, vx, vy, te, vw, vz, t25, t29);
  t25 += t29 * vz;
  if (14 >= t24)
    throw $.ioore(14);
  t31 = te[14];
  if (typeof t31 !== 'number')
    return this.multiplyVector4$1$bailout(17, v, t25, t31, vx, vy, te, vw, vz);
  v.set$z(t25 + t31 * vw);
  t33 = te.length;
  if (3 >= t33)
    throw $.ioore(3);
  t34 = te[3];
  if (typeof t34 !== 'number')
    return this.multiplyVector4$1$bailout(18, v, vx, vy, te, vw, vz, t34);
  t34 *= vx;
  if (7 >= t33)
    throw $.ioore(7);
  t36 = te[7];
  if (typeof t36 !== 'number')
    return this.multiplyVector4$1$bailout(19, v, t36, vy, te, vw, vz, t34);
  t34 += t36 * vy;
  if (11 >= t33)
    throw $.ioore(11);
  t38 = te[11];
  if (typeof t38 !== 'number')
    return this.multiplyVector4$1$bailout(20, v, t34, te, vw, t38, vz);
  t34 += t38 * vz;
  if (15 >= t33)
    throw $.ioore(15);
  t40 = te[15];
  if (typeof t40 !== 'number')
    return this.multiplyVector4$1$bailout(21, v, t34, t40, vw);
  v.set$w(t34 + t40 * vw);
  return v;
},
 multiplyVector4$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      te = env1;
      v = env0;
      break;
    case 2:
      te = env2;
      vx = env1;
      v = env0;
      break;
    case 3:
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 4:
      vz = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 5:
      vz = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 6:
      t6 = env6;
      vz = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 7:
      t8 = env7;
      t6 = env6;
      vz = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 8:
      t10 = env7;
      vz = env6;
      vw = env5;
      te = env4;
      vy = env3;
      vx = env2;
      t6 = env1;
      v = env0;
      break;
    case 9:
      t12 = env7;
      t6 = env6;
      vz = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 10:
      vz = env6;
      t14 = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 11:
      t16 = env7;
      vz = env6;
      t14 = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 12:
      t14 = env7;
      vz = env6;
      vw = env5;
      te = env4;
      vy = env3;
      vx = env2;
      t18 = env1;
      v = env0;
      break;
    case 13:
      t20 = env7;
      vz = env6;
      t14 = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 14:
      vz = env6;
      vw = env5;
      te = env4;
      vy = env3;
      vx = env2;
      t22 = env1;
      v = env0;
      break;
    case 15:
      vz = env7;
      t24 = env6;
      vw = env5;
      te = env4;
      vy = env3;
      vx = env2;
      t22 = env1;
      v = env0;
      break;
    case 16:
      t26 = env7;
      t22 = env6;
      vz = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 17:
      vz = env7;
      vw = env6;
      te = env5;
      vy = env4;
      vx = env3;
      t28 = env2;
      t22 = env1;
      v = env0;
      break;
    case 18:
      t30 = env6;
      vz = env5;
      vw = env4;
      te = env3;
      vy = env2;
      vx = env1;
      v = env0;
      break;
    case 19:
      t30 = env6;
      vz = env5;
      vw = env4;
      te = env3;
      vy = env2;
      t32 = env1;
      v = env0;
      break;
    case 20:
      vz = env5;
      t34 = env4;
      vw = env3;
      te = env2;
      t30 = env1;
      v = env0;
      break;
    case 21:
      vw = env3;
      t36 = env2;
      t30 = env1;
      v = env0;
      break;
  }
  switch (state0) {
    case 0:
      te = this.elements;
    case 1:
      state0 = 0;
      vx = v.get$x();
    case 2:
      state0 = 0;
      vy = v.get$y();
    case 3:
      state0 = 0;
      vz = v.get$z();
    case 4:
      state0 = 0;
      vw = v.get$w();
    case 5:
      state0 = 0;
      t6 = $.index(te, 0);
    case 6:
      state0 = 0;
      t6 = $.mul(t6, vx);
      t8 = $.index(te, 4);
    case 7:
      state0 = 0;
      t6 = $.add(t6, $.mul(t8, vy));
      t10 = $.index(te, 8);
    case 8:
      state0 = 0;
      t6 = $.add(t6, $.mul(t10, vz));
      t12 = $.index(te, 12);
    case 9:
      state0 = 0;
      v.set$x($.add(t6, $.mul(t12, vw)));
      t14 = $.index(te, 1);
    case 10:
      state0 = 0;
      t14 = $.mul(t14, vx);
      t16 = $.index(te, 5);
    case 11:
      state0 = 0;
      t14 = $.add(t14, $.mul(t16, vy));
      t18 = $.index(te, 9);
    case 12:
      state0 = 0;
      t14 = $.add(t14, $.mul(t18, vz));
      t20 = $.index(te, 13);
    case 13:
      state0 = 0;
      v.set$y($.add(t14, $.mul(t20, vw)));
      t22 = $.index(te, 2);
    case 14:
      state0 = 0;
      t22 = $.mul(t22, vx);
      t24 = $.index(te, 6);
    case 15:
      state0 = 0;
      t22 = $.add(t22, $.mul(t24, vy));
      t26 = $.index(te, 10);
    case 16:
      state0 = 0;
      t22 = $.add(t22, $.mul(t26, vz));
      t28 = $.index(te, 14);
    case 17:
      state0 = 0;
      v.set$z($.add(t22, $.mul(t28, vw)));
      t30 = $.index(te, 3);
    case 18:
      state0 = 0;
      t30 = $.mul(t30, vx);
      t32 = $.index(te, 7);
    case 19:
      state0 = 0;
      t30 = $.add(t30, $.mul(t32, vy));
      t34 = $.index(te, 11);
    case 20:
      state0 = 0;
      t30 = $.add(t30, $.mul(t34, vz));
      t36 = $.index(te, 15);
    case 21:
      var te, v, vx, vy, vz, vw, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32, t34, t36;
      state0 = 0;
      v.set$w($.add(t30, $.mul(t36, vw)));
      return v;
  }
},
 rotateAxis$1: function(v) {
  var te, vx, vy, vz;
  te = this.elements;
  vx = v.get$x();
  vy = v.get$y();
  vz = v.get$z();
  v.set$x($.add($.add($.mul(vx, $.index(te, 0)), $.mul(vy, $.index(te, 4))), $.mul(vz, $.index(te, 8))));
  v.set$y($.add($.add($.mul(vx, $.index(te, 1)), $.mul(vy, $.index(te, 5))), $.mul(vz, $.index(te, 9))));
  v.set$z($.add($.add($.mul(vx, $.index(te, 2)), $.mul(vy, $.index(te, 6))), $.mul(vz, $.index(te, 10))));
  v.normalize$0();
  return v;
},
 determinant$0: function() {
  var te, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44;
  te = this.elements;
  n11 = $.index(te, 0);
  n12 = $.index(te, 4);
  n13 = $.index(te, 8);
  n14 = $.index(te, 12);
  n21 = $.index(te, 1);
  n22 = $.index(te, 5);
  n23 = $.index(te, 9);
  n24 = $.index(te, 13);
  n31 = $.index(te, 2);
  n32 = $.index(te, 6);
  n33 = $.index(te, 10);
  n34 = $.index(te, 14);
  n41 = $.index(te, 3);
  n42 = $.index(te, 7);
  n43 = $.index(te, 11);
  n44 = $.index(te, 15);
  return $.add($.sub($.sub($.add($.add($.sub($.sub($.add($.add($.sub($.sub($.add($.add($.sub($.sub($.add($.add($.sub($.sub($.add($.add($.sub($.sub($.mul($.mul($.mul(n14, n23), n32), n41), $.mul($.mul($.mul(n13, n24), n32), n41)), $.mul($.mul($.mul(n14, n22), n33), n41)), $.mul($.mul($.mul(n12, n24), n33), n41)), $.mul($.mul($.mul(n13, n22), n34), n41)), $.mul($.mul($.mul(n12, n23), n34), n41)), $.mul($.mul($.mul(n14, n23), n31), n42)), $.mul($.mul($.mul(n13, n24), n31), n42)), $.mul($.mul($.mul(n14, n21), n33), n42)), $.mul($.mul($.mul(n11, n24), n33), n42)), $.mul($.mul($.mul(n13, n21), n34), n42)), $.mul($.mul($.mul(n11, n23), n34), n42)), $.mul($.mul($.mul(n14, n22), n31), n43)), $.mul($.mul($.mul(n12, n24), n31), n43)), $.mul($.mul($.mul(n14, n21), n32), n43)), $.mul($.mul($.mul(n11, n24), n32), n43)), $.mul($.mul($.mul(n12, n21), n34), n43)), $.mul($.mul($.mul(n11, n22), n34), n43)), $.mul($.mul($.mul(n13, n22), n31), n44)), $.mul($.mul($.mul(n12, n23), n31), n44)), $.mul($.mul($.mul(n13, n21), n32), n44)), $.mul($.mul($.mul(n11, n23), n32), n44)), $.mul($.mul($.mul(n12, n21), n33), n44)), $.mul($.mul($.mul(n11, n22), n33), n44));
},
 getPosition$0: function() {
  var t1, t2, t4, t5;
  t1 = $.Matrix4___v1();
  t2 = this.elements;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.getPosition$0$bailout(1, t1, t2);
  if (12 >= t2.length)
    throw $.ioore(12);
  t4 = t2[12];
  if (13 >= t2.length)
    throw $.ioore(13);
  t5 = t2[13];
  if (14 >= t2.length)
    throw $.ioore(14);
  return t1.setValues$3(t4, t5, t2[14]);
},
 getPosition$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env2;
      t4 = env1;
      t1 = env0;
      break;
    case 3:
      t2 = env3;
      t6 = env2;
      t4 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $.Matrix4___v1();
      t2 = this.elements;
    case 1:
      state0 = 0;
      t2 = $.index(t2, 12);
      t4 = this.elements;
    case 2:
      state0 = 0;
      t4 = $.index(t4, 13);
      t6 = this.elements;
    case 3:
      var t1, t2, t4, t6;
      state0 = 0;
      return t1.setValues$3(t2, t4, $.index(t6, 14));
  }
},
 setPosition$1: function(v) {
  var te = this.elements;
  $.indexSet(te, 12, v.x);
  $.indexSet(te, 13, v.y);
  $.indexSet(te, 14, v.z);
  return this;
},
 getColumnX$0: function() {
  return $.Matrix4___v1().setValues$3($.index(this.elements, 0), $.index(this.elements, 1), $.index(this.elements, 2));
},
 getColumnY$0: function() {
  return $.Matrix4___v1().setValues$3($.index(this.elements, 4), $.index(this.elements, 5), $.index(this.elements, 6));
},
 getColumnZ$0: function() {
  return $.Matrix4___v1().setValues$3($.index(this.elements, 8), $.index(this.elements, 9), $.index(this.elements, 10));
},
 getInverse$1: function(m) {
  var te, me, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44, t1;
  te = this.elements;
  me = m.get$elements();
  n11 = $.index(me, 0);
  n12 = $.index(me, 4);
  n13 = $.index(me, 8);
  n14 = $.index(me, 12);
  n21 = $.index(me, 1);
  n22 = $.index(me, 5);
  n23 = $.index(me, 9);
  n24 = $.index(me, 13);
  n31 = $.index(me, 2);
  n32 = $.index(me, 6);
  n33 = $.index(me, 10);
  n34 = $.index(me, 14);
  n41 = $.index(me, 3);
  n42 = $.index(me, 7);
  n43 = $.index(me, 11);
  n44 = $.index(me, 15);
  $.indexSet(te, 0, $.add($.sub($.sub($.add($.sub($.mul($.mul(n23, n34), n42), $.mul($.mul(n24, n33), n42)), $.mul($.mul(n24, n32), n43)), $.mul($.mul(n22, n34), n43)), $.mul($.mul(n23, n32), n44)), $.mul($.mul(n22, n33), n44)));
  $.indexSet(te, 4, $.sub($.add($.add($.sub($.sub($.mul($.mul(n14, n33), n42), $.mul($.mul(n13, n34), n42)), $.mul($.mul(n14, n32), n43)), $.mul($.mul(n12, n34), n43)), $.mul($.mul(n13, n32), n44)), $.mul($.mul(n12, n33), n44)));
  $.indexSet(te, 8, $.add($.sub($.sub($.add($.sub($.mul($.mul(n13, n24), n42), $.mul($.mul(n14, n23), n42)), $.mul($.mul(n14, n22), n43)), $.mul($.mul(n12, n24), n43)), $.mul($.mul(n13, n22), n44)), $.mul($.mul(n12, n23), n44)));
  $.indexSet(te, 12, $.sub($.add($.add($.sub($.sub($.mul($.mul(n14, n23), n32), $.mul($.mul(n13, n24), n32)), $.mul($.mul(n14, n22), n33)), $.mul($.mul(n12, n24), n33)), $.mul($.mul(n13, n22), n34)), $.mul($.mul(n12, n23), n34)));
  $.indexSet(te, 1, $.sub($.add($.add($.sub($.sub($.mul($.mul(n24, n33), n41), $.mul($.mul(n23, n34), n41)), $.mul($.mul(n24, n31), n43)), $.mul($.mul(n21, n34), n43)), $.mul($.mul(n23, n31), n44)), $.mul($.mul(n21, n33), n44)));
  $.indexSet(te, 5, $.add($.sub($.sub($.add($.sub($.mul($.mul(n13, n34), n41), $.mul($.mul(n14, n33), n41)), $.mul($.mul(n14, n31), n43)), $.mul($.mul(n11, n34), n43)), $.mul($.mul(n13, n31), n44)), $.mul($.mul(n11, n33), n44)));
  $.indexSet(te, 9, $.sub($.add($.add($.sub($.sub($.mul($.mul(n14, n23), n41), $.mul($.mul(n13, n24), n41)), $.mul($.mul(n14, n21), n43)), $.mul($.mul(n11, n24), n43)), $.mul($.mul(n13, n21), n44)), $.mul($.mul(n11, n23), n44)));
  $.indexSet(te, 13, $.add($.sub($.sub($.add($.sub($.mul($.mul(n13, n24), n31), $.mul($.mul(n14, n23), n31)), $.mul($.mul(n14, n21), n33)), $.mul($.mul(n11, n24), n33)), $.mul($.mul(n13, n21), n34)), $.mul($.mul(n11, n23), n34)));
  $.indexSet(te, 2, $.add($.sub($.sub($.add($.sub($.mul($.mul(n22, n34), n41), $.mul($.mul(n24, n32), n41)), $.mul($.mul(n24, n31), n42)), $.mul($.mul(n21, n34), n42)), $.mul($.mul(n22, n31), n44)), $.mul($.mul(n21, n32), n44)));
  $.indexSet(te, 6, $.sub($.add($.add($.sub($.sub($.mul($.mul(n14, n32), n41), $.mul($.mul(n12, n34), n41)), $.mul($.mul(n14, n31), n42)), $.mul($.mul(n11, n34), n42)), $.mul($.mul(n12, n31), n44)), $.mul($.mul(n11, n32), n44)));
  $.indexSet(te, 10, $.add($.sub($.sub($.add($.sub($.mul($.mul(n12, n24), n41), $.mul($.mul(n14, n22), n41)), $.mul($.mul(n14, n21), n42)), $.mul($.mul(n11, n24), n42)), $.mul($.mul(n12, n21), n44)), $.mul($.mul(n11, n22), n44)));
  $.indexSet(te, 14, $.sub($.add($.add($.sub($.sub($.mul($.mul(n14, n22), n31), $.mul($.mul(n12, n24), n31)), $.mul($.mul(n14, n21), n32)), $.mul($.mul(n11, n24), n32)), $.mul($.mul(n12, n21), n34)), $.mul($.mul(n11, n22), n34)));
  $.indexSet(te, 3, $.sub($.add($.add($.sub($.sub($.mul($.mul(n23, n32), n41), $.mul($.mul(n22, n33), n41)), $.mul($.mul(n23, n31), n42)), $.mul($.mul(n21, n33), n42)), $.mul($.mul(n22, n31), n43)), $.mul($.mul(n21, n32), n43)));
  $.indexSet(te, 7, $.add($.sub($.sub($.add($.sub($.mul($.mul(n12, n33), n41), $.mul($.mul(n13, n32), n41)), $.mul($.mul(n13, n31), n42)), $.mul($.mul(n11, n33), n42)), $.mul($.mul(n12, n31), n43)), $.mul($.mul(n11, n32), n43)));
  $.indexSet(te, 11, $.sub($.add($.add($.sub($.sub($.mul($.mul(n13, n22), n41), $.mul($.mul(n12, n23), n41)), $.mul($.mul(n13, n21), n42)), $.mul($.mul(n11, n23), n42)), $.mul($.mul(n12, n21), n43)), $.mul($.mul(n11, n22), n43)));
  $.indexSet(te, 15, $.add($.sub($.sub($.add($.sub($.mul($.mul(n12, n23), n31), $.mul($.mul(n13, n22), n31)), $.mul($.mul(n13, n21), n32)), $.mul($.mul(n11, n23), n32)), $.mul($.mul(n12, n21), n33)), $.mul($.mul(n11, n22), n33)));
  t1 = m.determinant$0();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  this.multiplyScalar$1(1 / t1);
  return this;
},
 setRotationFromEuler$2: function(v, order) {
  var te, x, y, z, a, b, c, d, e, f, ce, cf, de, df, t1, ae, af, be, bf, ac, ad, bc, bd;
  te = this.elements;
  x = v.get$x();
  y = v.get$y();
  z = v.get$z();
  a = $.cos(x);
  b = $.sin(x);
  c = $.cos(y);
  d = $.sin(y);
  e = $.cos(z);
  f = $.sin(z);
  switch (order) {
    case 'YXZ':
      ce = c * e;
      cf = c * f;
      de = d * e;
      df = d * f;
      $.indexSet(te, 0, ce + df * b);
      $.indexSet(te, 4, de * b - cf);
      $.indexSet(te, 8, a * d);
      $.indexSet(te, 1, a * f);
      $.indexSet(te, 5, a * e);
      $.indexSet(te, 9, -b);
      $.indexSet(te, 2, cf * b - de);
      $.indexSet(te, 6, df + ce * b);
      $.indexSet(te, 10, a * c);
      break;
    case 'ZXY':
      ce = c * e;
      cf = c * f;
      de = d * e;
      df = d * f;
      $.indexSet(te, 0, ce - df * b);
      t1 = -a;
      $.indexSet(te, 4, t1 * f);
      $.indexSet(te, 8, de + cf * b);
      $.indexSet(te, 1, cf + de * b);
      $.indexSet(te, 5, a * e);
      $.indexSet(te, 9, df - ce * b);
      $.indexSet(te, 2, t1 * d);
      $.indexSet(te, 6, b);
      $.indexSet(te, 10, a * c);
      break;
    case 'ZYX':
      ae = a * e;
      af = a * f;
      be = b * e;
      bf = b * f;
      $.indexSet(te, 0, c * e);
      $.indexSet(te, 4, be * d - af);
      $.indexSet(te, 8, ae * d + bf);
      $.indexSet(te, 1, c * f);
      $.indexSet(te, 5, bf * d + ae);
      $.indexSet(te, 9, af * d - be);
      $.indexSet(te, 2, -d);
      $.indexSet(te, 6, b * c);
      $.indexSet(te, 10, a * c);
      break;
    case 'YZX':
      ac = a * c;
      ad = a * d;
      bc = b * c;
      bd = b * d;
      $.indexSet(te, 0, c * e);
      $.indexSet(te, 4, bd - ac * f);
      $.indexSet(te, 8, bc * f + ad);
      $.indexSet(te, 1, f);
      $.indexSet(te, 5, a * e);
      $.indexSet(te, 9, -b * e);
      $.indexSet(te, 2, -d * e);
      $.indexSet(te, 6, ad * f + bc);
      $.indexSet(te, 10, ac - bd * f);
      break;
    case 'XZY':
      ac = a * c;
      ad = a * d;
      bc = b * c;
      bd = b * d;
      $.indexSet(te, 0, c * e);
      $.indexSet(te, 4, -f);
      $.indexSet(te, 8, d * e);
      $.indexSet(te, 1, ac * f + bd);
      $.indexSet(te, 5, a * e);
      $.indexSet(te, 9, ad * f - bc);
      $.indexSet(te, 2, bc * f - ad);
      $.indexSet(te, 6, b * e);
      $.indexSet(te, 10, bd * f + ac);
      break;
    default:
      ae = a * e;
      af = a * f;
      be = b * e;
      bf = b * f;
      $.indexSet(te, 0, c * e);
      $.indexSet(te, 4, -c * f);
      $.indexSet(te, 8, d);
      $.indexSet(te, 1, af + be * d);
      $.indexSet(te, 5, ae - bf * d);
      $.indexSet(te, 9, -b * c);
      $.indexSet(te, 2, bf - ae * d);
      $.indexSet(te, 6, be + af * d);
      $.indexSet(te, 10, a * c);
      break;
  }
  return this;
},
 setRotationFromQuaternion$1: function(q) {
  var te, x, y, z, w, x2, y2, z2, xx, xy, xz, yy, yz, zz, wx, wy, wz, t1, t2, t3;
  te = this.elements;
  x = q.x;
  y = q.y;
  z = q.z;
  w = q.w;
  x2 = $.add(x, x);
  y2 = $.add(y, y);
  z2 = $.add(z, z);
  xx = $.mul(x, x2);
  xy = $.mul(x, y2);
  xz = $.mul(x, z2);
  yy = $.mul(y, y2);
  yz = $.mul(y, z2);
  zz = $.mul(z, z2);
  wx = $.mul(w, x2);
  wy = $.mul(w, y2);
  wz = $.mul(w, z2);
  t1 = $.add(yy, zz);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  $.indexSet(te, 0, 1 - t1);
  $.indexSet(te, 4, $.sub(xy, wz));
  $.indexSet(te, 8, $.add(xz, wy));
  $.indexSet(te, 1, $.add(xy, wz));
  t2 = $.add(xx, zz);
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  $.indexSet(te, 5, 1 - t2);
  $.indexSet(te, 9, $.sub(yz, wx));
  $.indexSet(te, 2, $.sub(xz, wy));
  $.indexSet(te, 6, $.add(yz, wx));
  t3 = $.add(xx, yy);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  $.indexSet(te, 10, 1 - t3);
  return this;
},
 extractRotation$1: function(m) {
  var te, me, vector, t1, scaleX, scaleY, scaleZ;
  te = this.elements;
  me = m.get$elements();
  vector = $.Matrix4___v1();
  t1 = vector.setValues$3($.index(me, 0), $.index(me, 1), $.index(me, 2)).length$0();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  scaleX = 1 / t1;
  t1 = vector.setValues$3($.index(me, 4), $.index(me, 5), $.index(me, 6)).length$0();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  scaleY = 1 / t1;
  t1 = vector.setValues$3($.index(me, 8), $.index(me, 9), $.index(me, 10)).length$0();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  scaleZ = 1 / t1;
  $.indexSet(te, 0, $.mul($.index(me, 0), scaleX));
  $.indexSet(te, 1, $.mul($.index(me, 1), scaleX));
  $.indexSet(te, 2, $.mul($.index(me, 2), scaleX));
  $.indexSet(te, 4, $.mul($.index(me, 4), scaleY));
  $.indexSet(te, 5, $.mul($.index(me, 5), scaleY));
  $.indexSet(te, 6, $.mul($.index(me, 6), scaleY));
  $.indexSet(te, 8, $.mul($.index(me, 8), scaleZ));
  $.indexSet(te, 9, $.mul($.index(me, 9), scaleZ));
  $.indexSet(te, 10, $.mul($.index(me, 10), scaleZ));
  return this;
},
 scale$1: function(v) {
  var te, x, y, z;
  te = this.elements;
  x = v.get$x();
  y = v.get$y();
  z = v.get$z();
  $.indexSet(te, 0, $.mul($.index(te, 0), x));
  $.indexSet(te, 4, $.mul($.index(te, 4), y));
  $.indexSet(te, 8, $.mul($.index(te, 8), z));
  $.indexSet(te, 1, $.mul($.index(te, 1), x));
  $.indexSet(te, 5, $.mul($.index(te, 5), y));
  $.indexSet(te, 9, $.mul($.index(te, 9), z));
  $.indexSet(te, 2, $.mul($.index(te, 2), x));
  $.indexSet(te, 6, $.mul($.index(te, 6), y));
  $.indexSet(te, 10, $.mul($.index(te, 10), z));
  $.indexSet(te, 3, $.mul($.index(te, 3), x));
  $.indexSet(te, 7, $.mul($.index(te, 7), y));
  $.indexSet(te, 11, $.mul($.index(te, 11), z));
  return this;
},
 get$scale: function() { return new $.BoundClosure0(this, 'scale$1'); },
 getMaxScaleOnAxis$0: function() {
  var te = this.elements;
  return $.sqrt($.max($.add($.add($.mul($.index(te, 0), $.index(te, 0)), $.mul($.index(te, 1), $.index(te, 1))), $.mul($.index(te, 2), $.index(te, 2))), $.max($.add($.add($.mul($.index(te, 4), $.index(te, 4)), $.mul($.index(te, 5), $.index(te, 5))), $.mul($.index(te, 6), $.index(te, 6))), $.add($.add($.mul($.index(te, 8), $.index(te, 8)), $.mul($.index(te, 9), $.index(te, 9))), $.mul($.index(te, 10), $.index(te, 10))))));
},
 makeOrthographic$6: function(left, right, top$, bottom, near, far) {
  var te, w, h, p, x, y, z;
  te = this.elements;
  w = $.sub(right, left);
  h = $.sub(top$, bottom);
  p = $.sub(far, near);
  x = $.div($.add(right, left), w);
  y = $.div($.add(top$, bottom), h);
  z = $.div($.add(far, near), p);
  if (typeof w !== 'number')
    throw $.iae(w);
  $.indexSet(te, 0, 2 / w);
  $.indexSet(te, 4, 0);
  $.indexSet(te, 8, 0);
  $.indexSet(te, 12, $.neg(x));
  $.indexSet(te, 1, 0);
  if (typeof h !== 'number')
    throw $.iae(h);
  $.indexSet(te, 5, 2 / h);
  $.indexSet(te, 9, 0);
  $.indexSet(te, 13, $.neg(y));
  $.indexSet(te, 2, 0);
  $.indexSet(te, 6, 0);
  if (typeof p !== 'number')
    throw $.iae(p);
  $.indexSet(te, 10, -2 / p);
  $.indexSet(te, 14, $.neg(z));
  $.indexSet(te, 3, 0);
  $.indexSet(te, 7, 0);
  $.indexSet(te, 11, 0);
  $.indexSet(te, 15, 1);
  return this;
},
 clone$0: function() {
  var te, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
  te = this.elements;
  if (typeof te !== 'string' && (typeof te !== 'object' || te === null || te.constructor !== Array && !te.is$JavaScriptIndexingBehavior()))
    return this.clone$0$bailout(1, te);
  t2 = te.length;
  if (0 >= t2)
    throw $.ioore(0);
  t3 = te[0];
  if (4 >= t2)
    throw $.ioore(4);
  t4 = te[4];
  if (8 >= t2)
    throw $.ioore(8);
  t5 = te[8];
  if (12 >= t2)
    throw $.ioore(12);
  t6 = te[12];
  t7 = te[1];
  t8 = te[5];
  t9 = te[9];
  if (13 >= t2)
    throw $.ioore(13);
  t10 = te[13];
  t11 = te[2];
  t12 = te[6];
  t13 = te[10];
  if (14 >= t2)
    throw $.ioore(14);
  t14 = te[14];
  t15 = te[3];
  t16 = te[7];
  t17 = te[11];
  if (15 >= t2)
    throw $.ioore(15);
  return $.Matrix4$(t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, te[15]);
},
 clone$0$bailout: function(state0, te) {
  return $.Matrix4$($.index(te, 0), $.index(te, 4), $.index(te, 8), $.index(te, 12), $.index(te, 1), $.index(te, 5), $.index(te, 9), $.index(te, 13), $.index(te, 2), $.index(te, 6), $.index(te, 10), $.index(te, 14), $.index(te, 3), $.index(te, 7), $.index(te, 11), $.index(te, 15));
},
 Matrix4$16: function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
  this.setValues$16(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
}
};

$$.Quaternion = {"": ["x=", "y=", "z=", "w="],
 "super": "Object",
 setValues$4: function(newX, newY, newZ, newW) {
  this.x = newX;
  this.y = newY;
  this.z = newZ;
  this.w = newW;
  return this;
},
 copy$1: function(q) {
  this.x = q.get$x();
  this.y = q.get$y();
  this.z = q.get$z();
  this.w = q.get$w();
  return this;
},
 length$0: function() {
  var t1, t2, t3, t4;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  t1 = $.add(t1, $.mul(t3, t3));
  t4 = this.w;
  return $.sqrt($.add(t1, $.mul(t4, t4)));
},
 get$length: function() { return new $.BoundClosure(this, 'length$0'); },
 normalize$0: function() {
  var t1, t3, t5, t7, l;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.normalize$0$bailout(1, t1);
  t1 *= t1;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.normalize$0$bailout(2, t1, t3);
  t1 += t3 * t3;
  t5 = this.z;
  if (typeof t5 !== 'number')
    return this.normalize$0$bailout(3, t5, t1);
  t1 += t5 * t5;
  t7 = this.w;
  if (typeof t7 !== 'number')
    return this.normalize$0$bailout(4, t1, t7);
  l = $.sqrt(t1 + t7 * t7);
  if (l === 0) {
    this.x = 0;
    this.y = 0;
    this.z = 0;
    this.w = 0;
  } else {
    l = 1 / l;
    t1 = this.x;
    if (typeof t1 !== 'number')
      return this.normalize$0$bailout(5, t1, l);
    this.x = t1 * l;
    t3 = this.y;
    if (typeof t3 !== 'number')
      return this.normalize$0$bailout(6, t3, l);
    this.y = t3 * l;
    t5 = this.z;
    if (typeof t5 !== 'number')
      return this.normalize$0$bailout(7, t5, l);
    this.z = t5 * l;
    t7 = this.w;
    if (typeof t7 !== 'number')
      return this.normalize$0$bailout(8, t7, l);
    this.w = t7 * l;
  }
  return this;
},
 normalize$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
    case 3:
      t1 = env1;
      t5 = env0;
      break;
    case 4:
      t7 = env1;
      t1 = env0;
      break;
    case 5:
      l = env1;
      t1 = env0;
      break;
    case 6:
      l = env1;
      t3 = env0;
      break;
    case 7:
      l = env1;
      t5 = env0;
      break;
    case 8:
      l = env1;
      t7 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t1 = $.mul(t1, t1);
      t3 = this.y;
    case 2:
      state0 = 0;
      t1 = $.add(t1, $.mul(t3, t3));
      t5 = this.z;
    case 3:
      state0 = 0;
      t1 = $.add(t1, $.mul(t5, t5));
      t7 = this.w;
    case 4:
      state0 = 0;
      l = $.sqrt($.add(t1, $.mul(t7, t7)));
    default:
      var t1, t3, t5, t7, l;
      if (state0 === 0 && l === 0) {
        this.x = 0;
        this.y = 0;
        this.z = 0;
        this.w = 0;
      } else
        switch (state0) {
          case 0:
            l = 1 / l;
            t1 = this.x;
          case 5:
            state0 = 0;
            this.x = $.mul(t1, l);
            t3 = this.y;
          case 6:
            state0 = 0;
            this.y = $.mul(t3, l);
            t5 = this.z;
          case 7:
            state0 = 0;
            this.z = $.mul(t5, l);
            t7 = this.w;
          case 8:
            state0 = 0;
            this.w = $.mul(t7, l);
        }
      return this;
  }
},
 multiply$2: function(q1, q2) {
  this.x = $.add($.sub($.add($.mul(q1.get$x(), q2.get$w()), $.mul(q1.get$y(), q2.get$z())), $.mul(q1.get$z(), q2.get$y())), $.mul(q1.get$w(), q2.get$x()));
  this.y = $.add($.add($.add($.mul($.neg(q1.get$x()), q2.get$z()), $.mul(q1.get$y(), q2.get$w())), $.mul(q1.get$z(), q2.get$x())), $.mul(q1.get$w(), q2.get$y()));
  this.z = $.add($.add($.sub($.mul(q1.get$x(), q2.get$y()), $.mul(q1.get$y(), q2.get$x())), $.mul(q1.get$z(), q2.get$w())), $.mul(q1.get$w(), q2.get$z()));
  this.w = $.add($.sub($.sub($.mul($.neg(q1.get$x()), q2.get$x()), $.mul(q1.get$y(), q2.get$y())), $.mul(q1.get$z(), q2.get$z())), $.mul(q1.get$w(), q2.get$w()));
  return this;
},
 multiplyVector3$2: function(vec, dest) {
  var _x, _y, _z, qx, qy, qz, qw, ix, iy, iz, t8, iw, t9, t10, t11;
  if (dest == null)
    dest = vec;
  _x = vec.get$x();
  if (typeof _x !== 'number')
    return this.multiplyVector3$2$bailout(1, vec, dest, _x);
  _y = vec.get$y();
  if (typeof _y !== 'number')
    return this.multiplyVector3$2$bailout(2, vec, dest, _x, _y);
  _z = vec.get$z();
  if (typeof _z !== 'number')
    return this.multiplyVector3$2$bailout(3, dest, _x, _y, _z);
  qx = this.x;
  if (typeof qx !== 'number')
    return this.multiplyVector3$2$bailout(4, qx, dest, _x, _y, _z);
  qy = this.y;
  if (typeof qy !== 'number')
    return this.multiplyVector3$2$bailout(5, qx, qy, dest, _x, _y, _z);
  qz = this.z;
  if (typeof qz !== 'number')
    return this.multiplyVector3$2$bailout(6, qx, qy, qz, dest, _x, _y, _z);
  qw = this.w;
  if (typeof qw !== 'number')
    return this.multiplyVector3$2$bailout(7, qx, qy, qz, qw, dest, _x, _y, _z);
  ix = qw * _x + qy * _z - qz * _y;
  iy = qw * _y + qz * _x - qx * _z;
  iz = qw * _z + qx * _y - qy * _x;
  t8 = -qx;
  iw = t8 * _x - qy * _y - qz * _z;
  t9 = ix * qw + iw * t8;
  t10 = -qz;
  t9 += iy * t10;
  t11 = -qy;
  dest.set$x(t9 - iz * t11);
  dest.set$y(iy * qw + iw * t11 + iz * t8 - ix * t10);
  dest.set$z(iz * qw + iw * t10 + ix * t11 - iy * t8);
  return dest;
},
 multiplyVector3$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      _x = env2;
      dest = env1;
      vec = env0;
      break;
    case 2:
      _y = env3;
      _x = env2;
      dest = env1;
      vec = env0;
      break;
    case 3:
      _z = env3;
      _y = env2;
      _x = env1;
      dest = env0;
      break;
    case 4:
      _z = env4;
      _y = env3;
      _x = env2;
      dest = env1;
      qx = env0;
      break;
    case 5:
      _z = env5;
      _y = env4;
      _x = env3;
      dest = env2;
      qy = env1;
      qx = env0;
      break;
    case 6:
      _z = env6;
      _y = env5;
      _x = env4;
      dest = env3;
      qz = env2;
      qy = env1;
      qx = env0;
      break;
    case 7:
      _z = env7;
      _y = env6;
      _x = env5;
      dest = env4;
      qw = env3;
      qz = env2;
      qy = env1;
      qx = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (dest == null)
        dest = vec;
      _x = vec.get$x();
    case 1:
      state0 = 0;
      _y = vec.get$y();
    case 2:
      state0 = 0;
      _z = vec.get$z();
    case 3:
      state0 = 0;
      qx = this.x;
    case 4:
      state0 = 0;
      qy = this.y;
    case 5:
      state0 = 0;
      qz = this.z;
    case 6:
      state0 = 0;
      qw = this.w;
    case 7:
      var dest, _x, vec, _y, _z, qx, qy, qz, qw, ix, iy, iz, iw;
      state0 = 0;
      ix = $.sub($.add($.mul(qw, _x), $.mul(qy, _z)), $.mul(qz, _y));
      iy = $.sub($.add($.mul(qw, _y), $.mul(qz, _x)), $.mul(qx, _z));
      iz = $.sub($.add($.mul(qw, _z), $.mul(qx, _y)), $.mul(qy, _x));
      iw = $.sub($.sub($.mul($.neg(qx), _x), $.mul(qy, _y)), $.mul(qz, _z));
      dest.set$x($.sub($.add($.add($.mul(ix, qw), $.mul(iw, $.neg(qx))), $.mul(iy, $.neg(qz))), $.mul(iz, $.neg(qy))));
      dest.set$y($.sub($.add($.add($.mul(iy, qw), $.mul(iw, $.neg(qy))), $.mul(iz, $.neg(qx))), $.mul(ix, $.neg(qz))));
      dest.set$z($.sub($.add($.add($.mul(iz, qw), $.mul(iw, $.neg(qz))), $.mul(ix, $.neg(qy))), $.mul(iy, $.neg(qx))));
      return dest;
  }
},
 multiplyVector3$1: function(vec) {
  return this.multiplyVector3$2(vec,null)
},
 clone$0: function() {
  return $.Quaternion$(this.x, this.y, this.z, this.w);
},
 is$IVector4: true
};

$$.Vector4 = {"": ["x=", "y=", "z=", "w="],
 "super": "Object",
 setValues$4: function(x, y, z, w) {
  this.x = x;
  this.y = y;
  this.z = z;
  this.w = w;
  return this;
},
 copy$1: function(v) {
  this.x = v.get$x();
  this.y = v.get$y();
  this.z = v.get$z();
  if (typeof v === 'object' && v !== null && !!v.is$IVector4)
    this.w = v.get$w();
  else
    this.w = 1;
},
 add$2: function(v1, v2) {
  this.x = $.add(v1.get$x(), v2.get$x());
  this.y = $.add(v1.get$y(), v2.get$y());
  this.z = $.add(v1.get$z(), v2.get$z());
  this.w = $.add(v1.get$w(), v2.get$w());
  return this;
},
 sub$2: function(v1, v2) {
  this.x = $.sub(v1.get$x(), v2.get$x());
  this.y = $.sub(v1.get$y(), v2.get$y());
  this.z = $.sub(v1.get$z(), v2.get$z());
  this.w = $.sub(v1.get$w(), v2.get$w());
  return this;
},
 subSelf$1: function(v) {
  var t1, t3, t5, t7, t9, t11, t13, t15;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.subSelf$1$bailout(1, v, t1);
  t3 = v.x;
  if (typeof t3 !== 'number')
    return this.subSelf$1$bailout(2, v, t1, t3);
  this.x = t1 - t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.subSelf$1$bailout(3, v, t5);
  t7 = v.y;
  if (typeof t7 !== 'number')
    return this.subSelf$1$bailout(4, v, t5, t7);
  this.y = t5 - t7;
  t9 = this.z;
  if (typeof t9 !== 'number')
    return this.subSelf$1$bailout(5, v, t9);
  t11 = v.z;
  if (typeof t11 !== 'number')
    return this.subSelf$1$bailout(6, v, t11, t9);
  this.z = t9 - t11;
  t13 = this.w;
  if (typeof t13 !== 'number')
    return this.subSelf$1$bailout(7, v, t13);
  t15 = v.get$w();
  if (typeof t15 !== 'number')
    return this.subSelf$1$bailout(8, t13, t15);
  this.w = t13 - t15;
  return this;
},
 subSelf$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      v = env0;
      break;
    case 3:
      t5 = env1;
      v = env0;
      break;
    case 4:
      t7 = env2;
      t5 = env1;
      v = env0;
      break;
    case 5:
      t9 = env1;
      v = env0;
      break;
    case 6:
      t9 = env2;
      t11 = env1;
      v = env0;
      break;
    case 7:
      t13 = env1;
      v = env0;
      break;
    case 8:
      t15 = env1;
      t13 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.x;
    case 2:
      state0 = 0;
      this.x = $.sub(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = v.y;
    case 4:
      state0 = 0;
      this.y = $.sub(t5, t7);
      t9 = this.z;
    case 5:
      state0 = 0;
      t11 = v.z;
    case 6:
      state0 = 0;
      this.z = $.sub(t9, t11);
      t13 = this.w;
    case 7:
      state0 = 0;
      t15 = v.get$w();
    case 8:
      var t1, v, t3, t5, t7, t9, t11, t13, t15;
      state0 = 0;
      this.w = $.sub(t13, t15);
      return this;
  }
},
 multiplyScalar$1: function(s) {
  var t1, t3, t5, t7;
  if (typeof s !== 'number')
    return this.multiplyScalar$1$bailout(1, s);
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.multiplyScalar$1$bailout(2, s, t1);
  this.x = t1 * s;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.multiplyScalar$1$bailout(3, s, t3);
  this.y = t3 * s;
  t5 = this.z;
  if (typeof t5 !== 'number')
    return this.multiplyScalar$1$bailout(4, s, t5);
  this.z = t5 * s;
  t7 = this.w;
  if (typeof t7 !== 'number')
    return this.multiplyScalar$1$bailout(5, s, t7);
  this.w = t7 * s;
  return this;
},
 multiplyScalar$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      s = env0;
      break;
    case 2:
      t1 = env1;
      s = env0;
      break;
    case 3:
      t3 = env1;
      s = env0;
      break;
    case 4:
      t5 = env1;
      s = env0;
      break;
    case 5:
      t7 = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.x;
    case 2:
      state0 = 0;
      this.x = $.mul(t1, s);
      t3 = this.y;
    case 3:
      state0 = 0;
      this.y = $.mul(t3, s);
      t5 = this.z;
    case 4:
      state0 = 0;
      this.z = $.mul(t5, s);
      t7 = this.w;
    case 5:
      var s, t1, t3, t5, t7;
      state0 = 0;
      this.w = $.mul(t7, s);
      return this;
  }
},
 divideScalar$1: function(s) {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.divideScalar$1$bailout(1, s, t1);
  this.x = t1 / s;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.divideScalar$1$bailout(2, s, t3);
  this.y = t3 / s;
  t5 = this.z;
  if (typeof t5 !== 'number')
    return this.divideScalar$1$bailout(3, s, t5);
  this.z = t5 / s;
  t7 = this.w;
  if (typeof t7 !== 'number')
    return this.divideScalar$1$bailout(4, s, t7);
  this.w = t7 / s;
  return this;
},
 divideScalar$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      s = env0;
      break;
    case 2:
      t3 = env1;
      s = env0;
      break;
    case 3:
      t5 = env1;
      s = env0;
      break;
    case 4:
      t7 = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      this.x = $.div(t1, s);
      t3 = this.y;
    case 2:
      state0 = 0;
      this.y = $.div(t3, s);
      t5 = this.z;
    case 3:
      state0 = 0;
      this.z = $.div(t5, s);
      t7 = this.w;
    case 4:
      var t1, s, t3, t5, t7;
      state0 = 0;
      this.w = $.div(t7, s);
      return this;
  }
},
 negate$0: function() {
  this.x = $.mul(this.x, -1);
  this.y = $.mul(this.y, -1);
  this.z = $.mul(this.z, -1);
  this.w = $.mul(this.w, -1);
  return this;
},
 dot$1: function(v) {
  var t1, t3, t6, t8, t10, t12, t14;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.dot$1$bailout(1, v, t1);
  t3 = v.get$x();
  if (typeof t3 !== 'number')
    return this.dot$1$bailout(2, v, t1, t3);
  t3 = t1 * t3;
  t1 = this.y;
  if (typeof t1 !== 'number')
    return this.dot$1$bailout(3, v, t1, t3);
  t6 = v.get$y();
  if (typeof t6 !== 'number')
    return this.dot$1$bailout(4, v, t6, t1, t3);
  t3 += t1 * t6;
  t8 = this.z;
  if (typeof t8 !== 'number')
    return this.dot$1$bailout(5, v, t3, t8);
  t10 = v.get$z();
  if (typeof t10 !== 'number')
    return this.dot$1$bailout(6, v, t3, t8, t10);
  t3 += t8 * t10;
  t12 = this.w;
  if (typeof t12 !== 'number')
    return this.dot$1$bailout(7, v, t3, t12);
  t14 = v.get$w();
  if (typeof t14 !== 'number')
    return this.dot$1$bailout(8, t3, t14, t12);
  return t3 + t12 * t14;
},
 dot$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      v = env0;
      break;
    case 3:
      t3 = env2;
      t1 = env1;
      v = env0;
      break;
    case 4:
      t3 = env3;
      t1 = env2;
      t6 = env1;
      v = env0;
      break;
    case 5:
      t8 = env2;
      t3 = env1;
      v = env0;
      break;
    case 6:
      t10 = env3;
      t8 = env2;
      t3 = env1;
      v = env0;
      break;
    case 7:
      t12 = env2;
      t3 = env1;
      v = env0;
      break;
    case 8:
      t12 = env2;
      t14 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.get$x();
    case 2:
      state0 = 0;
      t3 = $.mul(t1, t3);
      t1 = this.y;
    case 3:
      state0 = 0;
      t6 = v.get$y();
    case 4:
      state0 = 0;
      t3 = $.add(t3, $.mul(t1, t6));
      t8 = this.z;
    case 5:
      state0 = 0;
      t10 = v.get$z();
    case 6:
      state0 = 0;
      t3 = $.add(t3, $.mul(t8, t10));
      t12 = this.w;
    case 7:
      state0 = 0;
      t14 = v.get$w();
    case 8:
      var t1, v, t3, t6, t8, t10, t12, t14;
      state0 = 0;
      return $.add(t3, $.mul(t12, t14));
  }
},
 lengthSq$0: function() {
  var t1, t2, t3, t4;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  t1 = $.add(t1, $.mul(t3, t3));
  t4 = this.w;
  return $.add(t1, $.mul(t4, t4));
},
 length$0: function() {
  var t1, t2, t3, t4;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  t1 = $.add(t1, $.mul(t3, t3));
  t4 = this.w;
  return $.sqrt($.add(t1, $.mul(t4, t4)));
},
 get$length: function() { return new $.BoundClosure(this, 'length$0'); },
 normalize$0: function() {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.normalize$0$bailout(1, t1);
  t1 *= t1;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.normalize$0$bailout(2, t3, t1);
  t1 += t3 * t3;
  t5 = this.z;
  if (typeof t5 !== 'number')
    return this.normalize$0$bailout(3, t5, t1);
  t1 += t5 * t5;
  t7 = this.w;
  if (typeof t7 !== 'number')
    return this.normalize$0$bailout(4, t1, t7);
  return this.divideScalar$1($.sqrt(t1 + t7 * t7));
},
 normalize$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
    case 3:
      t1 = env1;
      t5 = env0;
      break;
    case 4:
      t7 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t1 = $.mul(t1, t1);
      t3 = this.y;
    case 2:
      state0 = 0;
      t1 = $.add(t1, $.mul(t3, t3));
      t5 = this.z;
    case 3:
      state0 = 0;
      t1 = $.add(t1, $.mul(t5, t5));
      t7 = this.w;
    case 4:
      var t1, t3, t5, t7;
      state0 = 0;
      return this.divideScalar$1($.sqrt($.add(t1, $.mul(t7, t7))));
  }
},
 lerpSelf$2: function(v, alpha) {
  var t1;
  this.x = $.add(this.x, $.mul($.sub(v.get$x(), this.x), alpha));
  this.y = $.add(this.y, $.mul($.sub(v.get$y(), this.y), alpha));
  this.z = $.add(this.z, $.mul($.sub(v.get$z(), this.z), alpha));
  t1 = this.w;
  this.w = $.add(t1, $.mul($.sub(v.get$w(), t1), alpha));
  return this;
},
 clone$0: function() {
  return $.Vector4$(this.x, this.y, this.z, this.w);
},
 is$IVector4: true
};

$$.Object3D = {"": ["id?", "name?", "properties?", "parent=", "children?", "position?", "rotation=", "scale?", "renderDepth?", "matrixWorld?", "matrixRotationWorld?", "visible=", "frustumCulled?"],
 "super": "Object",
 scale$2: function(arg0, arg1) { return this.scale.call$2(arg0, arg1); },
 translate$2: function(distance, axis) {
  this.matrix.rotateAxis$1(axis);
  this.position.addSelf$1(axis.multiplyScalar$1(distance));
},
 add$1: function(object) {
  var scene;
  if ($.eqB(object, this)) {
    $.print('THREE.Object3D.add: An object can\'t be added as a child of itself.');
    return;
  }
  if (!(object.get$parent() == null))
    object.get$parent().remove$1(object);
  object.set$parent(this);
  this.children.push(object);
  for (scene = this; !(scene.get$parent() == null);)
    scene = scene.get$parent();
  if (typeof scene === 'object' && scene !== null && !!scene.is$Scene)
    scene.addObject$1(object);
},
 remove$1: function(object) {
  var t1, index, scene;
  t1 = this.children;
  index = $.indexOf$1(t1, object);
  if (!$.eqB(index, -1)) {
    object.set$parent(null);
    $.removeRange(t1, index, 1);
    for (scene = this; !(scene.get$parent() == null);)
      scene = scene.get$parent();
    if (typeof scene === 'object' && scene !== null && !!scene.is$Scene)
      scene.removeObject$1(object);
  }
},
 updateMatrix$0: function() {
  var t1, t2;
  t1 = this.matrix;
  t1.setPosition$1(this.position);
  if (this.useQuaternion)
    t1.setRotationFromQuaternion$1(this.quaternion);
  else
    t1.setRotationFromEuler$2(this.rotation, this.eulerOrder);
  t2 = this.scale;
  if (!$.eqB(t2.x, 1) || !$.eqB(t2.y, 1) || !$.eqB(t2.z, 1)) {
    t1.scale$1(t2);
    this.boundRadiusScale = $.max(t2.x, $.max(t2.y, t2.z));
  }
  this.matrixWorldNeedsUpdate = true;
},
 updateMatrixWorld$1: function(force) {
  var t1, t2, t3, t4, t5;
  t1 = {};
  t1.force_1 = force;
  if (this.matrixAutoUpdate === true)
    this.updateMatrix$0();
  if (this.matrixWorldNeedsUpdate || t1.force_1 === true) {
    t2 = this.parent;
    t3 = !(t2 == null);
    t4 = this.matrixWorld;
    t5 = this.matrix;
    if (t3)
      t4.multiply$2(t2.get$matrixWorld(), t5);
    else
      t4.copy$1(t5);
    this.matrixWorldNeedsUpdate = false;
    t1.force_1 = true;
  }
  $.forEach(this.children, new $.Object3D_updateMatrixWorld_anon(t1));
},
 updateMatrixWorld$0: function() {
  return this.updateMatrixWorld$1(false)
},
 clone$0: function() {
},
 get$_data: function() {
  if (this.__data == null)
    this.__data = $.makeLiteralMap([]);
  return this.__data;
},
 operator$index$1: function(key) {
  return $.index(this.get$_data(), key);
},
 operator$indexSet$2: function(key, value) {
  $.indexSet(this.get$_data(), key, value);
  return value;
}
};

$$.Color = {"": ["r?", "g?", "b?"],
 "super": "Object",
 get$_rr: function() {
  return $.toInt($.floor($.mul(this.r, 255)));
},
 get$_gg: function() {
  return $.toInt($.floor($.mul(this.g, 255)));
},
 get$_bb: function() {
  return $.toInt($.floor($.mul(this.b, 255)));
},
 copy$1: function(color) {
  this.r = color.get$r();
  this.g = color.get$g();
  this.b = color.get$b();
  return this;
},
 setRGB$3: function(newR, newG, newB) {
  this.r = newR;
  this.g = newG;
  this.b = newB;
  return this;
},
 setHex$1: function(hex) {
  var h = $.toInt($.floor(hex));
  this.r = $.div($.shr($.and(h, 16711680), 16), 255);
  this.g = $.div($.shr($.and(h, 65280), 8), 255);
  this.b = $.div($.and(h, 255), 255);
  return this;
},
 getContextStyle$0: function() {
  return 'rgb(' + $.S(this.get$_rr()) + ',' + $.S(this.get$_gg()) + ',' + $.S(this.get$_bb()) + ')';
},
 clone$0: function() {
  return $.Color$(null).setRGB$3(this.r, this.g, this.b);
},
 Color$1: function(hex) {
  if (typeof hex === 'number')
    this.setHex$1(hex);
},
 is$Color: true
};

$$.Face3 = {"": ["a=", "b?", "c?", "normal?", "vertexNormals?", "vertexColors", "vertexTangents", "color=", "materialIndex?", "centroid?"],
 "super": "Object",
 clone$0: function() {
  var face = $.Face3$(this.a, this.b, this.c, null, null, null);
  face.normal.copy$1(this.normal);
  face.color.copy$1(this.color);
  face.centroid.copy$1(this.centroid);
  face.materialIndex = this.materialIndex;
  face.vertexNormals = $.map(this.vertexNormals, new $.Face3_clone_anon());
  face.vertexColors = $.map(this.vertexColors, new $.Face3_clone_anon0());
  face.vertexTangents = $.map(this.vertexTangents, new $.Face3_clone_anon1());
  return face;
},
 Face3$6: function(a, b, c, normalOrVertexNormals, colorOrVertexColors, materialIndex) {
  this.normal = typeof normalOrVertexNormals === 'object' && normalOrVertexNormals !== null && !!normalOrVertexNormals.is$Vector3 ? normalOrVertexNormals : $.Vector3$(0, 0, 0);
  this.vertexNormals = typeof normalOrVertexNormals === 'object' && normalOrVertexNormals !== null && (normalOrVertexNormals.constructor === Array || normalOrVertexNormals.is$List()) ? normalOrVertexNormals : [];
  this.color = typeof colorOrVertexColors === 'object' && colorOrVertexColors !== null && !!colorOrVertexColors.is$Color ? colorOrVertexColors : $.Color$(null);
  this.vertexColors = typeof colorOrVertexColors === 'object' && colorOrVertexColors !== null && (colorOrVertexColors.constructor === Array || colorOrVertexColors.is$List()) ? colorOrVertexColors : [];
  this.vertexTangents = [];
  this.centroid = $.Vector3$(0, 0, 0);
},
 is$Face3: true
};

$$.Face4 = {"": ["a=", "b?", "c?", "d?", "normal?", "vertexNormals?", "vertexColors", "vertexTangents", "color=", "materialIndex?", "centroid?"],
 "super": "Object",
 clone$0: function() {
  var face = $.Face4$(this.a, this.b, this.c, this.d, null, null, null);
  face.normal.copy$1(this.normal);
  face.color.copy$1(this.color);
  face.centroid.copy$1(this.centroid);
  face.materialIndex = this.materialIndex;
  face.vertexNormals = $.map(this.vertexNormals, new $.Face4_clone_anon());
  face.vertexColors = $.map(this.vertexColors, new $.Face4_clone_anon0());
  face.vertexTangents = $.map(this.vertexTangents, new $.Face4_clone_anon1());
  return face;
},
 Face4$7: function(a, b, c, d, normalOrVertexNormals, colorOrVertexColors, materialIndex) {
  this.normal = typeof normalOrVertexNormals === 'object' && normalOrVertexNormals !== null && !!normalOrVertexNormals.is$Vector3 ? normalOrVertexNormals : $.Vector3$(0, 0, 0);
  this.vertexNormals = typeof normalOrVertexNormals === 'object' && normalOrVertexNormals !== null && (normalOrVertexNormals.constructor === Array || normalOrVertexNormals.is$List()) ? normalOrVertexNormals : [];
  this.color = typeof colorOrVertexColors === 'object' && colorOrVertexColors !== null && !!colorOrVertexColors.is$Color ? colorOrVertexColors : $.Color$(null);
  this.vertexColors = typeof colorOrVertexColors === 'object' && colorOrVertexColors !== null && (colorOrVertexColors.constructor === Array || colorOrVertexColors.is$List()) ? colorOrVertexColors : [];
  this.vertexTangents = [];
  this.materialIndex = this.materialIndex;
  this.centroid = $.Vector3$(0, 0, 0);
},
 is$Face4: true
};

$$.Frustum = {"": ["planes"],
 "super": "Object",
 setFromMatrix$1: function(m) {
  var me, me0, me1, me2, me3, me4, me5, me6, me7, me8, me9, me10, me11, me12, me13, me14, me15, t1, i, plane;
  me = m.elements;
  me0 = $.index(me, 0);
  me1 = $.index(me, 1);
  me2 = $.index(me, 2);
  me3 = $.index(me, 3);
  me4 = $.index(me, 4);
  me5 = $.index(me, 5);
  me6 = $.index(me, 6);
  me7 = $.index(me, 7);
  me8 = $.index(me, 8);
  me9 = $.index(me, 9);
  me10 = $.index(me, 10);
  me11 = $.index(me, 11);
  me12 = $.index(me, 12);
  me13 = $.index(me, 13);
  me14 = $.index(me, 14);
  me15 = $.index(me, 15);
  t1 = this.planes;
  if (0 >= t1.length)
    throw $.ioore(0);
  t1[0].setValues$4($.sub(me3, me0), $.sub(me7, me4), $.sub(me11, me8), $.sub(me15, me12));
  if (1 >= t1.length)
    throw $.ioore(1);
  t1[1].setValues$4($.add(me3, me0), $.add(me7, me4), $.add(me11, me8), $.add(me15, me12));
  if (2 >= t1.length)
    throw $.ioore(2);
  t1[2].setValues$4($.add(me3, me1), $.add(me7, me5), $.add(me11, me9), $.add(me15, me13));
  if (3 >= t1.length)
    throw $.ioore(3);
  t1[3].setValues$4($.sub(me3, me1), $.sub(me7, me5), $.sub(me11, me9), $.sub(me15, me13));
  if (4 >= t1.length)
    throw $.ioore(4);
  t1[4].setValues$4($.sub(me3, me2), $.sub(me7, me6), $.sub(me11, me10), $.sub(me15, me14));
  if (5 >= t1.length)
    throw $.ioore(5);
  t1[5].setValues$4($.add(me3, me2), $.add(me7, me6), $.add(me11, me10), $.add(me15, me14));
  for (i = 0; i < 6; ++i) {
    if (i >= t1.length)
      throw $.ioore(i);
    plane = t1[i];
    plane.divideScalar$1($.sqrt($.add($.add($.mul(plane.get$x(), plane.get$x()), $.mul(plane.get$y(), plane.get$y())), $.mul(plane.get$z(), plane.get$z()))));
  }
},
 contains$1: function(object) {
  var matrix, me, t2, t4, radius, t1, i, t7, t9, t11, t13;
  matrix = object.get$matrixWorld();
  me = matrix.get$elements();
  if (typeof me !== 'string' && (typeof me !== 'object' || me === null || me.constructor !== Array && !me.is$JavaScriptIndexingBehavior()))
    return this.contains$1$bailout(1, object, matrix, me);
  t2 = object.get$geometry().get$boundingSphere().get$radius();
  if (typeof t2 !== 'number')
    return this.contains$1$bailout(2, t2, matrix, me);
  t2 = -t2;
  t4 = matrix.getMaxScaleOnAxis$0();
  if (typeof t4 !== 'number')
    return this.contains$1$bailout(3, t2, t4, me);
  radius = t2 * t4;
  for (t1 = this.planes, i = 0; i < 6; ++i) {
    if (i >= t1.length)
      throw $.ioore(i);
    t2 = t1[i].get$x();
    if (typeof t2 !== 'number')
      return this.contains$1$bailout(4, t1, i, me, radius, t2);
    if (12 >= me.length)
      throw $.ioore(12);
    t4 = me[12];
    if (typeof t4 !== 'number')
      return this.contains$1$bailout(5, t1, i, t4, me, radius, t2);
    t4 = t2 * t4;
    if (i >= t1.length)
      throw $.ioore(i);
    t2 = t1[i].get$y();
    if (typeof t2 !== 'number')
      return this.contains$1$bailout(6, t1, i, t4, me, t2, radius);
    if (13 >= me.length)
      throw $.ioore(13);
    t7 = me[13];
    if (typeof t7 !== 'number')
      return this.contains$1$bailout(7, t1, i, t4, me, t2, t7, radius);
    t4 += t2 * t7;
    if (i >= t1.length)
      throw $.ioore(i);
    t9 = t1[i].get$z();
    if (typeof t9 !== 'number')
      return this.contains$1$bailout(8, t1, i, t9, me, radius, t4);
    if (14 >= me.length)
      throw $.ioore(14);
    t11 = me[14];
    if (typeof t11 !== 'number')
      return this.contains$1$bailout(9, t1, i, t9, t11, me, radius, t4);
    t4 += t9 * t11;
    if (i >= t1.length)
      throw $.ioore(i);
    t13 = t1[i].get$w();
    if (typeof t13 !== 'number')
      return this.contains$1$bailout(10, t1, i, me, t4, radius, t13);
    if (t4 + t13 <= radius)
      return false;
  }
  return true;
},
 contains$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      me = env2;
      matrix = env1;
      object = env0;
      break;
    case 2:
      me = env2;
      matrix = env1;
      t2 = env0;
      break;
    case 3:
      me = env2;
      t4 = env1;
      t2 = env0;
      break;
    case 4:
      t2 = env4;
      radius = env3;
      me = env2;
      i = env1;
      t1 = env0;
      break;
    case 5:
      t2 = env5;
      radius = env4;
      me = env3;
      t4 = env2;
      i = env1;
      t1 = env0;
      break;
    case 6:
      radius = env5;
      t2 = env4;
      me = env3;
      t4 = env2;
      i = env1;
      t1 = env0;
      break;
    case 7:
      radius = env6;
      t7 = env5;
      t2 = env4;
      me = env3;
      t4 = env2;
      i = env1;
      t1 = env0;
      break;
    case 8:
      t4 = env5;
      radius = env4;
      me = env3;
      t9 = env2;
      i = env1;
      t1 = env0;
      break;
    case 9:
      t4 = env6;
      radius = env5;
      me = env4;
      t11 = env3;
      t9 = env2;
      i = env1;
      t1 = env0;
      break;
    case 10:
      t13 = env5;
      radius = env4;
      t4 = env3;
      me = env2;
      i = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      matrix = object.get$matrixWorld();
      me = matrix.get$elements();
    case 1:
      state0 = 0;
      t2 = object.get$geometry().get$boundingSphere().get$radius();
    case 2:
      state0 = 0;
      t2 = $.neg(t2);
      t4 = matrix.getMaxScaleOnAxis$0();
    case 3:
      state0 = 0;
      radius = $.mul(t2, t4);
      t1 = this.planes;
      i = 0;
    default:
      var matrix, me, object, t2, t4, radius, t1, i, t7, t9, t11, t13;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < 6))
                break L0;
              if (i >= t1.length)
                throw $.ioore(i);
              t2 = t1[i].get$x();
            case 4:
              state0 = 0;
              t4 = $.index(me, 12);
            case 5:
              state0 = 0;
              t4 = $.mul(t2, t4);
              if (i >= t1.length)
                throw $.ioore(i);
              t2 = t1[i].get$y();
            case 6:
              state0 = 0;
              t7 = $.index(me, 13);
            case 7:
              state0 = 0;
              t4 = $.add(t4, $.mul(t2, t7));
              if (i >= t1.length)
                throw $.ioore(i);
              t9 = t1[i].get$z();
            case 8:
              state0 = 0;
              t11 = $.index(me, 14);
            case 9:
              state0 = 0;
              t4 = $.add(t4, $.mul(t9, t11));
              if (i >= t1.length)
                throw $.ioore(i);
              t13 = t1[i].get$w();
            case 10:
              state0 = 0;
              if ($.leB($.add(t4, t13), radius))
                return false;
              ++i;
          }
      return true;
  }
}
};

$$.Geometry = {"": ["id?", "name?", "vertices?", "materials?", "faces?", "faceVertexUvs?", "morphTargets?", "boundingSphere?"],
 "super": "Object",
 computeCentroids$0: function() {
  $.forEach(this.faces, new $.Geometry_computeCentroids_anon(this));
},
 computeFaceNormals$0: function() {
  var t1, cb, ab;
  t1 = {};
  t1.vA_1 = null;
  t1.vB_2 = null;
  t1.vC_3 = null;
  cb = $.Vector3$(0, 0, 0);
  ab = $.Vector3$(0, 0, 0);
  $.forEach(this.faces, new $.Geometry_computeFaceNormals_anon(this, t1, ab, cb));
},
 computeBoundingSphere$0: function() {
  var t1 = {};
  t1.radiusSq_1 = null;
  this.boundingSphere = $.BoundingSphere$($.sqrt($.reduce(this.vertices, 0, new $.Geometry_computeBoundingSphere_anon(t1))));
},
 clone$0: function() {
},
 get$_data: function() {
  if (this.__data == null)
    this.__data = $.makeLiteralMap([]);
  return this.__data;
},
 operator$index$1: function(key) {
  return $.index(this.get$_data(), key);
},
 operator$indexSet$2: function(key, value) {
  $.indexSet(this.get$_data(), key, value);
  return value;
}
};

$$.BoundingSphere = {"": ["radius="],
 "super": "Object"
};

$$.Projector = {"": ["_objectPool", "_vertexPool?", "_face4Pool", "_face3Pool", "_linePool", "_particlePool", "_objectCount", "_vertexCount=", "_face3Count", "_face4Count", "_lineCount", "_particleCount", "_object", "_vertex=", "_line=", "_particle=", "_vector3", "_vector4?", "_clippedVertex1PositionScreen?", "_clippedVertex2PositionScreen?", "_renderData?", "_viewProjectionMatrix?", "_modelViewProjectionMatrix?", "_frustum"],
 "super": "Object",
 unprojectVector$2: function(vector, camera) {
  var t1;
  camera.get$projectionMatrixInverse().getInverse$1(camera.get$projectionMatrix());
  t1 = this._viewProjectionMatrix;
  t1.multiply$2(camera.get$matrixWorld(), camera.get$projectionMatrixInverse());
  t1.multiplyVector3$1(vector);
  return vector;
},
 pickingRay$2: function(vector, camera) {
  var end;
  vector.set$z(-1);
  end = $.Vector3$(vector.get$x(), vector.get$y(), 1);
  this.unprojectVector$2(vector, camera);
  this.unprojectVector$2(end, camera);
  end.subSelf$1(vector).normalize$0();
  return $.Ray$(vector, end, 0, (1/0));
},
 _projectObject$1: function(parent$) {
  var cl, t1, t2, c, t3, object;
  cl = $.get$length(parent$.get$children());
  if (typeof cl !== 'number')
    return this._projectObject$1$bailout(1, parent$, cl);
  for (t1 = this._frustum, t2 = this._viewProjectionMatrix, c = 0; c < cl; ++c) {
    t3 = parent$.get$children();
    if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
      return this._projectObject$1$bailout(2, parent$, t3, t2, cl, c, t1);
    if (c >= t3.length)
      throw $.ioore(c);
    object = t3[c];
    if (object.get$visible() !== true)
      continue;
    if (typeof object === 'object' && object !== null && !!object.is$Light)
      $.add$1(this._renderData.get$lights(), object);
    else if (typeof object === 'object' && object !== null && !!object.is$Mesh || typeof object === 'object' && object !== null && !!object.is$Line) {
      if (object.get$frustumCulled() !== true || t1.contains$1(object) === true) {
        this._object = this.getNextObjectInPool$0();
        this._object.set$object(object);
        t3 = object.get$renderDepth();
        if (!(t3 == null))
          this._object.set$z(t3);
        else {
          this._vector3.copy$1(object.get$matrixWorld().getPosition$0());
          t2.multiplyVector3$1(this._vector3);
          t3 = this._vector3.z;
          this._object.set$z(t3);
        }
        $.add$1(this._renderData.get$objects(), this._object);
      }
    } else if (typeof object === 'object' && object !== null && !!object.is$Sprite || typeof object === 'object' && object !== null && !!object.is$Particle) {
      this._object = this.getNextObjectInPool$0();
      this._object.set$object(object);
      t3 = object.get$renderDepth();
      if (!(t3 == null))
        this._object.set$z(t3);
      else {
        this._vector3.copy$1(object.get$matrixWorld().getPosition$0());
        t2.multiplyVector3$1(this._vector3);
        t3 = this._vector3.z;
        this._object.set$z(t3);
      }
      $.add$1(this._renderData.get$sprites(), this._object);
    } else {
      this._object = this.getNextObjectInPool$0();
      this._object.set$object(object);
      t3 = object.get$renderDepth();
      if (!(t3 == null))
        this._object.set$z(t3);
      else {
        this._vector3.copy$1(object.get$matrixWorld().getPosition$0());
        t2.multiplyVector3$1(this._vector3);
        t3 = this._vector3.z;
        this._object.set$z(t3);
      }
      $.add$1(this._renderData.get$objects(), this._object);
    }
    this._projectObject$1(object);
  }
},
 _projectObject$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      cl = env1;
      parent$ = env0;
      break;
    case 2:
      t1 = env5;
      c = env4;
      cl = env3;
      t2 = env2;
      t3 = env1;
      parent$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      cl = $.get$length(parent$.get$children());
    case 1:
      state0 = 0;
      t1 = this._frustum;
      t2 = this._viewProjectionMatrix;
      c = 0;
    case 2:
      var cl, parent$, t1, t2, c, t3, object;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(c, cl))
                break L0;
            case 2:
              c$0: {
                switch (state0) {
                  case 0:
                    t3 = parent$.get$children();
                  case 2:
                    state0 = 0;
                    object = $.index(t3, c);
                    if (object.get$visible() !== true)
                      break c$0;
                    if (typeof object === 'object' && object !== null && !!object.is$Light)
                      $.add$1(this._renderData.get$lights(), object);
                    else if (typeof object === 'object' && object !== null && !!object.is$Mesh || typeof object === 'object' && object !== null && !!object.is$Line) {
                      if (object.get$frustumCulled() !== true || t1.contains$1(object) === true) {
                        this._object = this.getNextObjectInPool$0();
                        this._object.set$object(object);
                        t3 = object.get$renderDepth();
                        if (!(t3 == null))
                          this._object.set$z(t3);
                        else {
                          this._vector3.copy$1(object.get$matrixWorld().getPosition$0());
                          t2.multiplyVector3$1(this._vector3);
                          t3 = this._vector3.z;
                          this._object.set$z(t3);
                        }
                        $.add$1(this._renderData.get$objects(), this._object);
                      }
                    } else if (typeof object === 'object' && object !== null && !!object.is$Sprite || typeof object === 'object' && object !== null && !!object.is$Particle) {
                      this._object = this.getNextObjectInPool$0();
                      this._object.set$object(object);
                      t3 = object.get$renderDepth();
                      if (!(t3 == null))
                        this._object.set$z(t3);
                      else {
                        this._vector3.copy$1(object.get$matrixWorld().getPosition$0());
                        t2.multiplyVector3$1(this._vector3);
                        t3 = this._vector3.z;
                        this._object.set$z(t3);
                      }
                      $.add$1(this._renderData.get$sprites(), this._object);
                    } else {
                      this._object = this.getNextObjectInPool$0();
                      this._object.set$object(object);
                      t3 = object.get$renderDepth();
                      if (!(t3 == null))
                        this._object.set$z(t3);
                      else {
                        this._vector3.copy$1(object.get$matrixWorld().getPosition$0());
                        t2.multiplyVector3$1(this._vector3);
                        t3 = this._vector3.z;
                        this._object.set$z(t3);
                      }
                      $.add$1(this._renderData.get$objects(), this._object);
                    }
                    this._projectObject$1(object);
                }
              }
              ++c;
          }
  }
},
 projectGraph$2: function(root, sort) {
  var t1;
  this._objectCount = 0;
  t1 = [];
  this._renderData.set$objects(t1);
  t1 = [];
  this._renderData.set$sprites(t1);
  t1 = [];
  this._renderData.set$lights(t1);
  this._projectObject$1(root);
  if (sort)
    $.sort$1(this._renderData.get$objects(), this.get$painterSort());
  return this._renderData;
},
 projectScene$3: function(scene, camera, sort) {
  var t1, near, far, t2;
  t1 = {};
  near = camera.get$near();
  far = camera.get$far();
  t1.visible_1 = false;
  t1.v_2 = null;
  t1.vl_3 = null;
  t1.f_4 = null;
  t1.fl_5 = null;
  t1.n_6 = null;
  t1.nl_7 = null;
  t1.c_8 = null;
  t1.cl_9 = null;
  t1.u_10 = null;
  t1.ul_11 = null;
  t1.object_12 = null;
  t1.modelMatrix_13 = null;
  t1.rotationMatrix_14 = null;
  t1.geometry_15 = null;
  t1.geometryMaterials_16 = null;
  t1.vertices_17 = null;
  t1.normal_18 = null;
  t1.faces_19 = null;
  t1.face_20 = null;
  t1._face_21 = null;
  t1.faceVertexNormals_22 = null;
  t1.faceVertexUvs_23 = null;
  t1.v1_24 = null;
  t1.v2_25 = null;
  t1.v3_26 = null;
  t1.v4_27 = null;
  t1.isFaceMaterial_28 = null;
  t1.material_29 = null;
  t1.side_30 = null;
  this._face3Count = 0;
  this._face4Count = 0;
  this._lineCount = 0;
  this._particleCount = 0;
  t2 = [];
  this._renderData.set$elements(t2);
  scene.updateMatrixWorld$0();
  if (camera.get$parent() == null)
    camera.updateMatrixWorld$0();
  camera.get$matrixWorldInverse().getInverse$1(camera.get$matrixWorld());
  t2 = this._viewProjectionMatrix;
  t2.multiply$2(camera.get$projectionMatrix(), camera.get$matrixWorldInverse());
  this._frustum.setFromMatrix$1(t2);
  this._renderData = this.projectGraph$2(scene, false);
  $.forEach(this._renderData.get$objects(), new $.Projector_projectScene_anon(this, far, near, t1));
  $.forEach(this._renderData.get$sprites(), new $.Projector_projectScene_anon0(camera, this, t1));
  if (sort)
    $.sort$1(this._renderData.get$elements(), this.get$painterSort());
  return this._renderData;
},
 getNextObjectInPool$0: function() {
  var t1, t3, t4, object;
  t1 = this._objectCount;
  if (typeof t1 !== 'number')
    return this.getNextObjectInPool$0$bailout(1, t1);
  t3 = this._objectPool;
  t4 = t3.length;
  if (t1 < t4) {
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t4)
      throw $.ioore(t1);
    object = !(t3[t1] == null) ? t3[t1] : $.RenderableObject$();
  } else {
    object = $.RenderableObject$();
    t3.push(object);
  }
  t1 = this._objectCount;
  if (typeof t1 !== 'number')
    return this.getNextObjectInPool$0$bailout(2, t1, object);
  this._objectCount = t1 + 1;
  return object;
},
 getNextObjectInPool$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      object = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._objectCount;
    case 1:
      state0 = 0;
      t3 = this._objectPool;
      if ($.ltB(t1, t3.length)) {
        t1 = this._objectCount;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= t3.length)
          throw $.ioore(t1);
        object = !(t3[t1] == null) ? t3[t1] : $.RenderableObject$();
      } else {
        object = $.RenderableObject$();
        t3.push(object);
      }
      t1 = this._objectCount;
    case 2:
      var t1, t3, object;
      state0 = 0;
      this._objectCount = $.add(t1, 1);
      return object;
  }
},
 getNextVertexInPool$0: function() {
  var t1, t3, t4, vertex;
  t1 = this._vertexCount;
  if (typeof t1 !== 'number')
    return this.getNextVertexInPool$0$bailout(1, t1);
  t3 = this._vertexPool;
  t4 = t3.length;
  if (t1 < t4) {
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t4)
      throw $.ioore(t1);
    vertex = !(t3[t1] == null) ? t3[t1] : $.RenderableVertex$();
  } else {
    vertex = $.RenderableVertex$();
    t3.push(vertex);
  }
  t1 = this._vertexCount;
  if (typeof t1 !== 'number')
    return this.getNextVertexInPool$0$bailout(2, t1, vertex);
  this._vertexCount = t1 + 1;
  return vertex;
},
 getNextVertexInPool$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      vertex = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._vertexCount;
    case 1:
      state0 = 0;
      t3 = this._vertexPool;
      if ($.ltB(t1, t3.length)) {
        t1 = this._vertexCount;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= t3.length)
          throw $.ioore(t1);
        vertex = !(t3[t1] == null) ? t3[t1] : $.RenderableVertex$();
      } else {
        vertex = $.RenderableVertex$();
        t3.push(vertex);
      }
      t1 = this._vertexCount;
    case 2:
      var t1, t3, vertex;
      state0 = 0;
      this._vertexCount = $.add(t1, 1);
      return vertex;
  }
},
 getNextFace3InPool$0: function() {
  var t1, t3, t4, face;
  t1 = this._face3Count;
  if (typeof t1 !== 'number')
    return this.getNextFace3InPool$0$bailout(1, t1);
  t3 = this._face3Pool;
  t4 = t3.length;
  if (t1 < t4) {
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t4)
      throw $.ioore(t1);
    face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace3$();
  } else {
    face = $.RenderableFace3$();
    t3.push(face);
  }
  t1 = this._face3Count;
  if (typeof t1 !== 'number')
    return this.getNextFace3InPool$0$bailout(2, t1, face);
  this._face3Count = t1 + 1;
  return face;
},
 getNextFace3InPool$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      face = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._face3Count;
    case 1:
      state0 = 0;
      t3 = this._face3Pool;
      if ($.ltB(t1, t3.length)) {
        t1 = this._face3Count;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= t3.length)
          throw $.ioore(t1);
        face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace3$();
      } else {
        face = $.RenderableFace3$();
        t3.push(face);
      }
      t1 = this._face3Count;
    case 2:
      var t1, t3, face;
      state0 = 0;
      this._face3Count = $.add(t1, 1);
      return face;
  }
},
 getNextFace4InPool$0: function() {
  var t1, t3, t4, face;
  t1 = this._face4Count;
  if (typeof t1 !== 'number')
    return this.getNextFace4InPool$0$bailout(1, t1);
  t3 = this._face4Pool;
  t4 = t3.length;
  if (t1 < t4) {
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t4)
      throw $.ioore(t1);
    face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace4$();
  } else {
    face = $.RenderableFace4$();
    t3.push(face);
  }
  t1 = this._face4Count;
  if (typeof t1 !== 'number')
    return this.getNextFace4InPool$0$bailout(2, t1, face);
  this._face4Count = t1 + 1;
  return face;
},
 getNextFace4InPool$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      face = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._face4Count;
    case 1:
      state0 = 0;
      t3 = this._face4Pool;
      if ($.ltB(t1, t3.length)) {
        t1 = this._face4Count;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= t3.length)
          throw $.ioore(t1);
        face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace4$();
      } else {
        face = $.RenderableFace4$();
        t3.push(face);
      }
      t1 = this._face4Count;
    case 2:
      var t1, t3, face;
      state0 = 0;
      this._face4Count = $.add(t1, 1);
      return face;
  }
},
 getNextLineInPool$0: function() {
  var t1, t3, t4, line;
  t1 = this._lineCount;
  if (typeof t1 !== 'number')
    return this.getNextLineInPool$0$bailout(1, t1);
  t3 = this._linePool;
  t4 = t3.length;
  if (t1 < t4) {
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t4)
      throw $.ioore(t1);
    line = !(t3[t1] == null) ? t3[t1] : $.RenderableLine$();
  } else {
    line = $.RenderableLine$();
    t3.push(line);
  }
  t1 = this._lineCount;
  if (typeof t1 !== 'number')
    return this.getNextLineInPool$0$bailout(2, t1, line);
  this._lineCount = t1 + 1;
  return line;
},
 getNextLineInPool$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      line = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._lineCount;
    case 1:
      state0 = 0;
      t3 = this._linePool;
      if ($.ltB(t1, t3.length)) {
        t1 = this._lineCount;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= t3.length)
          throw $.ioore(t1);
        line = !(t3[t1] == null) ? t3[t1] : $.RenderableLine$();
      } else {
        line = $.RenderableLine$();
        t3.push(line);
      }
      t1 = this._lineCount;
    case 2:
      var t1, t3, line;
      state0 = 0;
      this._lineCount = $.add(t1, 1);
      return line;
  }
},
 getNextParticleInPool$0: function() {
  var t1, t2, particle;
  t1 = this._particleCount;
  t2 = this._particlePool;
  if ($.ltB(t1, t2.length)) {
    t1 = this._particleCount;
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= t2.length)
      throw $.ioore(t1);
    particle = !(t2[t1] == null) ? t2[t1] : $.RenderableParticle$();
  } else {
    particle = $.RenderableParticle$();
    t2.push(particle);
  }
  this._particleCount = $.add(this._particleCount, 1);
  return particle;
},
 painterSort$2: function(a, b) {
  return $.compareTo(b.get$z(), a.get$z());
},
 get$painterSort: function() { return new $.BoundClosure2(this, 'painterSort$2'); },
 clipLine$2: function(s1, s2) {
  var t1, t3, bc1near, t5, bc2near, t7, bc1far, t9, bc2far, t2, alpha1, alpha2;
  t1 = s1.get$z();
  if (typeof t1 !== 'number')
    return this.clipLine$2$bailout(1, s1, s2, t1);
  t3 = s1.get$w();
  if (typeof t3 !== 'number')
    return this.clipLine$2$bailout(2, s1, s2, t1, t3);
  bc1near = t1 + t3;
  t3 = s2.get$z();
  if (typeof t3 !== 'number')
    return this.clipLine$2$bailout(3, s1, s2, bc1near, t3);
  t5 = s2.get$w();
  if (typeof t5 !== 'number')
    return this.clipLine$2$bailout(4, s1, s2, bc1near, t3, t5);
  bc2near = t3 + t5;
  t5 = s1.get$z();
  if (typeof t5 !== 'number')
    return this.clipLine$2$bailout(5, s1, s2, bc1near, bc2near, t5);
  t5 = -t5;
  t7 = s1.get$w();
  if (typeof t7 !== 'number')
    return this.clipLine$2$bailout(6, s1, s2, t7, t5, bc1near, bc2near);
  bc1far = t5 + t7;
  t7 = s2.get$z();
  if (typeof t7 !== 'number')
    return this.clipLine$2$bailout(7, s1, s2, bc1far, t7, bc1near, bc2near);
  t7 = -t7;
  t9 = s2.get$w();
  if (typeof t9 !== 'number')
    return this.clipLine$2$bailout(8, s1, s2, bc1far, t7, t9, bc1near, bc2near);
  bc2far = t7 + t9;
  if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0)
    return true;
  else {
    t1 = bc1near < 0;
    if (!(t1 && bc2near < 0))
      t2 = bc1far < 0 && bc2far < 0;
    else
      t2 = true;
    if (t2)
      return false;
    else {
      if (t1) {
        alpha1 = $.max(0, bc1near / (bc1near - bc2near));
        alpha2 = 1;
      } else {
        alpha2 = bc2near < 0 ? $.min(1, bc1near / (bc1near - bc2near)) : 1;
        alpha1 = 0;
      }
      if (bc1far < 0)
        alpha1 = $.max(alpha1, bc1far / (bc1far - bc2far));
      else if (bc2far < 0)
        alpha2 = $.min(alpha2, bc1far / (bc1far - bc2far));
      if (alpha2 < alpha1)
        return false;
      else {
        s1.lerpSelf$2(s2, alpha1);
        s2.lerpSelf$2(s1, 1 - alpha2);
        return true;
      }
    }
  }
},
 clipLine$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t1 = env2;
      s2 = env1;
      s1 = env0;
      break;
    case 2:
      t3 = env3;
      t1 = env2;
      s2 = env1;
      s1 = env0;
      break;
    case 3:
      t3 = env3;
      bc1near = env2;
      s2 = env1;
      s1 = env0;
      break;
    case 4:
      t5 = env4;
      t3 = env3;
      bc1near = env2;
      s2 = env1;
      s1 = env0;
      break;
    case 5:
      t5 = env4;
      bc2near = env3;
      bc1near = env2;
      s2 = env1;
      s1 = env0;
      break;
    case 6:
      bc2near = env5;
      bc1near = env4;
      t5 = env3;
      t7 = env2;
      s2 = env1;
      s1 = env0;
      break;
    case 7:
      bc2near = env5;
      bc1near = env4;
      t7 = env3;
      bc1far = env2;
      s2 = env1;
      s1 = env0;
      break;
    case 8:
      bc2near = env6;
      bc1near = env5;
      t9 = env4;
      t7 = env3;
      bc1far = env2;
      s2 = env1;
      s1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = s1.get$z();
    case 1:
      state0 = 0;
      t3 = s1.get$w();
    case 2:
      state0 = 0;
      bc1near = $.add(t1, t3);
      t3 = s2.get$z();
    case 3:
      state0 = 0;
      t5 = s2.get$w();
    case 4:
      state0 = 0;
      bc2near = $.add(t3, t5);
      t5 = s1.get$z();
    case 5:
      state0 = 0;
      t5 = $.neg(t5);
      t7 = s1.get$w();
    case 6:
      state0 = 0;
      bc1far = $.add(t5, t7);
      t7 = s2.get$z();
    case 7:
      state0 = 0;
      t7 = $.neg(t7);
      t9 = s2.get$w();
    case 8:
      var t1, s2, s1, t3, bc1near, t5, bc2near, t7, bc1far, t9, bc2far, alpha1, alpha2;
      state0 = 0;
      bc2far = $.add(t7, t9);
      if ($.geB(bc1near, 0) && $.geB(bc2near, 0) && $.geB(bc1far, 0) && $.geB(bc2far, 0))
        return true;
      else {
        if (!($.ltB(bc1near, 0) && $.ltB(bc2near, 0)))
          t1 = $.ltB(bc1far, 0) && $.ltB(bc2far, 0);
        else
          t1 = true;
        if (t1)
          return false;
        else {
          if ($.ltB(bc1near, 0)) {
            alpha1 = $.max(0, $.div(bc1near, $.sub(bc1near, bc2near)));
            alpha2 = 1;
          } else {
            alpha2 = $.ltB(bc2near, 0) ? $.min(1, $.div(bc1near, $.sub(bc1near, bc2near))) : 1;
            alpha1 = 0;
          }
          if ($.ltB(bc1far, 0))
            alpha1 = $.max(alpha1, $.div(bc1far, $.sub(bc1far, bc2far)));
          else if ($.ltB(bc2far, 0))
            alpha2 = $.min(alpha2, $.div(bc1far, $.sub(bc1far, bc2far)));
          if (alpha2 < alpha1)
            return false;
          else {
            s1.lerpSelf$2(s2, alpha1);
            s2.lerpSelf$2(s1, 1 - alpha2);
            return true;
          }
        }
      }
  }
}
};

$$.ProjectorRenderData = {"": ["objects=", "sprites=", "lights=", "elements="],
 "super": "Object"
};

$$.Ray = {"": ["origin", "direction", "near?", "far?", "_v0", "_v1", "_v2", "precision"],
 "super": "Object",
 _distanceFromIntersection$3: function(origin, direction, position) {
  var v0, v1, v2, dot;
  v0 = this._v0;
  v1 = this._v1;
  v2 = this._v2;
  v0.sub$2(position, origin);
  dot = v0.dot$1(direction);
  return position.distanceTo$1(v1.add$2(origin, v2.copy$1(direction).multiplyScalar$1(dot)));
},
 _pointInFace3$4: function(p, a, b, c) {
  var v0, v1, v2, dot00, dot01, dot02, dot11, dot12, invDenom, u, v;
  v0 = this._v0;
  v1 = this._v1;
  v2 = this._v2;
  v0.sub$2(c, a);
  v1.sub$2(b, a);
  v2.sub$2(p, a);
  dot00 = v0.dot$1(v0);
  if (typeof dot00 !== 'number')
    return this._pointInFace3$4$bailout(1, v1, v2, dot00, v0);
  dot01 = v0.dot$1(v1);
  if (typeof dot01 !== 'number')
    return this._pointInFace3$4$bailout(2, v1, v2, dot00, dot01, v0);
  dot02 = v0.dot$1(v2);
  if (typeof dot02 !== 'number')
    return this._pointInFace3$4$bailout(3, v1, v2, dot00, dot01, dot02);
  dot11 = v1.dot$1(v1);
  if (typeof dot11 !== 'number')
    return this._pointInFace3$4$bailout(4, dot11, v1, v2, dot00, dot01, dot02);
  dot12 = v1.dot$1(v2);
  if (typeof dot12 !== 'number')
    return this._pointInFace3$4$bailout(5, dot11, dot12, dot00, dot01, dot02);
  invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
  u = (dot11 * dot02 - dot01 * dot12) * invDenom;
  v = (dot00 * dot12 - dot01 * dot02) * invDenom;
  return u >= 0 && v >= 0 && u + v < 1;
},
 _pointInFace3$4$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      v0 = env3;
      dot00 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 2:
      v0 = env4;
      dot01 = env3;
      dot00 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 3:
      dot02 = env4;
      dot01 = env3;
      dot00 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 4:
      dot02 = env5;
      dot01 = env4;
      dot00 = env3;
      v2 = env2;
      v1 = env1;
      dot11 = env0;
      break;
    case 5:
      dot02 = env4;
      dot01 = env3;
      dot00 = env2;
      dot12 = env1;
      dot11 = env0;
      break;
  }
  switch (state0) {
    case 0:
      v0 = this._v0;
      v1 = this._v1;
      v2 = this._v2;
      v0.sub$2(c, a);
      v1.sub$2(b, a);
      v2.sub$2(p, a);
      dot00 = v0.dot$1(v0);
    case 1:
      state0 = 0;
      dot01 = v0.dot$1(v1);
    case 2:
      state0 = 0;
      dot02 = v0.dot$1(v2);
    case 3:
      state0 = 0;
      dot11 = v1.dot$1(v1);
    case 4:
      state0 = 0;
      dot12 = v1.dot$1(v2);
    case 5:
      var v0, v1, v2, dot00, dot01, dot02, dot11, dot12, t6, invDenom, u, v;
      state0 = 0;
      t6 = $.sub($.mul(dot00, dot11), $.mul(dot01, dot01));
      if (typeof t6 !== 'number')
        throw $.iae(t6);
      invDenom = 1 / t6;
      u = $.mul($.sub($.mul(dot11, dot02), $.mul(dot01, dot12)), invDenom);
      v = $.mul($.sub($.mul(dot00, dot12), $.mul(dot01, dot02)), invDenom);
      return $.geB(u, 0) && $.geB(v, 0) && $.ltB($.add(u, v), 1);
  }
},
 intersectObject$2: function(object, recursive) {
  var a, b, c, d, originCopy, directionCopy, vector, normal, intersectPoint, intersects, distance, t1, t2, objMatrix, scale, geometry, vertices, geometryMaterials, t3, isFaceMaterial, side, t4, fl, dot, scalar, objMatrix0, f, intersect, face, material, vector0, normal0, a0, b0, c0, t5, d0;
  a = $.Vector3$(0, 0, 0);
  b = $.Vector3$(0, 0, 0);
  c = $.Vector3$(0, 0, 0);
  d = $.Vector3$(0, 0, 0);
  originCopy = $.Vector3$(0, 0, 0);
  directionCopy = $.Vector3$(0, 0, 0);
  vector = $.Vector3$(0, 0, 0);
  normal = $.Vector3$(0, 0, 0);
  intersectPoint = $.Vector3$(0, 0, 0);
  intersects = [];
  $.get$length(object.get$children());
  if (recursive === true)
    $.forEach(object.get$children(), new $.Ray_intersectObject_anon(intersects, this));
  if (typeof object === 'object' && object !== null && !!object.is$Particle) {
    distance = this._distanceFromIntersection$3(this.origin, this.direction, object.matrixWorld.getPosition$0());
    if ($.gtB(distance, object.scale.x))
      return [];
    intersects.push($.Intersect$(distance, null, object, object.position));
  } else if (typeof object === 'object' && object !== null && !!object.is$Mesh) {
    t1 = this.origin;
    t2 = this.direction;
    objMatrix = object.matrixWorld;
    distance = this._distanceFromIntersection$3(t1, t2, objMatrix.getPosition$0());
    scale = $.Frustum___v1().setValues$3(objMatrix.getColumnX$0().length$0(), objMatrix.getColumnY$0().length$0(), objMatrix.getColumnZ$0().length$0());
    if ($.gtB(distance, $.mul(object.geometry.get$boundingSphere().get$radius(), $.max(scale.get$x(), $.max(scale.get$y(), scale.get$z())))))
      return intersects;
    geometry = object.geometry;
    vertices = geometry.get$vertices();
    if (typeof vertices !== 'string' && (typeof vertices !== 'object' || vertices === null || vertices.constructor !== Array && !vertices.is$JavaScriptIndexingBehavior()))
      return this.intersectObject$2$bailout(1, object, a, vertices, b, c, d, originCopy, objMatrix, directionCopy, vector, geometry, normal, intersectPoint, intersects);
    geometryMaterials = geometry.get$materials();
    if (typeof geometryMaterials !== 'string' && (typeof geometryMaterials !== 'object' || geometryMaterials === null || geometryMaterials.constructor !== Array && !geometryMaterials.is$JavaScriptIndexingBehavior()))
      return this.intersectObject$2$bailout(2, object, a, vertices, b, geometryMaterials, c, d, originCopy, objMatrix, directionCopy, vector, geometry, normal, intersectPoint, intersects);
    t3 = object.material;
    isFaceMaterial = typeof t3 === 'object' && t3 !== null && !!t3.is$MeshFaceMaterial;
    side = object.material.get$side();
    if (typeof side !== 'number')
      return this.intersectObject$2$bailout(3, object, a, vertices, b, geometryMaterials, c, isFaceMaterial, d, side, originCopy, objMatrix, directionCopy, vector, geometry, normal, intersectPoint, intersects);
    t4 = object.matrixRotationWorld;
    t4.extractRotation$1(objMatrix);
    fl = $.get$length(geometry.get$faces());
    if (typeof fl !== 'number')
      return this.intersectObject$2$bailout(4, object, a, vertices, b, geometryMaterials, c, isFaceMaterial, d, side, originCopy, objMatrix, directionCopy, vector, fl, geometry, normal, intersectPoint, intersects, t4);
    for (dot = null, scalar = null, objMatrix0 = null, f = 0, intersect = null; f < fl; ++f) {
      face = $.index(geometry.get$faces(), f);
      if (isFaceMaterial) {
        t1 = face.get$materialIndex();
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= geometryMaterials.length)
          throw $.ioore(t1);
        material = geometryMaterials[t1];
      } else
        material = object.material;
      if (material == null)
        continue;
      side = material.get$side();
      originCopy.copy$1(this.origin);
      directionCopy.copy$1(this.direction);
      vector0 = objMatrix.multiplyVector3$1(vector.copy$1(face.get$centroid())).subSelf$1(originCopy);
      normal0 = t4.multiplyVector3$1(normal.copy$1(face.get$normal()));
      dot = directionCopy.dot$1(normal0);
      if ($.ltB($.abs(dot), 0.0001)) {
        normal = normal0;
        vector = vector0;
        objMatrix0 = objMatrix;
        continue;
      }
      scalar = $.div(normal0.dot$1(vector0), dot);
      if ($.ltB(scalar, 0)) {
        normal = normal0;
        vector = vector0;
        objMatrix0 = objMatrix;
        continue;
      }
      if (!$.eqB(side, 2))
        t1 = ($.eqB(side, 0) ? $.lt(dot, 0) : $.gt(dot, 0)) === true;
      else
        t1 = true;
      if (t1) {
        intersectPoint.add$2(originCopy, directionCopy.multiplyScalar$1(scalar));
        if (typeof face === 'object' && face !== null && !!face.is$Face3) {
          t1 = face.a;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= vertices.length)
            throw $.ioore(t1);
          a0 = objMatrix.multiplyVector3$1(a.copy$1(vertices[t1]));
          t2 = face.b;
          if (t2 !== (t2 | 0))
            throw $.iae(t2);
          if (t2 < 0 || t2 >= vertices.length)
            throw $.ioore(t2);
          b0 = objMatrix.multiplyVector3$1(b.copy$1(vertices[t2]));
          t3 = face.c;
          if (t3 !== (t3 | 0))
            throw $.iae(t3);
          if (t3 < 0 || t3 >= vertices.length)
            throw $.ioore(t3);
          c0 = objMatrix.multiplyVector3$1(c.copy$1(vertices[t3]));
          if (this._pointInFace3$4(intersectPoint, a0, b0, c0) === true) {
            intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), face, object, intersectPoint.clone$0());
            intersects.push(intersect);
          }
          c = c0;
          b = b0;
          a = a0;
        } else if (typeof face === 'object' && face !== null && !!face.is$Face4) {
          t1 = face.a;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= vertices.length)
            throw $.ioore(t1);
          a0 = objMatrix.multiplyVector3$1(a.copy$1(vertices[t1]));
          t2 = face.b;
          if (t2 !== (t2 | 0))
            throw $.iae(t2);
          if (t2 < 0 || t2 >= vertices.length)
            throw $.ioore(t2);
          b0 = objMatrix.multiplyVector3$1(b.copy$1(vertices[t2]));
          t3 = face.c;
          if (t3 !== (t3 | 0))
            throw $.iae(t3);
          if (t3 < 0 || t3 >= vertices.length)
            throw $.ioore(t3);
          c0 = objMatrix.multiplyVector3$1(c.copy$1(vertices[t3]));
          t5 = face.d;
          if (t5 !== (t5 | 0))
            throw $.iae(t5);
          if (t5 < 0 || t5 >= vertices.length)
            throw $.ioore(t5);
          d0 = objMatrix.multiplyVector3$1(d.copy$1(vertices[t5]));
          if (this._pointInFace3$4(intersectPoint, a0, b0, d0) === true || this._pointInFace3$4(intersectPoint, b0, c0, d0) === true) {
            intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), face, object, intersectPoint.clone$0());
            intersects.push(intersect);
          }
          d = d0;
          c = c0;
          b = b0;
          a = a0;
        }
      }
      normal = normal0;
      vector = vector0;
      objMatrix0 = objMatrix;
    }
  }
  return intersects;
},
 intersectObject$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18) {
  switch (state0) {
    case 1:
      intersects = env13;
      intersectPoint = env12;
      normal = env11;
      geometry = env10;
      vector = env9;
      directionCopy = env8;
      objMatrix = env7;
      originCopy = env6;
      d = env5;
      c = env4;
      b = env3;
      vertices = env2;
      a = env1;
      object = env0;
      break;
    case 2:
      intersects = env14;
      intersectPoint = env13;
      normal = env12;
      geometry = env11;
      vector = env10;
      directionCopy = env9;
      objMatrix = env8;
      originCopy = env7;
      d = env6;
      c = env5;
      geometryMaterials = env4;
      b = env3;
      vertices = env2;
      a = env1;
      object = env0;
      break;
    case 3:
      intersects = env16;
      intersectPoint = env15;
      normal = env14;
      geometry = env13;
      vector = env12;
      directionCopy = env11;
      objMatrix = env10;
      originCopy = env9;
      side = env8;
      d = env7;
      isFaceMaterial = env6;
      c = env5;
      geometryMaterials = env4;
      b = env3;
      vertices = env2;
      a = env1;
      object = env0;
      break;
    case 4:
      t4 = env18;
      intersects = env17;
      intersectPoint = env16;
      normal = env15;
      geometry = env14;
      fl = env13;
      vector = env12;
      directionCopy = env11;
      objMatrix = env10;
      originCopy = env9;
      side = env8;
      d = env7;
      isFaceMaterial = env6;
      c = env5;
      geometryMaterials = env4;
      b = env3;
      vertices = env2;
      a = env1;
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
      a = $.Vector3$(0, 0, 0);
      b = $.Vector3$(0, 0, 0);
      c = $.Vector3$(0, 0, 0);
      d = $.Vector3$(0, 0, 0);
      originCopy = $.Vector3$(0, 0, 0);
      directionCopy = $.Vector3$(0, 0, 0);
      vector = $.Vector3$(0, 0, 0);
      normal = $.Vector3$(0, 0, 0);
      intersectPoint = $.Vector3$(0, 0, 0);
      intersects = [];
      $.get$length(object.get$children());
      if (recursive === true)
        $.forEach(object.get$children(), new $.Ray_intersectObject_anon(intersects, this));
    default:
      var a, b, c, d, originCopy, directionCopy, vector, normal, intersectPoint, intersects, distance, t1, t2, objMatrix, scale, geometry, vertices, object, geometryMaterials, t3, isFaceMaterial, side, t4, fl, dot, scalar, objMatrix0, f, intersect, face, material, vector0, normal0, a0, b0, c0, d0;
      if (state0 === 0 && typeof object === 'object' && object !== null && !!object.is$Particle) {
        distance = this._distanceFromIntersection$3(this.origin, this.direction, object.matrixWorld.getPosition$0());
        if ($.gtB(distance, object.scale.x))
          return [];
        intersects.push($.Intersect$(distance, null, object, object.position));
      } else
        switch (state0) {
          case 0:
          default:
            if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && !!object.is$Mesh)
              switch (state0) {
                case 0:
                  t1 = this.origin;
                  t2 = this.direction;
                  objMatrix = object.matrixWorld;
                  distance = this._distanceFromIntersection$3(t1, t2, objMatrix.getPosition$0());
                  scale = $.Frustum___v1().setValues$3(objMatrix.getColumnX$0().length$0(), objMatrix.getColumnY$0().length$0(), objMatrix.getColumnZ$0().length$0());
                  if ($.gtB(distance, $.mul(object.geometry.get$boundingSphere().get$radius(), $.max(scale.get$x(), $.max(scale.get$y(), scale.get$z())))))
                    return intersects;
                  geometry = object.geometry;
                  vertices = geometry.get$vertices();
                case 1:
                  state0 = 0;
                  geometryMaterials = geometry.get$materials();
                case 2:
                  state0 = 0;
                  t3 = object.material;
                  isFaceMaterial = typeof t3 === 'object' && t3 !== null && !!t3.is$MeshFaceMaterial;
                  side = object.material.get$side();
                case 3:
                  state0 = 0;
                  t4 = object.matrixRotationWorld;
                  t4.extractRotation$1(objMatrix);
                  fl = $.get$length(geometry.get$faces());
                case 4:
                  state0 = 0;
                  for (dot = null, scalar = null, objMatrix0 = null, f = 0, intersect = null; $.ltB(f, fl); ++f) {
                    face = $.index(geometry.get$faces(), f);
                    material = isFaceMaterial ? $.index(geometryMaterials, face.get$materialIndex()) : object.material;
                    if (material == null)
                      continue;
                    side = material.get$side();
                    originCopy.copy$1(this.origin);
                    directionCopy.copy$1(this.direction);
                    vector0 = objMatrix.multiplyVector3$1(vector.copy$1(face.get$centroid())).subSelf$1(originCopy);
                    normal0 = t4.multiplyVector3$1(normal.copy$1(face.get$normal()));
                    dot = directionCopy.dot$1(normal0);
                    if ($.ltB($.abs(dot), 0.0001)) {
                      normal = normal0;
                      vector = vector0;
                      objMatrix0 = objMatrix;
                      continue;
                    }
                    scalar = $.div(normal0.dot$1(vector0), dot);
                    if ($.ltB(scalar, 0)) {
                      normal = normal0;
                      vector = vector0;
                      objMatrix0 = objMatrix;
                      continue;
                    }
                    if (!$.eqB(side, 2))
                      t1 = ($.eqB(side, 0) ? $.lt(dot, 0) : $.gt(dot, 0)) === true;
                    else
                      t1 = true;
                    if (t1) {
                      intersectPoint.add$2(originCopy, directionCopy.multiplyScalar$1(scalar));
                      if (typeof face === 'object' && face !== null && !!face.is$Face3) {
                        a0 = objMatrix.multiplyVector3$1(a.copy$1($.index(vertices, face.a)));
                        b0 = objMatrix.multiplyVector3$1(b.copy$1($.index(vertices, face.b)));
                        c0 = objMatrix.multiplyVector3$1(c.copy$1($.index(vertices, face.c)));
                        if (this._pointInFace3$4(intersectPoint, a0, b0, c0) === true) {
                          intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), face, object, intersectPoint.clone$0());
                          intersects.push(intersect);
                        }
                        c = c0;
                        b = b0;
                        a = a0;
                      } else if (typeof face === 'object' && face !== null && !!face.is$Face4) {
                        a0 = objMatrix.multiplyVector3$1(a.copy$1($.index(vertices, face.a)));
                        b0 = objMatrix.multiplyVector3$1(b.copy$1($.index(vertices, face.b)));
                        c0 = objMatrix.multiplyVector3$1(c.copy$1($.index(vertices, face.c)));
                        d0 = objMatrix.multiplyVector3$1(d.copy$1($.index(vertices, face.d)));
                        if (this._pointInFace3$4(intersectPoint, a0, b0, d0) === true || this._pointInFace3$4(intersectPoint, b0, c0, d0) === true) {
                          intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), face, object, intersectPoint.clone$0());
                          intersects.push(intersect);
                        }
                        d = d0;
                        c = c0;
                        b = b0;
                        a = a0;
                      }
                    }
                    normal = normal0;
                    vector = vector0;
                    objMatrix0 = objMatrix;
                  }
              }
        }
      return intersects;
  }
},
 intersectObject$1: function(object) {
  return this.intersectObject$2(object,false)
},
 intersectObjects$1: function(objects) {
  var intersects;
  $.get$length(objects);
  intersects = [];
  $.forEach(objects, new $.Ray_intersectObjects_anon(this, intersects));
  $.sort$1(intersects, new $.Ray_intersectObjects_anon0());
  return intersects;
},
 Ray$4: function(origin, direction, near, far) {
  if (this.origin == null)
    this.origin = $.Vector3$(0, 0, 0);
  if (this.direction == null)
    this.direction = $.Vector3$(0, 0, 0);
}
};

$$.Intersect = {"": ["distance=", "point", "face", "object="],
 "super": "Object",
 distance$3: function(arg0, arg1, arg2) { return this.distance.call$3(arg0, arg1, arg2); }
};

$$.Vector2 = {"": ["x=", "y="],
 "super": "Object",
 copy$1: function(v) {
  this.x = v.get$x();
  this.y = v.get$y();
  return this;
},
 add$2: function(v1, v2) {
  this.x = $.add(v1.get$x(), v2.get$x());
  this.y = $.add(v1.get$y(), v2.get$y());
  return this;
},
 sub$2: function(v1, v2) {
  this.x = $.sub(v1.get$x(), v2.get$x());
  this.y = $.sub(v1.get$y(), v2.get$y());
  return this;
},
 subSelf$1: function(v) {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.subSelf$1$bailout(1, v, t1);
  t3 = v.x;
  if (typeof t3 !== 'number')
    return this.subSelf$1$bailout(2, v, t3, t1);
  this.x = t1 - t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.subSelf$1$bailout(3, v, t5);
  t7 = v.y;
  if (typeof t7 !== 'number')
    return this.subSelf$1$bailout(4, t5, t7);
  this.y = t5 - t7;
  return this;
},
 subSelf$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      v = env0;
      break;
    case 3:
      t5 = env1;
      v = env0;
      break;
    case 4:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.x;
    case 2:
      state0 = 0;
      this.x = $.sub(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = v.y;
    case 4:
      var t1, v, t3, t5, t7;
      state0 = 0;
      this.y = $.sub(t5, t7);
      return this;
  }
},
 multiplyScalar$1: function(s) {
  var t1, t3;
  if (typeof s !== 'number')
    return this.multiplyScalar$1$bailout(1, s);
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.multiplyScalar$1$bailout(2, s, t1);
  this.x = t1 * s;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.multiplyScalar$1$bailout(3, s, t3);
  this.y = t3 * s;
  return this;
},
 multiplyScalar$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      s = env0;
      break;
    case 2:
      t1 = env1;
      s = env0;
      break;
    case 3:
      t3 = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.x;
    case 2:
      state0 = 0;
      this.x = $.mul(t1, s);
      t3 = this.y;
    case 3:
      var s, t1, t3;
      state0 = 0;
      this.y = $.mul(t3, s);
      return this;
  }
},
 divideScalar$1: function(s) {
  var t1, t3;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.divideScalar$1$bailout(1, s, t1);
  this.x = t1 / s;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.divideScalar$1$bailout(2, s, t3);
  this.y = t3 / s;
  return this;
},
 divideScalar$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      s = env0;
      break;
    case 2:
      t3 = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      this.x = $.div(t1, s);
      t3 = this.y;
    case 2:
      var t1, s, t3;
      state0 = 0;
      this.y = $.div(t3, s);
      return this;
  }
},
 negate$0: function() {
  this.x = $.mul(this.x, -1);
  this.y = $.mul(this.y, -1);
  return this;
},
 dot$1: function(v) {
  var t1, t3, t6;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.dot$1$bailout(1, v, t1);
  t3 = v.get$x();
  if (typeof t3 !== 'number')
    return this.dot$1$bailout(2, v, t3, t1);
  t3 = t1 * t3;
  t1 = this.y;
  if (typeof t1 !== 'number')
    return this.dot$1$bailout(3, t1, v, t3);
  t6 = v.get$y();
  if (typeof t6 !== 'number')
    return this.dot$1$bailout(4, t1, t6, t3);
  return t3 + t1 * t6;
},
 dot$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      v = env0;
      break;
    case 3:
      t3 = env2;
      v = env1;
      t1 = env0;
      break;
    case 4:
      t3 = env2;
      t6 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.get$x();
    case 2:
      state0 = 0;
      t3 = $.mul(t1, t3);
      t1 = this.y;
    case 3:
      state0 = 0;
      t6 = v.get$y();
    case 4:
      var t1, v, t3, t6;
      state0 = 0;
      return $.add(t3, $.mul(t1, t6));
  }
},
 lengthSq$0: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.add(t1, $.mul(t2, t2));
},
 length$0: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 get$length: function() { return new $.BoundClosure(this, 'length$0'); },
 normalize$0: function() {
  var t1, t3;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.normalize$0$bailout(1, t1);
  t1 *= t1;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.normalize$0$bailout(2, t3, t1);
  return this.divideScalar$1($.sqrt(t1 + t3 * t3));
},
 normalize$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t1 = $.mul(t1, t1);
      t3 = this.y;
    case 2:
      var t1, t3;
      state0 = 0;
      return this.divideScalar$1($.sqrt($.add(t1, $.mul(t3, t3))));
  }
},
 distanceTo$1: function(v) {
  var t1, t3, dx, t5, dy;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.distanceTo$1$bailout(1, v, t1);
  t3 = v.get$x();
  if (typeof t3 !== 'number')
    return this.distanceTo$1$bailout(2, v, t1, t3);
  dx = t1 - t3;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.distanceTo$1$bailout(3, dx, v, t3);
  t5 = v.get$y();
  if (typeof t5 !== 'number')
    return this.distanceTo$1$bailout(4, dx, t5, t3);
  dy = t3 - t5;
  return $.sqrt(dx * dx + dy * dy);
},
 distanceTo$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      v = env0;
      break;
    case 3:
      t3 = env2;
      v = env1;
      dx = env0;
      break;
    case 4:
      t3 = env2;
      t5 = env1;
      dx = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.get$x();
    case 2:
      state0 = 0;
      dx = $.sub(t1, t3);
      t3 = this.y;
    case 3:
      state0 = 0;
      t5 = v.get$y();
    case 4:
      var t1, v, t3, dx, t5, dy;
      state0 = 0;
      dy = $.sub(t3, t5);
      return $.sqrt($.add($.mul(dx, dx), $.mul(dy, dy)));
  }
},
 lerpSelf$2: function(v, alpha) {
  this.x = $.add(this.x, $.mul($.sub(v.get$x(), this.x), alpha));
  this.y = $.add(this.y, $.mul($.sub(v.get$y(), this.y), alpha));
  return this;
},
 isZero$0: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.lt($.add(t1, $.mul(t2, t2)), 0.0001);
},
 clone$0: function() {
  return $.Vector2$(this.x, this.y);
}
};

$$.UV = {"": ["u?", "v?"],
 "super": "Object",
 copy$1: function(uv) {
  this.u = uv.get$u();
  this.v = uv.get$v();
  return this;
},
 lerpSelf$2: function(uv, alpha) {
  var t1, t2;
  t1 = this.u;
  this.u = $.add(t1, $.mul($.sub(uv.get$u(), t1), alpha));
  t2 = this.v;
  this.v = $.add(t2, $.mul($.sub(uv.get$v(), t2), alpha));
  return this;
},
 clone$0: function() {
  return $.UV$(this.u, this.v);
}
};

$$.Rectangle = {"": ["_left", "_top", "_right", "_bottom", "_width", "_height", "_isEmpty"],
 "super": "Object",
 getX$0: function() {
  return this._left;
},
 getY$0: function() {
  return this._top;
},
 getWidth$0: function() {
  return this._width;
},
 getHeight$0: function() {
  return this._height;
},
 getLeft$0: function() {
  return this._left;
},
 getTop$0: function() {
  return this._top;
},
 getRight$0: function() {
  return this._right;
},
 getBottom$0: function() {
  return this._bottom;
},
 setValues$4: function(left, top$, right, bottom) {
  this._isEmpty = false;
  this._left = left;
  this._top = top$;
  this._right = right;
  this._bottom = bottom;
  this._width = $.sub(this._right, this._left);
  this._height = $.sub(this._bottom, this._top);
},
 addPoint$2: function(x, y) {
  var t1, t3, t5, t7;
  if (typeof x !== 'number')
    return this.addPoint$2$bailout(1, x, y);
  if (typeof y !== 'number')
    return this.addPoint$2$bailout(1, x, y);
  if (this._isEmpty) {
    this._isEmpty = false;
    this._left = x;
    this._top = y;
    this._right = x;
    this._bottom = y;
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.addPoint$2$bailout(2, t1);
    t3 = this._left;
    if (typeof t3 !== 'number')
      return this.addPoint$2$bailout(3, t1, t3);
    this._width = t1 - t3;
    t5 = this._bottom;
    if (typeof t5 !== 'number')
      return this.addPoint$2$bailout(4, t5);
    t7 = this._top;
    if (typeof t7 !== 'number')
      return this.addPoint$2$bailout(5, t5, t7);
    this._height = t5 - t7;
  } else {
    t1 = this._left;
    if (typeof t1 !== 'number')
      return this.addPoint$2$bailout(6, x, y, t1);
    if (t1 < x)
      ;
    else
      t1 = x;
    this._left = t1;
    t1 = this._top;
    if (typeof t1 !== 'number')
      return this.addPoint$2$bailout(8, x, y, t1);
    if (t1 < y)
      ;
    else
      t1 = y;
    this._top = t1;
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.addPoint$2$bailout(10, x, y, t1);
    if (t1 > x)
      ;
    else
      t1 = x;
    this._right = t1;
    t1 = this._bottom;
    if (typeof t1 !== 'number')
      return this.addPoint$2$bailout(12, y, t1);
    if (t1 > y)
      ;
    else
      t1 = y;
    this._bottom = t1;
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.addPoint$2$bailout(14, t1);
    t3 = this._left;
    if (typeof t3 !== 'number')
      return this.addPoint$2$bailout(15, t3, t1);
    this._width = t1 - t3;
    t5 = this._bottom;
    if (typeof t5 !== 'number')
      return this.addPoint$2$bailout(16, t5);
    t7 = this._top;
    if (typeof t7 !== 'number')
      return this.addPoint$2$bailout(17, t5, t7);
    this._height = t5 - t7;
  }
},
 addPoint$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      y = env1;
      x = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t3 = env1;
      t1 = env0;
      break;
    case 4:
      t5 = env0;
      break;
    case 5:
      t7 = env1;
      t5 = env0;
      break;
    case 6:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 7:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 8:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 9:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 10:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 11:
      t1 = env1;
      y = env0;
      break;
    case 12:
      t1 = env1;
      y = env0;
      break;
    case 13:
      t1 = env0;
      break;
    case 14:
      t1 = env0;
      break;
    case 15:
      t1 = env1;
      t3 = env0;
      break;
    case 16:
      t5 = env0;
      break;
    case 17:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    default:
      var y, x, t1, t3, t5, t7;
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && this._isEmpty)
        switch (state0) {
          case 0:
            this._isEmpty = false;
            this._left = x;
            this._top = y;
            this._right = x;
            this._bottom = y;
            t1 = this._right;
          case 2:
            state0 = 0;
            t3 = this._left;
          case 3:
            state0 = 0;
            this._width = $.sub(t1, t3);
            t5 = this._bottom;
          case 4:
            state0 = 0;
            t7 = this._top;
          case 5:
            state0 = 0;
            this._height = $.sub(t5, t7);
        }
      else
        switch (state0) {
          case 0:
            t1 = this._left;
          case 6:
            state0 = 0;
          case 7:
            if (state0 === 7 || state0 === 0 && $.ltB(t1, x))
              switch (state0) {
                case 0:
                  t1 = this._left;
                case 7:
                  state0 = 0;
              }
            else
              t1 = x;
            this._left = t1;
            t1 = this._top;
          case 8:
            state0 = 0;
          case 9:
            if (state0 === 9 || state0 === 0 && $.ltB(t1, y))
              switch (state0) {
                case 0:
                  t1 = this._top;
                case 9:
                  state0 = 0;
              }
            else
              t1 = y;
            this._top = t1;
            t1 = this._right;
          case 10:
            state0 = 0;
          case 11:
            if (state0 === 11 || state0 === 0 && $.gtB(t1, x))
              switch (state0) {
                case 0:
                  t1 = this._right;
                case 11:
                  state0 = 0;
              }
            else
              t1 = x;
            this._right = t1;
            t1 = this._bottom;
          case 12:
            state0 = 0;
          case 13:
            if (state0 === 13 || state0 === 0 && $.gtB(t1, y))
              switch (state0) {
                case 0:
                  t1 = this._bottom;
                case 13:
                  state0 = 0;
              }
            else
              t1 = y;
            this._bottom = t1;
            t1 = this._right;
          case 14:
            state0 = 0;
            t3 = this._left;
          case 15:
            state0 = 0;
            this._width = $.sub(t1, t3);
            t5 = this._bottom;
          case 16:
            state0 = 0;
            t7 = this._top;
          case 17:
            state0 = 0;
            this._height = $.sub(t5, t7);
        }
  }
},
 add3Points$6: function(x1, y1, x2, y2, x3, y3) {
  var t1, t3, t5, t7;
  if (typeof x1 !== 'number')
    return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
  if (typeof y1 !== 'number')
    return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
  if (typeof x2 !== 'number')
    return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
  if (typeof y2 !== 'number')
    return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
  if (typeof x3 !== 'number')
    return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
  if (typeof y3 !== 'number')
    return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
  if (this._isEmpty) {
    this._isEmpty = false;
    if (x1 < x2)
      if (x1 < x3)
        t1 = x1;
      else
        t1 = x3;
    else if (x2 < x3)
      t1 = x2;
    else
      t1 = x3;
    this._left = t1;
    if (y1 < y2)
      if (y1 < y3)
        t1 = y1;
      else
        t1 = y3;
    else if (y2 < y3)
      t1 = y2;
    else
      t1 = y3;
    this._top = t1;
    if (x1 > x2)
      if (x1 > x3)
        t1 = x1;
      else
        t1 = x3;
    else if (x2 > x3)
      t1 = x2;
    else
      t1 = x3;
    this._right = t1;
    if (y1 > y2)
      if (y1 > y3)
        t1 = y1;
      else
        t1 = y3;
    else if (y2 > y3)
      t1 = y2;
    else
      t1 = y3;
    this._bottom = t1;
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.add3Points$6$bailout(2, t1);
    t3 = this._left;
    if (typeof t3 !== 'number')
      return this.add3Points$6$bailout(3, t1, t3);
    this._width = t1 - t3;
    t5 = this._bottom;
    if (typeof t5 !== 'number')
      return this.add3Points$6$bailout(4, t5);
    t7 = this._top;
    if (typeof t7 !== 'number')
      return this.add3Points$6$bailout(5, t5, t7);
    this._height = t5 - t7;
  } else {
    if (x1 < x2)
      if (x1 < x3) {
        t1 = this._left;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(6, x1, y1, x2, y2, x3, y3, t1);
        if (x1 < t1)
          t1 = x1;
      } else {
        t1 = this._left;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(8, x1, y1, x2, y2, x3, y3, t1);
        if (x3 < t1)
          t1 = x3;
      }
    else if (x2 < x3) {
      t1 = this._left;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(10, x1, y1, x2, y2, x3, y3, t1);
      if (x2 < t1)
        t1 = x2;
    } else {
      t1 = this._left;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(12, x1, y1, x2, y2, x3, y3, t1);
      if (x3 < t1)
        t1 = x3;
    }
    this._left = t1;
    if (y1 < y2)
      if (y1 < y3) {
        t1 = this._top;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(14, x1, y1, x2, y2, x3, y3, t1);
        if (y1 < t1)
          t1 = y1;
      } else {
        t1 = this._top;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(16, x1, y1, x2, y2, x3, y3, t1);
        if (y3 < t1)
          t1 = y3;
      }
    else if (y2 < y3) {
      t1 = this._top;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(18, x1, y1, x2, y2, x3, y3, t1);
      if (y2 < t1)
        t1 = y2;
    } else {
      t1 = this._top;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(20, x1, y1, x2, y2, x3, y3, t1);
      if (y3 < t1)
        t1 = y3;
    }
    this._top = t1;
    if (x1 > x2)
      if (x1 > x3) {
        t1 = this._right;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(22, x1, y1, t1, y2, y3);
        if (x1 > t1)
          t1 = x1;
      } else {
        t1 = this._right;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(24, y1, y2, x3, y3, t1);
        if (x3 > t1)
          t1 = x3;
      }
    else if (x2 > x3) {
      t1 = this._right;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(26, t1, y1, x2, y2, y3);
      if (x2 > t1)
        t1 = x2;
    } else {
      t1 = this._right;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(28, y1, y2, x3, y3, t1);
      if (x3 > t1)
        t1 = x3;
    }
    this._right = t1;
    if (y1 > y2)
      if (y1 > y3) {
        t1 = this._bottom;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(30, y1, t1);
        if (y1 > t1)
          t1 = y1;
      } else {
        t1 = this._bottom;
        if (typeof t1 !== 'number')
          return this.add3Points$6$bailout(32, t1, y3);
        if (y3 > t1)
          t1 = y3;
      }
    else if (y2 > y3) {
      t1 = this._bottom;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(34, t1, y2);
      if (y2 > t1)
        t1 = y2;
    } else {
      t1 = this._bottom;
      if (typeof t1 !== 'number')
        return this.add3Points$6$bailout(36, t1, y3);
      if (y3 > t1)
        t1 = y3;
    }
    this._bottom = t1;
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.add3Points$6$bailout(38, t1);
    t3 = this._left;
    if (typeof t3 !== 'number')
      return this.add3Points$6$bailout(39, t3, t1);
    this._width = t1 - t3;
    t5 = this._bottom;
    if (typeof t5 !== 'number')
      return this.add3Points$6$bailout(40, t5);
    t7 = this._top;
    if (typeof t7 !== 'number')
      return this.add3Points$6$bailout(41, t5, t7);
    this._height = t5 - t7;
  }
},
 add3Points$6$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t3 = env1;
      t1 = env0;
      break;
    case 4:
      t5 = env0;
      break;
    case 5:
      t7 = env1;
      t5 = env0;
      break;
    case 6:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 7:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 8:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 9:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 10:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 11:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 12:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 13:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 14:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 15:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 16:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 17:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 18:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 19:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 20:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 21:
      t1 = env6;
      y3 = env5;
      x3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 22:
      y3 = env4;
      y2 = env3;
      t1 = env2;
      y1 = env1;
      x1 = env0;
      break;
    case 23:
      y3 = env3;
      t1 = env2;
      y2 = env1;
      y1 = env0;
      break;
    case 24:
      t1 = env4;
      y3 = env3;
      x3 = env2;
      y2 = env1;
      y1 = env0;
      break;
    case 25:
      t1 = env3;
      y3 = env2;
      y2 = env1;
      y1 = env0;
      break;
    case 26:
      y3 = env4;
      y2 = env3;
      x2 = env2;
      y1 = env1;
      t1 = env0;
      break;
    case 27:
      y3 = env3;
      y2 = env2;
      t1 = env1;
      y1 = env0;
      break;
    case 28:
      t1 = env4;
      y3 = env3;
      x3 = env2;
      y2 = env1;
      y1 = env0;
      break;
    case 29:
      t1 = env3;
      y3 = env2;
      y2 = env1;
      y1 = env0;
      break;
    case 30:
      t1 = env1;
      y1 = env0;
      break;
    case 31:
      t1 = env0;
      break;
    case 32:
      y3 = env1;
      t1 = env0;
      break;
    case 33:
      t1 = env0;
      break;
    case 34:
      y2 = env1;
      t1 = env0;
      break;
    case 35:
      t1 = env0;
      break;
    case 36:
      y3 = env1;
      t1 = env0;
      break;
    case 37:
      t1 = env0;
      break;
    case 38:
      t1 = env0;
      break;
    case 39:
      t1 = env1;
      t3 = env0;
      break;
    case 40:
      t5 = env0;
      break;
    case 41:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    default:
      var y3, x3, y2, x2, y1, x1, t1, t3, t5, t7;
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && this._isEmpty)
        switch (state0) {
          case 0:
            this._isEmpty = false;
            if ($.ltB(x1, x2))
              t1 = $.ltB(x1, x3) ? x1 : x3;
            else
              t1 = $.ltB(x2, x3) ? x2 : x3;
            this._left = t1;
            if ($.ltB(y1, y2))
              t1 = $.ltB(y1, y3) ? y1 : y3;
            else
              t1 = $.ltB(y2, y3) ? y2 : y3;
            this._top = t1;
            if ($.gtB(x1, x2))
              t1 = $.gtB(x1, x3) ? x1 : x3;
            else
              t1 = $.gtB(x2, x3) ? x2 : x3;
            this._right = t1;
            if ($.gtB(y1, y2))
              t1 = $.gtB(y1, y3) ? y1 : y3;
            else
              t1 = $.gtB(y2, y3) ? y2 : y3;
            this._bottom = t1;
            t1 = this._right;
          case 2:
            state0 = 0;
            t3 = this._left;
          case 3:
            state0 = 0;
            this._width = $.sub(t1, t3);
            t5 = this._bottom;
          case 4:
            state0 = 0;
            t7 = this._top;
          case 5:
            state0 = 0;
            this._height = $.sub(t5, t7);
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 0 && $.ltB(x1, x2))
              switch (state0) {
                case 0:
                default:
                  if (state0 === 7 || state0 === 6 || state0 === 0 && $.ltB(x1, x3))
                    switch (state0) {
                      case 0:
                        t1 = this._left;
                      case 6:
                        state0 = 0;
                      case 7:
                        if (state0 === 0 && $.ltB(x1, t1))
                          t1 = x1;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._left;
                            case 7:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._left;
                      case 8:
                        state0 = 0;
                      case 9:
                        if (state0 === 0 && $.ltB(x3, t1))
                          t1 = x3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._left;
                            case 9:
                              state0 = 0;
                          }
                    }
              }
            else
              switch (state0) {
                case 0:
                default:
                  if (state0 === 11 || state0 === 10 || state0 === 0 && $.ltB(x2, x3))
                    switch (state0) {
                      case 0:
                        t1 = this._left;
                      case 10:
                        state0 = 0;
                      case 11:
                        if (state0 === 0 && $.ltB(x2, t1))
                          t1 = x2;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._left;
                            case 11:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._left;
                      case 12:
                        state0 = 0;
                      case 13:
                        if (state0 === 0 && $.ltB(x3, t1))
                          t1 = x3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._left;
                            case 13:
                              state0 = 0;
                          }
                    }
              }
            this._left = t1;
          case 14:
          case 15:
          case 16:
          case 17:
          case 18:
          case 19:
          case 20:
          case 21:
            if (state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 0 && $.ltB(y1, y2))
              switch (state0) {
                case 0:
                default:
                  if (state0 === 15 || state0 === 14 || state0 === 0 && $.ltB(y1, y3))
                    switch (state0) {
                      case 0:
                        t1 = this._top;
                      case 14:
                        state0 = 0;
                      case 15:
                        if (state0 === 0 && $.ltB(y1, t1))
                          t1 = y1;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._top;
                            case 15:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._top;
                      case 16:
                        state0 = 0;
                      case 17:
                        if (state0 === 0 && $.ltB(y3, t1))
                          t1 = y3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._top;
                            case 17:
                              state0 = 0;
                          }
                    }
              }
            else
              switch (state0) {
                case 0:
                default:
                  if (state0 === 19 || state0 === 18 || state0 === 0 && $.ltB(y2, y3))
                    switch (state0) {
                      case 0:
                        t1 = this._top;
                      case 18:
                        state0 = 0;
                      case 19:
                        if (state0 === 0 && $.ltB(y2, t1))
                          t1 = y2;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._top;
                            case 19:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._top;
                      case 20:
                        state0 = 0;
                      case 21:
                        if (state0 === 0 && $.ltB(y3, t1))
                          t1 = y3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._top;
                            case 21:
                              state0 = 0;
                          }
                    }
              }
            this._top = t1;
          case 22:
          case 23:
          case 24:
          case 25:
          case 26:
          case 27:
          case 28:
          case 29:
            if (state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 0 && $.gtB(x1, x2))
              switch (state0) {
                case 0:
                default:
                  if (state0 === 23 || state0 === 22 || state0 === 0 && $.gtB(x1, x3))
                    switch (state0) {
                      case 0:
                        t1 = this._right;
                      case 22:
                        state0 = 0;
                      case 23:
                        if (state0 === 0 && $.gtB(x1, t1))
                          t1 = x1;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._right;
                            case 23:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._right;
                      case 24:
                        state0 = 0;
                      case 25:
                        if (state0 === 0 && $.gtB(x3, t1))
                          t1 = x3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._right;
                            case 25:
                              state0 = 0;
                          }
                    }
              }
            else
              switch (state0) {
                case 0:
                default:
                  if (state0 === 27 || state0 === 26 || state0 === 0 && $.gtB(x2, x3))
                    switch (state0) {
                      case 0:
                        t1 = this._right;
                      case 26:
                        state0 = 0;
                      case 27:
                        if (state0 === 0 && $.gtB(x2, t1))
                          t1 = x2;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._right;
                            case 27:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._right;
                      case 28:
                        state0 = 0;
                      case 29:
                        if (state0 === 0 && $.gtB(x3, t1))
                          t1 = x3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._right;
                            case 29:
                              state0 = 0;
                          }
                    }
              }
            this._right = t1;
          case 30:
          case 31:
          case 32:
          case 33:
          case 34:
          case 35:
          case 36:
          case 37:
            if (state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 0 && $.gtB(y1, y2))
              switch (state0) {
                case 0:
                default:
                  if (state0 === 31 || state0 === 30 || state0 === 0 && $.gtB(y1, y3))
                    switch (state0) {
                      case 0:
                        t1 = this._bottom;
                      case 30:
                        state0 = 0;
                      case 31:
                        if (state0 === 0 && $.gtB(y1, t1))
                          t1 = y1;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._bottom;
                            case 31:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._bottom;
                      case 32:
                        state0 = 0;
                      case 33:
                        if (state0 === 0 && $.gtB(y3, t1))
                          t1 = y3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._bottom;
                            case 33:
                              state0 = 0;
                          }
                    }
              }
            else
              switch (state0) {
                case 0:
                default:
                  if (state0 === 35 || state0 === 34 || state0 === 0 && $.gtB(y2, y3))
                    switch (state0) {
                      case 0:
                        t1 = this._bottom;
                      case 34:
                        state0 = 0;
                      case 35:
                        if (state0 === 0 && $.gtB(y2, t1))
                          t1 = y2;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._bottom;
                            case 35:
                              state0 = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                        t1 = this._bottom;
                      case 36:
                        state0 = 0;
                      case 37:
                        if (state0 === 0 && $.gtB(y3, t1))
                          t1 = y3;
                        else
                          switch (state0) {
                            case 0:
                              t1 = this._bottom;
                            case 37:
                              state0 = 0;
                          }
                    }
              }
            this._bottom = t1;
            t1 = this._right;
          case 38:
            state0 = 0;
            t3 = this._left;
          case 39:
            state0 = 0;
            this._width = $.sub(t1, t3);
            t5 = this._bottom;
          case 40:
            state0 = 0;
            t7 = this._top;
          case 41:
            state0 = 0;
            this._height = $.sub(t5, t7);
        }
  }
},
 addRectangle$1: function(r) {
  var t1, t3, t5, t7;
  if (this._isEmpty) {
    this._isEmpty = false;
    this._left = r.getLeft$0();
    this._top = r.getTop$0();
    this._right = r.getRight$0();
    this._bottom = r.getBottom$0();
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.addRectangle$1$bailout(1, t1);
    t3 = this._left;
    if (typeof t3 !== 'number')
      return this.addRectangle$1$bailout(2, t1, t3);
    this._width = t1 - t3;
    t5 = this._bottom;
    if (typeof t5 !== 'number')
      return this.addRectangle$1$bailout(3, t5);
    t7 = this._top;
    if (typeof t7 !== 'number')
      return this.addRectangle$1$bailout(4, t7, t5);
    this._height = t5 - t7;
  } else {
    t1 = this._left;
    if (typeof t1 !== 'number')
      return this.addRectangle$1$bailout(5, r, t1);
    t3 = r.getLeft$0();
    if (typeof t3 !== 'number')
      return this.addRectangle$1$bailout(6, r, t1, t3);
    this._left = t1 < t3 ? this._left : r.getLeft$0();
    t1 = this._top;
    if (typeof t1 !== 'number')
      return this.addRectangle$1$bailout(7, r, t1);
    t3 = r.getTop$0();
    if (typeof t3 !== 'number')
      return this.addRectangle$1$bailout(8, r, t3, t1);
    this._top = t1 < t3 ? this._top : r.getTop$0();
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.addRectangle$1$bailout(9, r, t1);
    t3 = r.getRight$0();
    if (typeof t3 !== 'number')
      return this.addRectangle$1$bailout(10, r, t3, t1);
    this._right = t1 > t3 ? this._right : r.getRight$0();
    t1 = this._bottom;
    if (typeof t1 !== 'number')
      return this.addRectangle$1$bailout(11, r, t1);
    t3 = r.getBottom$0();
    if (typeof t3 !== 'number')
      return this.addRectangle$1$bailout(12, r, t1, t3);
    this._bottom = t1 > t3 ? this._bottom : r.getBottom$0();
    t1 = this._right;
    if (typeof t1 !== 'number')
      return this.addRectangle$1$bailout(13, t1);
    t3 = this._left;
    if (typeof t3 !== 'number')
      return this.addRectangle$1$bailout(14, t1, t3);
    this._width = t1 - t3;
    t5 = this._bottom;
    if (typeof t5 !== 'number')
      return this.addRectangle$1$bailout(15, t5);
    t7 = this._top;
    if (typeof t7 !== 'number')
      return this.addRectangle$1$bailout(16, t5, t7);
    this._height = t5 - t7;
  }
},
 addRectangle$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
    case 3:
      t5 = env0;
      break;
    case 4:
      t5 = env1;
      t7 = env0;
      break;
    case 5:
      t1 = env1;
      r = env0;
      break;
    case 6:
      t3 = env2;
      t1 = env1;
      r = env0;
      break;
    case 7:
      t1 = env1;
      r = env0;
      break;
    case 8:
      t1 = env2;
      t3 = env1;
      r = env0;
      break;
    case 9:
      t1 = env1;
      r = env0;
      break;
    case 10:
      t1 = env2;
      t3 = env1;
      r = env0;
      break;
    case 11:
      t1 = env1;
      r = env0;
      break;
    case 12:
      t3 = env2;
      t1 = env1;
      r = env0;
      break;
    case 13:
      t1 = env0;
      break;
    case 14:
      t3 = env1;
      t1 = env0;
      break;
    case 15:
      t5 = env0;
      break;
    case 16:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var t1, t3, t5, t7, r;
      if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this._isEmpty)
        switch (state0) {
          case 0:
            this._isEmpty = false;
            this._left = r.getLeft$0();
            this._top = r.getTop$0();
            this._right = r.getRight$0();
            this._bottom = r.getBottom$0();
            t1 = this._right;
          case 1:
            state0 = 0;
            t3 = this._left;
          case 2:
            state0 = 0;
            this._width = $.sub(t1, t3);
            t5 = this._bottom;
          case 3:
            state0 = 0;
            t7 = this._top;
          case 4:
            state0 = 0;
            this._height = $.sub(t5, t7);
        }
      else
        switch (state0) {
          case 0:
            t1 = this._left;
          case 5:
            state0 = 0;
            t3 = r.getLeft$0();
          case 6:
            state0 = 0;
            this._left = $.ltB(t1, t3) ? this._left : r.getLeft$0();
            t1 = this._top;
          case 7:
            state0 = 0;
            t3 = r.getTop$0();
          case 8:
            state0 = 0;
            this._top = $.ltB(t1, t3) ? this._top : r.getTop$0();
            t1 = this._right;
          case 9:
            state0 = 0;
            t3 = r.getRight$0();
          case 10:
            state0 = 0;
            this._right = $.gtB(t1, t3) ? this._right : r.getRight$0();
            t1 = this._bottom;
          case 11:
            state0 = 0;
            t3 = r.getBottom$0();
          case 12:
            state0 = 0;
            this._bottom = $.gtB(t1, t3) ? this._bottom : r.getBottom$0();
            t1 = this._right;
          case 13:
            state0 = 0;
            t3 = this._left;
          case 14:
            state0 = 0;
            this._width = $.sub(t1, t3);
            t5 = this._bottom;
          case 15:
            state0 = 0;
            t7 = this._top;
          case 16:
            state0 = 0;
            this._height = $.sub(t5, t7);
        }
  }
},
 inflate$1: function(v) {
  this._left = $.sub(this._left, v);
  this._top = $.sub(this._top, v);
  this._right = $.add(this._right, v);
  this._bottom = $.add(this._bottom, v);
  this._width = $.sub(this._right, this._left);
  this._height = $.sub(this._bottom, this._top);
},
 minSelf$1: function(r) {
  this._left = $.gtB(this._left, r.getLeft$0()) ? this._left : r.getLeft$0();
  this._top = $.gtB(this._top, r.getTop$0()) ? this._top : r.getTop$0();
  this._right = $.ltB(this._right, r.getRight$0()) ? this._right : r.getRight$0();
  this._bottom = $.ltB(this._bottom, r.getBottom$0()) ? this._bottom : r.getBottom$0();
  this._width = $.sub(this._right, this._left);
  this._height = $.sub(this._bottom, this._top);
},
 intersects$1: function(r) {
  var t1, t3;
  t1 = this._right;
  if (typeof t1 !== 'number')
    return this.intersects$1$bailout(1, r, t1);
  t3 = r.getLeft$0();
  if (typeof t3 !== 'number')
    return this.intersects$1$bailout(2, r, t1, t3);
  if (t1 < t3)
    return false;
  t1 = this._left;
  if (typeof t1 !== 'number')
    return this.intersects$1$bailout(3, r, t1);
  t3 = r.getRight$0();
  if (typeof t3 !== 'number')
    return this.intersects$1$bailout(4, r, t1, t3);
  if (t1 > t3)
    return false;
  t1 = this._bottom;
  if (typeof t1 !== 'number')
    return this.intersects$1$bailout(5, r, t1);
  t3 = r.getTop$0();
  if (typeof t3 !== 'number')
    return this.intersects$1$bailout(6, r, t3, t1);
  if (t1 < t3)
    return false;
  t1 = this._top;
  if (typeof t1 !== 'number')
    return this.intersects$1$bailout(7, r, t1);
  t3 = r.getBottom$0();
  if (typeof t3 !== 'number')
    return this.intersects$1$bailout(8, t1, t3);
  if (t1 > t3)
    return false;
  return true;
},
 intersects$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      r = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      r = env0;
      break;
    case 3:
      t1 = env1;
      r = env0;
      break;
    case 4:
      t3 = env2;
      t1 = env1;
      r = env0;
      break;
    case 5:
      t1 = env1;
      r = env0;
      break;
    case 6:
      t1 = env2;
      t3 = env1;
      r = env0;
      break;
    case 7:
      t1 = env1;
      r = env0;
      break;
    case 8:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._right;
    case 1:
      state0 = 0;
      t3 = r.getLeft$0();
    case 2:
      state0 = 0;
      if ($.ltB(t1, t3))
        return false;
      t1 = this._left;
    case 3:
      state0 = 0;
      t3 = r.getRight$0();
    case 4:
      state0 = 0;
      if ($.gtB(t1, t3))
        return false;
      t1 = this._bottom;
    case 5:
      state0 = 0;
      t3 = r.getTop$0();
    case 6:
      state0 = 0;
      if ($.ltB(t1, t3))
        return false;
      t1 = this._top;
    case 7:
      state0 = 0;
      t3 = r.getBottom$0();
    case 8:
      var t1, r, t3;
      state0 = 0;
      if ($.gtB(t1, t3))
        return false;
      return true;
  }
},
 empty$0: function() {
  var t1, t3, t5, t7;
  this._isEmpty = true;
  this._left = 0;
  this._top = 0;
  this._right = 0;
  this._bottom = 0;
  t1 = this._right;
  if (typeof t1 !== 'number')
    return this.empty$0$bailout(1, t1);
  t3 = this._left;
  if (typeof t3 !== 'number')
    return this.empty$0$bailout(2, t1, t3);
  this._width = t1 - t3;
  t5 = this._bottom;
  if (typeof t5 !== 'number')
    return this.empty$0$bailout(3, t5);
  t7 = this._top;
  if (typeof t7 !== 'number')
    return this.empty$0$bailout(4, t5, t7);
  this._height = t5 - t7;
},
 empty$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
    case 3:
      t5 = env0;
      break;
    case 4:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      this._isEmpty = true;
      this._left = 0;
      this._top = 0;
      this._right = 0;
      this._bottom = 0;
      t1 = this._right;
    case 1:
      state0 = 0;
      t3 = this._left;
    case 2:
      state0 = 0;
      this._width = $.sub(t1, t3);
      t5 = this._bottom;
    case 3:
      state0 = 0;
      t7 = this._top;
    case 4:
      var t1, t3, t5, t7;
      state0 = 0;
      this._height = $.sub(t5, t7);
  }
},
 get$isEmpty: function() {
  return this._isEmpty;
}
};

$$.PlaneGeometry = {"": ["id", "name", "vertices", "colors", "materials", "faces", "faceUvs", "faceVertexUvs", "morphTargets", "morphColors", "morphNormals", "skinWeights", "skinIndices", "__tmpVertices", "boundingBox", "boundingSphere", "hasTangents", "_dynamic", "bones", "animation", "__data"],
 "super": "Geometry",
 PlaneGeometry$4: function(width, height, segmentsWidth, segmentsHeight) {
  var width_half, height_half, gridX, gridY, gridX1, gridY1, segment_width, segment_height, normal, iy, t1, ix, x, iy0, t2, t3, t4, t5, a, b, ix0, face, faceVertexUV, newUVs, t6, t7, t8;
  if (typeof segmentsWidth !== 'number')
    return this.PlaneGeometry$4$bailout(1, width, height, segmentsWidth, segmentsHeight);
  if (typeof segmentsHeight !== 'number')
    return this.PlaneGeometry$4$bailout(1, width, height, segmentsWidth, segmentsHeight);
  width_half = $.div(width, 2);
  if (typeof width_half !== 'number')
    return this.PlaneGeometry$4$bailout(2, width, height, segmentsWidth, segmentsHeight, width_half);
  height_half = $.div(height, 2);
  if (typeof height_half !== 'number')
    return this.PlaneGeometry$4$bailout(3, width, height, segmentsWidth, segmentsHeight, width_half, height_half);
  gridX = segmentsWidth;
  gridY = segmentsHeight;
  gridX1 = gridX + 1;
  gridY1 = gridY + 1;
  segment_width = $.div(width, gridX);
  if (typeof segment_width !== 'number')
    return this.PlaneGeometry$4$bailout(4, gridY, height, gridX1, gridY1, segment_width, gridX, width_half, height_half);
  segment_height = $.div(height, gridY);
  if (typeof segment_height !== 'number')
    return this.PlaneGeometry$4$bailout(5, gridY, gridX1, gridY1, segment_width, gridX, segment_height, width_half, height_half);
  normal = $.Vector3$(0, 0, 1);
  for (iy = 0; iy < gridY1; ++iy)
    for (t1 = -(iy * segment_height - height_half), ix = 0; ix < gridX1; ++ix) {
      x = ix * segment_width - width_half;
      this.vertices.push($.Vector3$(x, t1, 0));
    }
  for (t1 = this.faceVertexUvs, iy = 0; iy < gridY; iy = iy0)
    for (iy0 = iy + 1, t2 = gridX1 * iy, t3 = gridX1 * iy0, t4 = iy / gridY, t5 = iy0 / gridY, ix = 0; ix < gridX; ix = ix0) {
      a = ix + t2;
      b = ix + t3;
      ix0 = ix + 1;
      face = $.Face4$(a, b, ix0 + t3, ix0 + t2, null, null, null);
      face.normal.copy$1(normal);
      $.addAll(face.vertexNormals, [normal.clone$0(), normal.clone$0(), normal.clone$0(), normal.clone$0()]);
      this.faces.push(face);
      if (0 >= t1.length)
        throw $.ioore(0);
      faceVertexUV = t1[0];
      newUVs = $._ListImpl_List(null);
      t6 = ix / gridX;
      t7 = $.UV$(t6, t4);
      t6 = $.UV$(t6, t5);
      t8 = ix0 / gridX;
      $.addAll(newUVs, [t7, t6, $.UV$(t8, t5), $.UV$(t8, t4)]);
      $.add$1(faceVertexUV, newUVs);
    }
  this.computeCentroids$0();
},
 PlaneGeometry$4$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      segmentsHeight = env3;
      segmentsWidth = env2;
      height = env1;
      width = env0;
      break;
    case 2:
      width_half = env4;
      segmentsHeight = env3;
      segmentsWidth = env2;
      height = env1;
      width = env0;
      break;
    case 3:
      height_half = env5;
      width_half = env4;
      segmentsHeight = env3;
      segmentsWidth = env2;
      height = env1;
      width = env0;
      break;
    case 4:
      height_half = env7;
      width_half = env6;
      gridX = env5;
      segment_width = env4;
      gridY1 = env3;
      gridX1 = env2;
      height = env1;
      gridY = env0;
      break;
    case 5:
      height_half = env7;
      width_half = env6;
      segment_height = env5;
      gridX = env4;
      segment_width = env3;
      gridY1 = env2;
      gridX1 = env1;
      gridY = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      width_half = $.div(width, 2);
    case 2:
      state0 = 0;
      height_half = $.div(height, 2);
    case 3:
      state0 = 0;
      gridX = !(segmentsWidth == null) ? segmentsWidth : 1;
      gridY = !(segmentsHeight == null) ? segmentsHeight : 1;
      gridX1 = $.add(gridX, 1);
      gridY1 = $.add(gridY, 1);
      segment_width = $.div(width, gridX);
    case 4:
      state0 = 0;
      segment_height = $.div(height, gridY);
    case 5:
      var segmentsHeight, segmentsWidth, height, width, width_half, height_half, gridX, gridY, gridX1, gridY1, segment_width, segment_height, normal, iy, ix, t1, x, y, iy0, t2, a, b, ix0, c, face, faceVertexUV, newUVs, t3, t4, t5, t6, t7;
      state0 = 0;
      normal = $.Vector3$(0, 0, 1);
      for (iy = 0; $.ltB(iy, gridY1); ++iy)
        for (ix = 0; $.ltB(ix, gridX1); ++ix) {
          if (typeof segment_width !== 'number')
            throw $.iae(segment_width);
          t1 = ix * segment_width;
          if (typeof width_half !== 'number')
            throw $.iae(width_half);
          x = t1 - width_half;
          if (typeof segment_height !== 'number')
            throw $.iae(segment_height);
          t1 = iy * segment_height;
          if (typeof height_half !== 'number')
            throw $.iae(height_half);
          y = t1 - height_half;
          this.vertices.push($.Vector3$(x, -y, 0));
        }
      for (t1 = this.faceVertexUvs, iy = 0; $.ltB(iy, gridY); iy = iy0)
        for (iy0 = iy + 1, ix = 0; $.ltB(ix, gridX); ix = ix0) {
          t2 = $.mul(gridX1, iy);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          a = ix + t2;
          t2 = $.mul(gridX1, iy0);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          b = ix + t2;
          ix0 = ix + 1;
          t2 = $.mul(gridX1, iy0);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          c = ix0 + t2;
          t2 = $.mul(gridX1, iy);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          face = $.Face4$(a, b, c, ix0 + t2, null, null, null);
          face.normal.copy$1(normal);
          $.addAll(face.vertexNormals, [normal.clone$0(), normal.clone$0(), normal.clone$0(), normal.clone$0()]);
          this.faces.push(face);
          if (0 >= t1.length)
            throw $.ioore(0);
          faceVertexUV = t1[0];
          newUVs = $._ListImpl_List(null);
          if (typeof gridX !== 'number')
            throw $.iae(gridX);
          t3 = ix / gridX;
          if (typeof gridY !== 'number')
            throw $.iae(gridY);
          t4 = iy / gridY;
          t5 = $.UV$(t3, t4);
          t6 = iy0 / gridY;
          t3 = $.UV$(t3, t6);
          t7 = ix0 / gridX;
          $.addAll(newUVs, [t5, t3, $.UV$(t7, t6), $.UV$(t7, t4)]);
          $.add$1(faceVertexUV, newUVs);
        }
      this.computeCentroids$0();
  }
}
};

$$.SphereGeometry = {"": ["radius=", "id", "name", "vertices", "colors", "materials", "faces", "faceUvs", "faceVertexUvs", "morphTargets", "morphColors", "morphNormals", "skinWeights", "skinIndices", "__tmpVertices", "boundingBox", "boundingSphere", "hasTangents", "_dynamic", "bones", "animation", "__data"],
 "super": "Geometry",
 SphereGeometry$7: function(radius, segmentsWidth, segmentsHeight, phiStart, phiLength, thetaStart, thetaLength) {
  var segmentsX, segmentsY, vertices, uvs, y, verticesRow, uvsRow, v, t1, x, u, vertex, t2, t3, t4, y0, x0, v1, v2, v3, v4, n1, t7, n2, t8, n3, t9, n4, t10, uv1, t12, uv2, t14, uv3, t16, uv4;
  if (typeof phiStart !== 'number')
    return this.SphereGeometry$7$bailout(1, segmentsWidth, segmentsHeight, phiStart, phiLength, thetaStart, thetaLength);
  if (typeof thetaStart !== 'number')
    return this.SphereGeometry$7$bailout(1, segmentsWidth, segmentsHeight, phiStart, phiLength, thetaStart, thetaLength);
  segmentsX = $.max(3, $.floor(segmentsWidth));
  segmentsY = $.max(2, $.floor(segmentsHeight));
  vertices = [];
  uvs = [];
  for (y = 0; y <= segmentsY; ++y) {
    verticesRow = [];
    uvsRow = [];
    for (v = y / segmentsY, t1 = 1 - v, x = 0; x <= segmentsX; ++x) {
      u = x / segmentsX;
      vertex = $.Vector3$(0, 0, 0);
      t2 = $.neg(this.radius);
      if (typeof phiLength !== 'number')
        throw $.iae(phiLength);
      t3 = phiStart + u * phiLength;
      t2 = $.mul(t2, $.cos(t3));
      if (typeof thetaLength !== 'number')
        throw $.iae(thetaLength);
      t4 = thetaStart + v * thetaLength;
      vertex.x = $.mul(t2, $.sin(t4));
      vertex.y = $.mul(this.radius, $.cos(t4));
      vertex.z = $.mul($.mul(this.radius, $.sin(t3)), $.sin(t4));
      this.vertices.push(vertex);
      verticesRow.push(this.vertices.length - 1);
      uvsRow.push($.UV$(u, t1));
    }
    vertices.push(verticesRow);
    uvs.push(uvsRow);
  }
  for (t1 = this.faceVertexUvs, y = 0; y < segmentsY; y = y0)
    for (y0 = y + 1, x = 0; x < segmentsX; x = x0) {
      t2 = vertices.length;
      if (y >= t2)
        throw $.ioore(y);
      t3 = vertices[y];
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.SphereGeometry$7$bailout(2, x, y, segmentsY, vertices, uvs, t1, y0, t3, segmentsX);
      x0 = x + 1;
      if (x0 >= t3.length)
        throw $.ioore(x0);
      v1 = t3[x0];
      if (x >= t3.length)
        throw $.ioore(x);
      v2 = t3[x];
      if (y0 >= t2)
        throw $.ioore(y0);
      t3 = vertices[y0];
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.SphereGeometry$7$bailout(4, y, v2, t1, y0, t3, segmentsX, x, segmentsY, vertices, uvs, x0, v1);
      if (x >= t3.length)
        throw $.ioore(x);
      v3 = t3[x];
      t3 = vertices[y0];
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.SphereGeometry$7$bailout(5, y, v2, t1, y0, v3, segmentsX, t3, x, segmentsY, vertices, uvs, x0, v1);
      if (x0 >= t3.length)
        throw $.ioore(x0);
      v4 = t3[x0];
      t3 = this.vertices;
      if (v1 !== (v1 | 0))
        throw $.iae(v1);
      if (v1 < 0 || v1 >= t3.length)
        throw $.ioore(v1);
      n1 = t3[v1].clone$0().normalize$0();
      t7 = this.vertices;
      if (v2 !== (v2 | 0))
        throw $.iae(v2);
      if (v2 < 0 || v2 >= t7.length)
        throw $.ioore(v2);
      n2 = t7[v2].clone$0().normalize$0();
      t8 = this.vertices;
      if (v3 !== (v3 | 0))
        throw $.iae(v3);
      if (v3 < 0 || v3 >= t8.length)
        throw $.ioore(v3);
      n3 = t8[v3].clone$0().normalize$0();
      t9 = this.vertices;
      if (v4 !== (v4 | 0))
        throw $.iae(v4);
      if (v4 < 0 || v4 >= t9.length)
        throw $.ioore(v4);
      n4 = t9[v4].clone$0().normalize$0();
      if (y >= uvs.length)
        throw $.ioore(y);
      t10 = uvs[y];
      if (typeof t10 !== 'string' && (typeof t10 !== 'object' || t10 === null || t10.constructor !== Array && !t10.is$JavaScriptIndexingBehavior()))
        return this.SphereGeometry$7$bailout(6, n3, y, v2, n4, t1, y0, t10, v3, segmentsX, x, v4, segmentsY, vertices, uvs, n1, n2, x0, v1);
      if (x0 >= t10.length)
        throw $.ioore(x0);
      uv1 = t10[x0].clone$0();
      if (y >= uvs.length)
        throw $.ioore(y);
      t12 = uvs[y];
      if (typeof t12 !== 'string' && (typeof t12 !== 'object' || t12 === null || t12.constructor !== Array && !t12.is$JavaScriptIndexingBehavior()))
        return this.SphereGeometry$7$bailout(7, n3, y, v2, n4, t1, y0, v3, uv1, segmentsX, t12, x, v4, segmentsY, vertices, uvs, n1, n2, x0, v1);
      if (x >= t12.length)
        throw $.ioore(x);
      uv2 = t12[x].clone$0();
      if (y0 >= uvs.length)
        throw $.ioore(y0);
      t14 = uvs[y0];
      if (typeof t14 !== 'string' && (typeof t14 !== 'object' || t14 === null || t14.constructor !== Array && !t14.is$JavaScriptIndexingBehavior()))
        return this.SphereGeometry$7$bailout(8, n3, y, v2, n4, t1, y0, v3, uv1, segmentsX, x, v4, uv2, vertices, uvs, segmentsY, n1, t14, n2, x0, v1);
      if (x >= t14.length)
        throw $.ioore(x);
      uv3 = t14[x].clone$0();
      if (y0 >= uvs.length)
        throw $.ioore(y0);
      t16 = uvs[y0];
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.SphereGeometry$7$bailout(9, n3, y, v2, n4, t1, y0, v3, uv1, segmentsX, v4, uv2, vertices, uvs, segmentsY, n1, uv3, n2, t16, x0, v1);
      if (x0 >= t16.length)
        throw $.ioore(x0);
      uv4 = t16[x0].clone$0();
      t2 = this.vertices;
      if (v1 >= t2.length)
        throw $.ioore(v1);
      if ($.eqB($.abs(t2[v1].get$y()), this.radius)) {
        this.faces.push($.Face3$(v1, v3, v4, [n1, n3, n4], null, null));
        if (0 >= t1.length)
          throw $.ioore(0);
        $.add$1(t1[0], [uv1, uv3, uv4]);
      } else {
        t2 = this.vertices;
        if (v3 >= t2.length)
          throw $.ioore(v3);
        t3 = $.eqB($.abs(t2[v3].get$y()), this.radius);
        t4 = this.faces;
        if (t3) {
          t4.push($.Face3$(v1, v2, v3, [n1, n2, n3], null, null));
          if (0 >= t1.length)
            throw $.ioore(0);
          $.add$1(t1[0], [uv1, uv2, uv3]);
        } else {
          t4.push($.Face4$(v1, v2, v3, v4, [n1, n2, n3, n4], null, null));
          if (0 >= t1.length)
            throw $.ioore(0);
          $.add$1(t1[0], [uv1, uv2, uv3, uv4]);
        }
      }
    }
  this.computeCentroids$0();
  this.computeFaceNormals$0();
  this.boundingSphere = $.BoundingSphere$(this.radius);
},
 SphereGeometry$7$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19) {
  switch (state0) {
    case 1:
      thetaLength = env5;
      thetaStart = env4;
      phiLength = env3;
      phiStart = env2;
      segmentsHeight = env1;
      segmentsWidth = env0;
      break;
    case 2:
      segmentsX = env8;
      t2 = env7;
      y0 = env6;
      t1 = env5;
      uvs = env4;
      vertices = env3;
      segmentsY = env2;
      y = env1;
      x = env0;
      break;
    case 3:
      v1 = env10;
      x0 = env9;
      uvs = env8;
      vertices = env7;
      segmentsY = env6;
      x = env5;
      segmentsX = env4;
      y0 = env3;
      t1 = env2;
      t2 = env1;
      y = env0;
      break;
    case 4:
      v1 = env11;
      x0 = env10;
      uvs = env9;
      vertices = env8;
      segmentsY = env7;
      x = env6;
      segmentsX = env5;
      t2 = env4;
      y0 = env3;
      t1 = env2;
      v2 = env1;
      y = env0;
      break;
    case 5:
      v1 = env12;
      x0 = env11;
      uvs = env10;
      vertices = env9;
      segmentsY = env8;
      x = env7;
      t2 = env6;
      segmentsX = env5;
      v3 = env4;
      y0 = env3;
      t1 = env2;
      v2 = env1;
      y = env0;
      break;
    case 6:
      v1 = env17;
      x0 = env16;
      n2 = env15;
      n1 = env14;
      uvs = env13;
      vertices = env12;
      segmentsY = env11;
      v4 = env10;
      x = env9;
      segmentsX = env8;
      v3 = env7;
      t10 = env6;
      y0 = env5;
      t1 = env4;
      n4 = env3;
      v2 = env2;
      y = env1;
      n3 = env0;
      break;
    case 7:
      v1 = env18;
      x0 = env17;
      n2 = env16;
      n1 = env15;
      uvs = env14;
      vertices = env13;
      segmentsY = env12;
      v4 = env11;
      x = env10;
      t12 = env9;
      segmentsX = env8;
      uv1 = env7;
      v3 = env6;
      y0 = env5;
      t1 = env4;
      n4 = env3;
      v2 = env2;
      y = env1;
      n3 = env0;
      break;
    case 8:
      v1 = env19;
      x0 = env18;
      n2 = env17;
      t14 = env16;
      n1 = env15;
      segmentsY = env14;
      uvs = env13;
      vertices = env12;
      uv2 = env11;
      v4 = env10;
      x = env9;
      segmentsX = env8;
      uv1 = env7;
      v3 = env6;
      y0 = env5;
      t1 = env4;
      n4 = env3;
      v2 = env2;
      y = env1;
      n3 = env0;
      break;
    case 9:
      v1 = env19;
      x0 = env18;
      t16 = env17;
      n2 = env16;
      uv3 = env15;
      n1 = env14;
      segmentsY = env13;
      uvs = env12;
      vertices = env11;
      uv2 = env10;
      v4 = env9;
      segmentsX = env8;
      uv1 = env7;
      v3 = env6;
      y0 = env5;
      t1 = env4;
      n4 = env3;
      v2 = env2;
      y = env1;
      n3 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      segmentsX = $.max(3, $.floor(segmentsWidth));
      segmentsY = $.max(2, $.floor(segmentsHeight));
      vertices = [];
      uvs = [];
      for (y = 0; y <= segmentsY; ++y) {
        verticesRow = [];
        uvsRow = [];
        for (v = y / segmentsY, t1 = 1 - v, x = 0; x <= segmentsX; ++x) {
          u = x / segmentsX;
          vertex = $.Vector3$(0, 0, 0);
          t2 = $.neg(this.radius);
          if (typeof phiLength !== 'number')
            throw $.iae(phiLength);
          t3 = u * phiLength;
          t2 = $.mul(t2, $.cos($.add(phiStart, t3)));
          if (typeof thetaLength !== 'number')
            throw $.iae(thetaLength);
          t4 = v * thetaLength;
          vertex.x = $.mul(t2, $.sin($.add(thetaStart, t4)));
          vertex.y = $.mul(this.radius, $.cos($.add(thetaStart, t4)));
          vertex.z = $.mul($.mul(this.radius, $.sin($.add(phiStart, t3))), $.sin($.add(thetaStart, t4)));
          this.vertices.push(vertex);
          verticesRow.push(this.vertices.length - 1);
          uvsRow.push($.UV$(u, t1));
        }
        vertices.push(verticesRow);
        uvs.push(uvsRow);
      }
      t1 = this.faceVertexUvs;
      y = 0;
    default:
      var thetaLength, thetaStart, phiLength, phiStart, segmentsHeight, segmentsWidth, segmentsX, segmentsY, vertices, uvs, y, verticesRow, uvsRow, v, t1, x, u, vertex, t2, t3, t4, y0, x0, v1, v2, v3, v4, n1, t7, n2, t8, n3, t9, n4, t10, uv1, t12, uv2, t14, uv3, t16, uv4;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(y < segmentsY))
                break L0;
              y0 = y + 1;
              x = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!(x < segmentsX))
                        break L1;
                      if (y >= vertices.length)
                        throw $.ioore(y);
                      t2 = vertices[y];
                    case 2:
                      state0 = 0;
                      x0 = x + 1;
                      v1 = $.index(t2, x0);
                      if (y >= vertices.length)
                        throw $.ioore(y);
                      t2 = vertices[y];
                    case 3:
                      state0 = 0;
                      v2 = $.index(t2, x);
                      if (y0 >= vertices.length)
                        throw $.ioore(y0);
                      t2 = vertices[y0];
                    case 4:
                      state0 = 0;
                      v3 = $.index(t2, x);
                      if (y0 >= vertices.length)
                        throw $.ioore(y0);
                      t2 = vertices[y0];
                    case 5:
                      state0 = 0;
                      v4 = $.index(t2, x0);
                      t2 = this.vertices;
                      if (v1 !== (v1 | 0))
                        throw $.iae(v1);
                      if (v1 < 0 || v1 >= t2.length)
                        throw $.ioore(v1);
                      n1 = t2[v1].clone$0().normalize$0();
                      t7 = this.vertices;
                      if (v2 !== (v2 | 0))
                        throw $.iae(v2);
                      if (v2 < 0 || v2 >= t7.length)
                        throw $.ioore(v2);
                      n2 = t7[v2].clone$0().normalize$0();
                      t8 = this.vertices;
                      if (v3 !== (v3 | 0))
                        throw $.iae(v3);
                      if (v3 < 0 || v3 >= t8.length)
                        throw $.ioore(v3);
                      n3 = t8[v3].clone$0().normalize$0();
                      t9 = this.vertices;
                      if (v4 !== (v4 | 0))
                        throw $.iae(v4);
                      if (v4 < 0 || v4 >= t9.length)
                        throw $.ioore(v4);
                      n4 = t9[v4].clone$0().normalize$0();
                      if (y >= uvs.length)
                        throw $.ioore(y);
                      t10 = uvs[y];
                    case 6:
                      state0 = 0;
                      uv1 = $.index(t10, x0).clone$0();
                      if (y >= uvs.length)
                        throw $.ioore(y);
                      t12 = uvs[y];
                    case 7:
                      state0 = 0;
                      uv2 = $.index(t12, x).clone$0();
                      if (y0 >= uvs.length)
                        throw $.ioore(y0);
                      t14 = uvs[y0];
                    case 8:
                      state0 = 0;
                      uv3 = $.index(t14, x).clone$0();
                      if (y0 >= uvs.length)
                        throw $.ioore(y0);
                      t16 = uvs[y0];
                    case 9:
                      state0 = 0;
                      uv4 = $.index(t16, x0).clone$0();
                      t2 = this.vertices;
                      if (v1 >= t2.length)
                        throw $.ioore(v1);
                      if ($.eqB($.abs(t2[v1].get$y()), this.radius)) {
                        this.faces.push($.Face3$(v1, v3, v4, [n1, n3, n4], null, null));
                        if (0 >= t1.length)
                          throw $.ioore(0);
                        $.add$1(t1[0], [uv1, uv3, uv4]);
                      } else {
                        t2 = this.vertices;
                        if (v3 >= t2.length)
                          throw $.ioore(v3);
                        t3 = $.eqB($.abs(t2[v3].get$y()), this.radius);
                        t4 = this.faces;
                        if (t3) {
                          t4.push($.Face3$(v1, v2, v3, [n1, n2, n3], null, null));
                          if (0 >= t1.length)
                            throw $.ioore(0);
                          $.add$1(t1[0], [uv1, uv2, uv3]);
                        } else {
                          t4.push($.Face4$(v1, v2, v3, v4, [n1, n2, n3, n4], null, null));
                          if (0 >= t1.length)
                            throw $.ioore(0);
                          $.add$1(t1[0], [uv1, uv2, uv3, uv4]);
                        }
                      }
                      x = x0;
                  }
              y = y0;
          }
      this.computeCentroids$0();
      this.computeFaceNormals$0();
      this.boundingSphere = $.BoundingSphere$(this.radius);
  }
}
};

$$.Material = {"": ["name?", "id?", "side?", "opacity?", "blending?", "overdraw?", "visible=", "needsUpdate="],
 "super": "Object",
 get$_data: function() {
  if (this.__data == null)
    this.__data = $.makeLiteralMap([]);
  return this.__data;
},
 operator$index$1: function(key) {
  return $.index(this.get$_data(), key);
},
 operator$indexSet$2: function(key, value) {
  $.indexSet(this.get$_data(), key, value);
  return value;
},
 is$Material: true
};

$$.MeshBasicMaterial = {"": ["color=", "map", "lightMap", "specularMap", "envMap", "combine", "reflectivity", "refractionRatio", "shading", "wireframe!", "wireframeLinewidth", "wireframeLinecap", "wireframeLinejoin", "skinning", "morphTargets?", "vertexColors", "fog", "name", "id", "side", "opacity", "blending", "blendSrc", "blendDst", "blendEquation", "alphaTest", "polygonOffset", "polygonOffsetFactor", "polygonOffsetUnits", "transparent", "depthTest", "depthWrite", "overdraw", "visible", "needsUpdate", "__data"],
 "super": "Material",
 map$1: function(arg0) { return this.map.call$1(arg0); },
 is$MeshBasicMaterial: true,
 is$ITextureMapMaterial: true
};

$$.Mesh = {"": ["geometry?", "material=", "_morphTargetBase", "morphTargetForcedOrder", "morphTargetInfluences", "_morphTargetDictionary", "id", "name", "properties", "parent", "children", "up", "position", "rotation", "scale", "eulerOrder", "_dynamic", "doubleSided", "flipSided", "rotationAutoUpdate", "renderDepth", "matrix", "matrixWorld", "matrixRotationWorld", "matrixAutoUpdate", "matrixWorldNeedsUpdate", "quaternion", "useQuaternion", "boundRadius", "boundRadiusScale", "visible", "castShadow", "receiveShadow", "frustumCulled", "_vector", "__data"],
 "super": "Object3D",
 Mesh$2: function(geometry, material) {
  var t1, m;
  if (this.material == null)
    this.material = $.MeshBasicMaterial$(0, 205, 100, 204, 1, $.Random_Random(null).nextInt$1(16777215), 0, true, true, null, true, null, null, false, '', 1, false, false, 0, 0, 1, 0.98, 2, 0, false, null, false, 0, true, true, 'round', 'round', 1);
  t1 = this.geometry;
  if (!(t1 == null)) {
    if (t1.get$boundingSphere() == null)
      t1.computeBoundingSphere$0();
    this.boundRadius = this.geometry.get$boundingSphere().get$radius();
    if (!$.eqB($.get$length(this.geometry.get$morphTargets()), 0)) {
      this._morphTargetBase = -1;
      this.morphTargetForcedOrder = [];
      this.morphTargetInfluences = [];
      this._morphTargetDictionary = $.makeLiteralMap([]);
      for (m = 0; $.ltB(m, $.get$length(this.geometry.get$morphTargets())); ++m) {
        $.add$1(this.morphTargetInfluences, 0);
        $.indexSet(this._morphTargetDictionary, $.index(this.geometry.get$morphTargets(), m).get$name(), m);
      }
    }
  }
},
 is$Mesh: true
};

$$.RenderableObject = {"": ["object=", "z="],
 "super": "Object"
};

$$.RenderableVertex = {"": ["positionWorld?", "positionScreen?", "visible="],
 "super": "Object",
 copy$1: function(vertex) {
  this.positionWorld.copy$1(vertex.get$positionWorld());
  this.positionScreen.copy$1(vertex.get$positionScreen());
}
};

$$.RenderableFace3 = {"": ["v1?", "v2?", "v3?", "centroidWorld?", "centroidScreen?", "normalWorld?", "vertexNormalsWorld?", "uvs?", "material=", "faceMaterial=", "z="],
 "super": "Object",
 is$RenderableFace3: true
};

$$.RenderableFace4 = {"": ["v1?", "v2?", "v3?", "v4?", "centroidWorld?", "centroidScreen?", "normalWorld?", "vertexNormalsWorld?", "uvs?", "material=", "faceMaterial=", "z="],
 "super": "Object",
 is$RenderableFace4: true,
 is$IRenderableFace4: true
};

$$.RenderableLine = {"": ["z=", "v1?", "v2?", "material="],
 "super": "Object",
 is$RenderableLine: true
};

$$.RenderableParticle = {"": ["x=", "y=", "z=", "rotation=", "scale?", "material="],
 "super": "Object",
 scale$2: function(arg0, arg1) { return this.scale.call$2(arg0, arg1); },
 is$RenderableParticle: true
};

$$.CanvasRenderer = {"": ["domElement?", "_autoClear", "_sortObjects", "_sortElements", "_canvasWidth", "_canvasHeight", "_canvasWidthHalf", "_canvasHeightHalf", "_clearColor", "_clearOpacity", "_camera", "_canvas", "_context", "_contextGlobalAlpha", "_contextGlobalCompositeOperation", "_contextStrokeStyle", "_contextFillStyle", "_contextLineCap", "_contextLineJoin", "_contextLineWidth", "_clipRect", "_clearRect", "_bboxRect", "_info", "_renderData?", "_lib1_elements", "_lights", "_projector", "_v5", "_v6", "_v1x", "_v1y", "_v2x", "_v2y", "_v3x", "_v3y", "_v4x", "_v4y", "_v5x", "_v5y", "_v6x", "_v6y", "_color", "_color1", "_color2", "_color3", "_color4", "_patterns", "_imagedatas", "_near", "_far", "_image", "_uvs", "_uv1x", "_uv1y", "_uv2x", "_uv2y", "_uv3x", "_uv3y", "_enableLighting", "_ambientLight", "_directionalLights", "_pointLights", "_pi2", "_vector3", "_pixelMapImage", "_pixelMapData", "_gradientMapQuality", "_pixelMap", "_pixelMapContext", "_gradientMap", "_gradientMapContext", "debug"],
 "super": "Object",
 setSize$2: function(width, height) {
  var t1;
  this._canvasWidth = width;
  this._canvasHeight = height;
  this._canvasWidthHalf = $.floor($.div(this._canvasWidth, 2));
  this._canvasHeightHalf = $.floor($.div(this._canvasHeight, 2));
  t1 = this._canvasWidth;
  this._canvas.set$width(t1);
  t1 = this._canvasHeight;
  this._canvas.set$height(t1);
  this._clipRect.setValues$4($.neg(this._canvasWidthHalf), $.neg(this._canvasHeightHalf), this._canvasWidthHalf, this._canvasHeightHalf);
  this._clearRect.setValues$4($.neg(this._canvasWidthHalf), $.neg(this._canvasHeightHalf), this._canvasWidthHalf, this._canvasHeightHalf);
  this._contextGlobalAlpha = 1;
  this._contextGlobalCompositeOperation = 0;
  this._contextStrokeStyle = null;
  this._contextFillStyle = null;
  this._contextLineWidth = null;
  this._contextLineCap = null;
  this._contextLineJoin = null;
},
 clear$0: function() {
  this._context.setTransform$6(1, 0, 0, -1, this._canvasWidthHalf, this._canvasHeightHalf);
  if ($.get$isEmpty(this._clearRect) !== true) {
    this._clearRect.minSelf$1(this._clipRect);
    this._clearRect.inflate$1(2);
    if (this._clearOpacity < 1)
      this._context.clearRect$4($.floor(this._clearRect.getX$0()), $.floor(this._clearRect.getY$0()), $.floor(this._clearRect.getWidth$0()), $.floor(this._clearRect.getHeight$0()));
    if (this._clearOpacity > 0) {
      this.setBlending$1(1);
      this.setOpacity$1(1);
      this.setFillStyle$1('rgba(' + $.S($.floor($.mul(this._clearColor.r, 255))) + ', ' + $.S($.floor($.mul(this._clearColor.g, 255))) + ',' + $.S($.floor($.mul(this._clearColor.b, 255))) + ',' + $.S(this._clearOpacity) + ')');
      this._context.fillRect$4($.floor(this._clearRect.getX$0()), $.floor(this._clearRect.getY$0()), $.floor(this._clearRect.getWidth$0()), $.floor(this._clearRect.getHeight$0()));
    }
    this._clearRect.empty$0();
  }
},
 render$2: function(scene, camera) {
  var el, e, element, material, _v1, _v2, t1, t2, _v3, t3, _v4, t4;
  this._camera = camera;
  if (this._autoClear)
    this.clear$0();
  else
    this._context.setTransform$6(1, 0, 0, -1, this._canvasWidthHalf, this._canvasHeightHalf);
  this._info.render.reset$0();
  this._renderData = this._projector.projectScene$3(scene, camera, this._sortElements);
  this._lib1_elements = this._renderData.get$elements();
  this._lights = this._renderData.get$lights();
  if (this.debug === true) {
    this._context.set$fillStyle('rgba( 0, 255, 255, 0.5 )');
    this._context.fillRect$4(this._clipRect.getX$0(), this._clipRect.getY$0(), this._clipRect.getWidth$0(), this._clipRect.getHeight$0());
  }
  this._enableLighting = $.gt($.get$length(this._lights), 0);
  if (this._enableLighting === true)
    this.calculateLights$1(this._lights);
  el = $.get$length(this._lib1_elements);
  if (typeof el !== 'number')
    return this.render$2$bailout(1, scene, el);
  for (e = 0; e < el; ++e) {
    element = $.index(this._lib1_elements, e);
    material = element.get$material();
    if (typeof material === 'object' && material !== null && !!material.is$MeshFaceMaterial)
      material = element.get$faceMaterial();
    if (material == null || $.eqB(material.get$opacity(), 0))
      continue;
    this._bboxRect.empty$0();
    if (this.debug === true)
      $.print($.S(element));
    if (typeof element === 'object' && element !== null && !!element.is$RenderableParticle) {
      element.x = $.mul(element.x, this._canvasWidthHalf);
      element.y = $.mul(element.y, this._canvasHeightHalf);
      this.renderParticle$4(element, element, material, scene);
    } else if (typeof element === 'object' && element !== null && !!element.is$RenderableLine) {
      _v1 = element.v1;
      _v2 = element.v2;
      t1 = _v1.positionScreen;
      t1.x = $.mul(t1.x, this._canvasWidthHalf);
      t1.y = $.mul(t1.y, this._canvasHeightHalf);
      t2 = _v2.positionScreen;
      t2.x = $.mul(t2.x, this._canvasWidthHalf);
      t2.y = $.mul(t2.y, this._canvasHeightHalf);
      this._bboxRect.addPoint$2(t1.x, t1.y);
      this._bboxRect.addPoint$2(t2.x, t2.y);
      if (this._clipRect.intersects$1(this._bboxRect) === true)
        this.renderLine$5(_v1, _v2, element, material, scene);
    } else if (typeof element === 'object' && element !== null && !!element.is$RenderableFace3) {
      _v1 = element.v1;
      _v2 = element.v2;
      _v3 = element.v3;
      t1 = _v1.positionScreen;
      t1.x = $.mul(t1.x, this._canvasWidthHalf);
      t1.y = $.mul(t1.y, this._canvasHeightHalf);
      t2 = _v2.positionScreen;
      t2.x = $.mul(t2.x, this._canvasWidthHalf);
      t2.y = $.mul(t2.y, this._canvasHeightHalf);
      t3 = _v3.positionScreen;
      t3.x = $.mul(t3.x, this._canvasWidthHalf);
      t3.y = $.mul(t3.y, this._canvasHeightHalf);
      if (material.get$overdraw() === true) {
        this.expand$2(t1, t2);
        this.expand$2(t2, t3);
        this.expand$2(t3, t1);
      }
      this._bboxRect.add3Points$6(t1.x, t1.y, t2.x, t2.y, t3.x, t3.y);
      if (this._clipRect.intersects$1(this._bboxRect) === true)
        this.renderFace3$9(_v1, _v2, _v3, 0, 1, 2, element, material, scene);
    } else if (typeof element === 'object' && element !== null && !!element.is$RenderableFace4) {
      _v1 = element.v1;
      _v2 = element.v2;
      _v3 = element.v3;
      _v4 = element.v4;
      t1 = _v1.positionScreen;
      t1.x = $.mul(t1.x, this._canvasWidthHalf);
      t1.y = $.mul(t1.y, this._canvasHeightHalf);
      t2 = _v2.positionScreen;
      t2.x = $.mul(t2.x, this._canvasWidthHalf);
      t2.y = $.mul(t2.y, this._canvasHeightHalf);
      t3 = _v3.positionScreen;
      t3.x = $.mul(t3.x, this._canvasWidthHalf);
      t3.y = $.mul(t3.y, this._canvasHeightHalf);
      t4 = _v4.positionScreen;
      t4.x = $.mul(t4.x, this._canvasWidthHalf);
      t4.y = $.mul(t4.y, this._canvasHeightHalf);
      this._v5.positionScreen.copy$1(t2);
      this._v6.positionScreen.copy$1(t4);
      if (material.get$overdraw() === true) {
        this.expand$2(t1, t2);
        this.expand$2(t2, t4);
        this.expand$2(t4, t1);
        this.expand$2(t3, this._v5.positionScreen);
        this.expand$2(t3, this._v6.positionScreen);
      }
      this._bboxRect.addPoint$2(t1.x, t1.y);
      this._bboxRect.addPoint$2(t2.x, t2.y);
      this._bboxRect.addPoint$2(t3.x, t3.y);
      this._bboxRect.addPoint$2(t4.x, t4.y);
      if (this._clipRect.intersects$1(this._bboxRect) === true)
        this.renderFace4$9(_v1, _v2, _v3, _v4, this._v5, this._v6, element, material, scene);
    }
    if (this.debug === true) {
      this._context.set$lineWidth(1);
      this._context.set$strokeStyle('rgba( 0, 255, 0, 0.5 )');
      this._context.strokeRect$4(this._bboxRect.getX$0(), this._bboxRect.getY$0(), this._bboxRect.getWidth$0(), this._bboxRect.getHeight$0());
    }
    this._clearRect.addRectangle$1(this._bboxRect);
  }
  if (this.debug === true) {
    this._context.set$lineWidth(1);
    this._context.set$strokeStyle('rgba( 255, 0, 0, 0.5 )');
    this._context.strokeRect$4(this._clearRect.getX$0(), this._clearRect.getY$0(), this._clearRect.getWidth$0(), this._clearRect.getHeight$0());
  }
  this._context.setTransform$6(1, 0, 0, 1, 0, 0);
},
 render$2$bailout: function(state0, scene, el) {
  var e, element, material, _v1, _v2, t1, t2, _v3, t3, _v4, t4;
  for (e = 0; $.ltB(e, el); ++e) {
    element = $.index(this._lib1_elements, e);
    material = element.get$material();
    if (typeof material === 'object' && material !== null && !!material.is$MeshFaceMaterial)
      material = element.get$faceMaterial();
    if (material == null || $.eqB(material.get$opacity(), 0))
      continue;
    this._bboxRect.empty$0();
    if (this.debug === true)
      $.print($.S(element));
    if (typeof element === 'object' && element !== null && !!element.is$RenderableParticle) {
      element.x = $.mul(element.x, this._canvasWidthHalf);
      element.y = $.mul(element.y, this._canvasHeightHalf);
      this.renderParticle$4(element, element, material, scene);
    } else if (typeof element === 'object' && element !== null && !!element.is$RenderableLine) {
      _v1 = element.v1;
      _v2 = element.v2;
      t1 = _v1.positionScreen;
      t1.x = $.mul(t1.x, this._canvasWidthHalf);
      t1.y = $.mul(t1.y, this._canvasHeightHalf);
      t2 = _v2.positionScreen;
      t2.x = $.mul(t2.x, this._canvasWidthHalf);
      t2.y = $.mul(t2.y, this._canvasHeightHalf);
      this._bboxRect.addPoint$2(t1.x, t1.y);
      this._bboxRect.addPoint$2(t2.x, t2.y);
      if (this._clipRect.intersects$1(this._bboxRect) === true)
        this.renderLine$5(_v1, _v2, element, material, scene);
    } else if (typeof element === 'object' && element !== null && !!element.is$RenderableFace3) {
      _v1 = element.v1;
      _v2 = element.v2;
      _v3 = element.v3;
      t1 = _v1.positionScreen;
      t1.x = $.mul(t1.x, this._canvasWidthHalf);
      t1.y = $.mul(t1.y, this._canvasHeightHalf);
      t2 = _v2.positionScreen;
      t2.x = $.mul(t2.x, this._canvasWidthHalf);
      t2.y = $.mul(t2.y, this._canvasHeightHalf);
      t3 = _v3.positionScreen;
      t3.x = $.mul(t3.x, this._canvasWidthHalf);
      t3.y = $.mul(t3.y, this._canvasHeightHalf);
      if (material.get$overdraw() === true) {
        this.expand$2(t1, t2);
        this.expand$2(t2, t3);
        this.expand$2(t3, t1);
      }
      this._bboxRect.add3Points$6(t1.x, t1.y, t2.x, t2.y, t3.x, t3.y);
      if (this._clipRect.intersects$1(this._bboxRect) === true)
        this.renderFace3$9(_v1, _v2, _v3, 0, 1, 2, element, material, scene);
    } else if (typeof element === 'object' && element !== null && !!element.is$RenderableFace4) {
      _v1 = element.v1;
      _v2 = element.v2;
      _v3 = element.v3;
      _v4 = element.v4;
      t1 = _v1.positionScreen;
      t1.x = $.mul(t1.x, this._canvasWidthHalf);
      t1.y = $.mul(t1.y, this._canvasHeightHalf);
      t2 = _v2.positionScreen;
      t2.x = $.mul(t2.x, this._canvasWidthHalf);
      t2.y = $.mul(t2.y, this._canvasHeightHalf);
      t3 = _v3.positionScreen;
      t3.x = $.mul(t3.x, this._canvasWidthHalf);
      t3.y = $.mul(t3.y, this._canvasHeightHalf);
      t4 = _v4.positionScreen;
      t4.x = $.mul(t4.x, this._canvasWidthHalf);
      t4.y = $.mul(t4.y, this._canvasHeightHalf);
      this._v5.positionScreen.copy$1(t2);
      this._v6.positionScreen.copy$1(t4);
      if (material.get$overdraw() === true) {
        this.expand$2(t1, t2);
        this.expand$2(t2, t4);
        this.expand$2(t4, t1);
        this.expand$2(t3, this._v5.positionScreen);
        this.expand$2(t3, this._v6.positionScreen);
      }
      this._bboxRect.addPoint$2(t1.x, t1.y);
      this._bboxRect.addPoint$2(t2.x, t2.y);
      this._bboxRect.addPoint$2(t3.x, t3.y);
      this._bboxRect.addPoint$2(t4.x, t4.y);
      if (this._clipRect.intersects$1(this._bboxRect) === true)
        this.renderFace4$9(_v1, _v2, _v3, _v4, this._v5, this._v6, element, material, scene);
    }
    if (this.debug === true) {
      this._context.set$lineWidth(1);
      this._context.set$strokeStyle('rgba( 0, 255, 0, 0.5 )');
      this._context.strokeRect$4(this._bboxRect.getX$0(), this._bboxRect.getY$0(), this._bboxRect.getWidth$0(), this._bboxRect.getHeight$0());
    }
    this._clearRect.addRectangle$1(this._bboxRect);
  }
  if (this.debug === true) {
    this._context.set$lineWidth(1);
    this._context.set$strokeStyle('rgba( 255, 0, 0, 0.5 )');
    this._context.strokeRect$4(this._clearRect.getX$0(), this._clearRect.getY$0(), this._clearRect.getWidth$0(), this._clearRect.getHeight$0());
  }
  this._context.setTransform$6(1, 0, 0, 1, 0, 0);
},
 calculateLights$1: function(lights) {
  var ll, l, light, lightColor, t1;
  if (typeof lights !== 'string' && (typeof lights !== 'object' || lights === null || lights.constructor !== Array && !lights.is$JavaScriptIndexingBehavior()))
    return this.calculateLights$1$bailout(1, lights);
  this._ambientLight.setRGB$3(0, 0, 0);
  this._directionalLights.setRGB$3(0, 0, 0);
  this._pointLights.setRGB$3(0, 0, 0);
  ll = lights.length;
  for (l = 0; l < ll; ++l) {
    if (l >= lights.length)
      throw $.ioore(l);
    light = lights[l];
    lightColor = light.get$color();
    if (typeof light === 'object' && light !== null && !!light.is$AmbientLight) {
      t1 = this._ambientLight;
      t1.r = $.add(t1.r, lightColor.get$r());
      t1 = this._ambientLight;
      t1.g = $.add(t1.g, lightColor.get$g());
      t1 = this._ambientLight;
      t1.b = $.add(t1.b, lightColor.get$b());
    } else if (typeof light === 'object' && light !== null && !!light.is$DirectionalLight) {
      t1 = this._directionalLights;
      t1.r = $.add(t1.r, lightColor.get$r());
      t1 = this._directionalLights;
      t1.g = $.add(t1.g, lightColor.get$g());
      t1 = this._directionalLights;
      t1.b = $.add(t1.b, lightColor.get$b());
    } else if (typeof light === 'object' && light !== null && !!light.is$PointLight) {
      t1 = this._pointLights;
      t1.r = $.add(t1.r, lightColor.get$r());
      t1 = this._pointLights;
      t1.g = $.add(t1.g, lightColor.get$g());
      t1 = this._pointLights;
      t1.b = $.add(t1.b, lightColor.get$b());
    }
  }
},
 calculateLights$1$bailout: function(state0, lights) {
  var ll, l, light, lightColor, t1;
  this._ambientLight.setRGB$3(0, 0, 0);
  this._directionalLights.setRGB$3(0, 0, 0);
  this._pointLights.setRGB$3(0, 0, 0);
  ll = $.get$length(lights);
  for (l = 0; $.ltB(l, ll); ++l) {
    light = $.index(lights, l);
    lightColor = light.get$color();
    if (typeof light === 'object' && light !== null && !!light.is$AmbientLight) {
      t1 = this._ambientLight;
      t1.r = $.add(t1.r, lightColor.get$r());
      t1 = this._ambientLight;
      t1.g = $.add(t1.g, lightColor.get$g());
      t1 = this._ambientLight;
      t1.b = $.add(t1.b, lightColor.get$b());
    } else if (typeof light === 'object' && light !== null && !!light.is$DirectionalLight) {
      t1 = this._directionalLights;
      t1.r = $.add(t1.r, lightColor.get$r());
      t1 = this._directionalLights;
      t1.g = $.add(t1.g, lightColor.get$g());
      t1 = this._directionalLights;
      t1.b = $.add(t1.b, lightColor.get$b());
    } else if (typeof light === 'object' && light !== null && !!light.is$PointLight) {
      t1 = this._pointLights;
      t1.r = $.add(t1.r, lightColor.get$r());
      t1 = this._pointLights;
      t1.g = $.add(t1.g, lightColor.get$g());
      t1 = this._pointLights;
      t1.b = $.add(t1.b, lightColor.get$b());
    }
  }
},
 calculateLight$4: function(lights, position, normal, color) {
  var ll, l, lightPosition, amount, light, lightColor;
  if (typeof lights !== 'string' && (typeof lights !== 'object' || lights === null || lights.constructor !== Array && !lights.is$JavaScriptIndexingBehavior()))
    return this.calculateLight$4$bailout(1, lights, position, normal, color);
  ll = lights.length;
  for (l = 0, lightPosition = null, amount = null; l < ll; ++l) {
    if (l >= lights.length)
      throw $.ioore(l);
    light = lights[l];
    lightColor = light.get$color();
    if (typeof light === 'object' && light !== null && !!light.is$DirectionalLight) {
      lightPosition = light.matrixWorld.getPosition$0();
      amount = normal.dot$1(lightPosition);
      if ($.leB(amount, 0))
        continue;
      amount = $.mul(amount, light.intensity);
      color.r = $.add(color.r, $.mul(lightColor.get$r(), amount));
      color.g = $.add(color.g, $.mul(lightColor.get$g(), amount));
      color.b = $.add(color.b, $.mul(lightColor.get$b(), amount));
    } else if (typeof light === 'object' && light !== null && !!light.is$PointLight) {
      lightPosition = light.matrixWorld.getPosition$0();
      amount = normal.dot$1(this._vector3.sub$2(lightPosition, position).normalize$0());
      if ($.leB(amount, 0))
        continue;
      amount = $.mul(amount, $.eqB(light.distance, 0) ? 1 : 1 - $.min($.div(position.distanceTo$1(lightPosition), light.distance), 1));
      if ($.eqB(amount, 0))
        continue;
      amount = $.mul(amount, light.intensity);
      color.r = $.add(color.r, $.mul(lightColor.get$r(), amount));
      color.g = $.add(color.g, $.mul(lightColor.get$g(), amount));
      color.b = $.add(color.b, $.mul(lightColor.get$b(), amount));
    }
  }
},
 calculateLight$4$bailout: function(state0, lights, position, normal, color) {
  var ll, l, lightPosition, amount, light, lightColor;
  ll = $.get$length(lights);
  for (l = 0, lightPosition = null, amount = null; $.ltB(l, ll); ++l) {
    light = $.index(lights, l);
    lightColor = light.get$color();
    if (typeof light === 'object' && light !== null && !!light.is$DirectionalLight) {
      lightPosition = light.matrixWorld.getPosition$0();
      amount = normal.dot$1(lightPosition);
      if ($.leB(amount, 0))
        continue;
      amount = $.mul(amount, light.intensity);
      color.r = $.add(color.r, $.mul(lightColor.get$r(), amount));
      color.g = $.add(color.g, $.mul(lightColor.get$g(), amount));
      color.b = $.add(color.b, $.mul(lightColor.get$b(), amount));
    } else if (typeof light === 'object' && light !== null && !!light.is$PointLight) {
      lightPosition = light.matrixWorld.getPosition$0();
      amount = normal.dot$1(this._vector3.sub$2(lightPosition, position).normalize$0());
      if ($.leB(amount, 0))
        continue;
      amount = $.mul(amount, $.eqB(light.distance, 0) ? 1 : 1 - $.min($.div(position.distanceTo$1(lightPosition), light.distance), 1));
      if ($.eqB(amount, 0))
        continue;
      amount = $.mul(amount, light.intensity);
      color.r = $.add(color.r, $.mul(lightColor.get$r(), amount));
      color.g = $.add(color.g, $.mul(lightColor.get$g(), amount));
      color.b = $.add(color.b, $.mul(lightColor.get$b(), amount));
    }
  }
},
 renderParticle$4: function(v1, element, material, scene) {
  var t1, bitmap, bitmapWidth, bitmapHeight, t4, t6, scaleX, scaleY, width, height, t10, t11, t13, t2, t7, t9, t8;
  this.setOpacity$1(material.get$opacity());
  this.setBlending$1(material.get$blending());
  if (typeof material === 'object' && material !== null && !!material.is$ParticleBasicMaterial) {
    t1 = material.map;
    if (t1 === true) {
      bitmap = t1.get$image();
      t1 = bitmap.get$width();
      if (t1 !== (t1 | 0))
        return this.renderParticle$4$bailout(1, v1, element, bitmap, t1);
      bitmapWidth = $.shr(t1, 1);
      t1 = bitmap.get$height();
      if (t1 !== (t1 | 0))
        return this.renderParticle$4$bailout(2, v1, element, t1, bitmapWidth, bitmap);
      bitmapHeight = $.shr(t1, 1);
      t1 = element.scale;
      t4 = t1.x;
      if (typeof t4 !== 'number')
        return this.renderParticle$4$bailout(3, v1, element, bitmap, bitmapWidth, bitmapHeight, t1, t4);
      t6 = this._canvasWidthHalf;
      if (typeof t6 !== 'number')
        return this.renderParticle$4$bailout(4, v1, element, bitmap, bitmapWidth, bitmapHeight, t1, t4, t6);
      scaleX = t4 * t6;
      t1 = t1.y;
      if (typeof t1 !== 'number')
        return this.renderParticle$4$bailout(5, v1, scaleX, element, t1, bitmap, bitmapWidth, bitmapHeight);
      t4 = this._canvasHeightHalf;
      if (typeof t4 !== 'number')
        return this.renderParticle$4$bailout(6, v1, scaleX, element, t4, t1, bitmap, bitmapWidth, bitmapHeight);
      scaleY = t1 * t4;
      width = scaleX * bitmapWidth;
      height = scaleY * bitmapHeight;
      t4 = this._bboxRect;
      t1 = v1.x;
      if (typeof t1 !== 'number')
        return this.renderParticle$4$bailout(7, v1, scaleX, element, t4, bitmap, scaleY, width, bitmapWidth, height, t1, bitmapHeight);
      t10 = t1 - width;
      t11 = v1.y;
      if (typeof t11 !== 'number')
        return this.renderParticle$4$bailout(8, v1, scaleX, element, scaleY, width, height, t10, t4, bitmap, t11, bitmapWidth, bitmapHeight);
      t13 = t11 - height;
      t1 += width;
      t4.setValues$4(t10, t13, t1, t11 + height);
      if (this._clipRect.intersects$1(this._bboxRect) !== true)
        return;
      this._context.save$0();
      this._context.translate$2(v1.x, v1.y);
      t1 = this._context;
      t2 = element.rotation;
      if (typeof t2 !== 'number')
        return this.renderParticle$4$bailout(11, v1, scaleX, bitmap, scaleY, bitmapWidth, bitmapHeight, t1, t2);
      t1.rotate$1(-t2);
      this._context.scale$2(scaleX, -scaleY);
      this._context.translate$2(-bitmapWidth, -bitmapHeight);
      this._context.drawImage$3(bitmap, 0, 0);
      this._context.restore$0();
    }
    if (this.debug === true) {
      this._context.beginPath$0();
      t1 = this._context;
      t2 = v1.x;
      if (typeof t2 !== 'number')
        return this.renderParticle$4$bailout(12, v1, t1, t2);
      t1.moveTo$2(t2 - 10, v1.y);
      t1 = this._context;
      t4 = v1.x;
      if (typeof t4 !== 'number')
        return this.renderParticle$4$bailout(13, v1, t1, t4);
      t1.lineTo$2(t4 + 10, v1.y);
      t1 = this._context;
      t6 = v1.x;
      t7 = v1.y;
      if (typeof t7 !== 'number')
        return this.renderParticle$4$bailout(14, v1, t1, t6, t7);
      t1.moveTo$2(t6, t7 - 10);
      t6 = this._context;
      t1 = v1.x;
      t9 = v1.y;
      if (typeof t9 !== 'number')
        return this.renderParticle$4$bailout(15, v1, t1, t9, t6);
      t6.lineTo$2(t1, t9 + 10);
      this._context.closePath$0();
      this._context.set$strokeStyle('rgb(255,255,0)');
      this._context.stroke$0();
      if (this.debug === true)
        $.print('renderParticle ' + $.S(v1) + ' at (' + $.S(v1.x) + ', ' + $.S(v1.y) + ')');
    }
  } else if (typeof material === 'object' && material !== null && !!material.is$ParticleCanvasMaterial) {
    t1 = element.scale;
    t2 = t1.x;
    if (typeof t2 !== 'number')
      return this.renderParticle$4$bailout(16, v1, element, material, t1, t2);
    t4 = this._canvasWidthHalf;
    if (typeof t4 !== 'number')
      return this.renderParticle$4$bailout(17, v1, element, material, t1, t2, t4);
    width = t2 * t4;
    t1 = t1.y;
    if (typeof t1 !== 'number')
      return this.renderParticle$4$bailout(18, v1, element, material, width, t1);
    t2 = this._canvasHeightHalf;
    if (typeof t2 !== 'number')
      return this.renderParticle$4$bailout(19, v1, element, material, width, t1, t2);
    height = t1 * t2;
    t2 = this._bboxRect;
    t1 = v1.x;
    if (typeof t1 !== 'number')
      return this.renderParticle$4$bailout(20, v1, element, material, height, width, t2, t1);
    t8 = t1 - width;
    t9 = v1.y;
    if (typeof t9 !== 'number')
      return this.renderParticle$4$bailout(21, v1, element, material, t8, t9, width, t2, height);
    t11 = t9 - height;
    t1 += width;
    t2.setValues$4(t8, t11, t1, t9 + height);
    if (this._clipRect.intersects$1(this._bboxRect) !== true)
      return;
    this.setStrokeStyle$1(material.color.getContextStyle$0());
    this.setFillStyle$1(material.color.getContextStyle$0());
    this._context.save$0();
    this._context.translate$2(v1.x, v1.y);
    t1 = this._context;
    t2 = element.rotation;
    if (typeof t2 !== 'number')
      return this.renderParticle$4$bailout(24, t1, material, width, t2, height);
    t1.rotate$1(-t2);
    this._context.scale$2(width, height);
    material.program$1(this._context);
    this._context.restore$0();
  }
},
 renderParticle$4$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12) {
  switch (state0) {
    case 1:
      t1 = env3;
      bitmap = env2;
      element = env1;
      v1 = env0;
      break;
    case 2:
      bitmap = env4;
      bitmapWidth = env3;
      t1 = env2;
      element = env1;
      v1 = env0;
      break;
    case 3:
      t4 = env6;
      t1 = env5;
      bitmapHeight = env4;
      bitmapWidth = env3;
      bitmap = env2;
      element = env1;
      v1 = env0;
      break;
    case 4:
      t6 = env7;
      t4 = env6;
      t1 = env5;
      bitmapHeight = env4;
      bitmapWidth = env3;
      bitmap = env2;
      element = env1;
      v1 = env0;
      break;
    case 5:
      bitmapHeight = env6;
      bitmapWidth = env5;
      bitmap = env4;
      t1 = env3;
      element = env2;
      scaleX = env1;
      v1 = env0;
      break;
    case 6:
      bitmapHeight = env7;
      bitmapWidth = env6;
      bitmap = env5;
      t1 = env4;
      t4 = env3;
      element = env2;
      scaleX = env1;
      v1 = env0;
      break;
    case 7:
      bitmapHeight = env10;
      t1 = env9;
      height = env8;
      bitmapWidth = env7;
      width = env6;
      scaleY = env5;
      bitmap = env4;
      t4 = env3;
      element = env2;
      scaleX = env1;
      v1 = env0;
      break;
    case 8:
      bitmapHeight = env11;
      bitmapWidth = env10;
      t10 = env9;
      bitmap = env8;
      t4 = env7;
      t1 = env6;
      height = env5;
      width = env4;
      scaleY = env3;
      element = env2;
      scaleX = env1;
      v1 = env0;
      break;
    case 9:
      bitmapHeight = env12;
      bitmapWidth = env11;
      t12 = env10;
      bitmap = env9;
      t4 = env8;
      t10 = env7;
      t1 = env6;
      height = env5;
      width = env4;
      scaleY = env3;
      element = env2;
      scaleX = env1;
      v1 = env0;
      break;
    case 10:
      bitmapHeight = env12;
      bitmapWidth = env11;
      t14 = env10;
      bitmap = env9;
      t12 = env8;
      t4 = env7;
      t10 = env6;
      t1 = env5;
      height = env4;
      scaleY = env3;
      element = env2;
      scaleX = env1;
      v1 = env0;
      break;
    case 11:
      t2 = env7;
      t1 = env6;
      bitmapHeight = env5;
      bitmapWidth = env4;
      scaleY = env3;
      bitmap = env2;
      scaleX = env1;
      v1 = env0;
      break;
    case 12:
      t2 = env2;
      t1 = env1;
      v1 = env0;
      break;
    case 13:
      t4 = env2;
      t1 = env1;
      v1 = env0;
      break;
    case 14:
      t7 = env3;
      t6 = env2;
      t1 = env1;
      v1 = env0;
      break;
    case 15:
      t6 = env3;
      t9 = env2;
      t1 = env1;
      v1 = env0;
      break;
    case 16:
      t2 = env4;
      t1 = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 17:
      t4 = env5;
      t2 = env4;
      t1 = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 18:
      t1 = env4;
      width = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 19:
      t2 = env5;
      t1 = env4;
      width = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 20:
      t1 = env6;
      t2 = env5;
      width = env4;
      height = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 21:
      height = env7;
      t2 = env6;
      width = env5;
      t8 = env4;
      t1 = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 22:
      height = env8;
      t2 = env7;
      width = env6;
      t8 = env5;
      t10 = env4;
      t1 = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 23:
      height = env9;
      t2 = env8;
      width = env7;
      t10 = env6;
      t8 = env5;
      t12 = env4;
      t1 = env3;
      material = env2;
      element = env1;
      v1 = env0;
      break;
    case 24:
      height = env4;
      t2 = env3;
      width = env2;
      material = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.setOpacity$1(material.get$opacity());
      this.setBlending$1(material.get$blending());
    default:
      var t1, bitmap, element, v1, bitmapWidth, bitmapHeight, t4, t6, scaleX, scaleY, width, height, t10, t12, t14, t2, t7, t9, material, t8;
      if (state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof material === 'object' && material !== null && !!material.is$ParticleBasicMaterial)
        switch (state0) {
          case 0:
            t1 = material.map;
          default:
            if (state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && t1 === true)
              switch (state0) {
                case 0:
                  bitmap = t1.get$image();
                  t1 = bitmap.get$width();
                case 1:
                  state0 = 0;
                  bitmapWidth = $.shr(t1, 1);
                  t1 = bitmap.get$height();
                case 2:
                  state0 = 0;
                  bitmapHeight = $.shr(t1, 1);
                  t1 = element.scale;
                  t4 = t1.x;
                case 3:
                  state0 = 0;
                  t6 = this._canvasWidthHalf;
                case 4:
                  state0 = 0;
                  scaleX = $.mul(t4, t6);
                  t1 = t1.y;
                case 5:
                  state0 = 0;
                  t4 = this._canvasHeightHalf;
                case 6:
                  state0 = 0;
                  scaleY = $.mul(t1, t4);
                  width = $.mul(scaleX, bitmapWidth);
                  height = $.mul(scaleY, bitmapHeight);
                  t4 = this._bboxRect;
                  t1 = v1.x;
                case 7:
                  state0 = 0;
                  t1 = $.sub(t1, width);
                  t10 = v1.y;
                case 8:
                  state0 = 0;
                  t10 = $.sub(t10, height);
                  t12 = v1.x;
                case 9:
                  state0 = 0;
                  t12 = $.add(t12, width);
                  t14 = v1.y;
                case 10:
                  state0 = 0;
                  t4.setValues$4(t1, t10, t12, $.add(t14, height));
                  if (this._clipRect.intersects$1(this._bboxRect) !== true)
                    return;
                  this._context.save$0();
                  this._context.translate$2(v1.x, v1.y);
                  t1 = this._context;
                  t2 = element.rotation;
                case 11:
                  state0 = 0;
                  t1.rotate$1($.neg(t2));
                  this._context.scale$2(scaleX, $.neg(scaleY));
                  this._context.translate$2($.neg(bitmapWidth), $.neg(bitmapHeight));
                  this._context.drawImage$3(bitmap, 0, 0);
                  this._context.restore$0();
              }
          case 12:
          case 13:
          case 14:
          case 15:
            if (state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && this.debug === true)
              switch (state0) {
                case 0:
                  this._context.beginPath$0();
                  t1 = this._context;
                  t2 = v1.x;
                case 12:
                  state0 = 0;
                  t1.moveTo$2($.sub(t2, 10), v1.y);
                  t1 = this._context;
                  t4 = v1.x;
                case 13:
                  state0 = 0;
                  t1.lineTo$2($.add(t4, 10), v1.y);
                  t1 = this._context;
                  t6 = v1.x;
                  t7 = v1.y;
                case 14:
                  state0 = 0;
                  t1.moveTo$2(t6, $.sub(t7, 10));
                  t6 = this._context;
                  t1 = v1.x;
                  t9 = v1.y;
                case 15:
                  state0 = 0;
                  t6.lineTo$2(t1, $.add(t9, 10));
                  this._context.closePath$0();
                  this._context.set$strokeStyle('rgb(255,255,0)');
                  this._context.stroke$0();
                  if (this.debug === true)
                    $.print('renderParticle ' + $.S(v1) + ' at (' + $.S(v1.x) + ', ' + $.S(v1.y) + ')');
              }
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 0 && typeof material === 'object' && material !== null && !!material.is$ParticleCanvasMaterial)
              switch (state0) {
                case 0:
                  t1 = element.scale;
                  t2 = t1.x;
                case 16:
                  state0 = 0;
                  t4 = this._canvasWidthHalf;
                case 17:
                  state0 = 0;
                  width = $.mul(t2, t4);
                  t1 = t1.y;
                case 18:
                  state0 = 0;
                  t2 = this._canvasHeightHalf;
                case 19:
                  state0 = 0;
                  height = $.mul(t1, t2);
                  t2 = this._bboxRect;
                  t1 = v1.x;
                case 20:
                  state0 = 0;
                  t1 = $.sub(t1, width);
                  t8 = v1.y;
                case 21:
                  state0 = 0;
                  t8 = $.sub(t8, height);
                  t10 = v1.x;
                case 22:
                  state0 = 0;
                  t10 = $.add(t10, width);
                  t12 = v1.y;
                case 23:
                  state0 = 0;
                  t2.setValues$4(t1, t8, t10, $.add(t12, height));
                  if (this._clipRect.intersects$1(this._bboxRect) !== true)
                    return;
                  this.setStrokeStyle$1(material.color.getContextStyle$0());
                  this.setFillStyle$1(material.color.getContextStyle$0());
                  this._context.save$0();
                  this._context.translate$2(v1.x, v1.y);
                  t1 = this._context;
                  t2 = element.rotation;
                case 24:
                  state0 = 0;
                  t1.rotate$1($.neg(t2));
                  this._context.scale$2(width, height);
                  material.program$1(this._context);
                  this._context.restore$0();
              }
        }
  }
},
 renderLine$5: function(v1, v2, element, material, scene) {
  var t1;
  this.setOpacity$1(material.get$opacity());
  this.setBlending$1(material.get$blending());
  this._context.beginPath$0();
  this._context.moveTo$2(v1.get$positionScreen().get$x(), v1.get$positionScreen().get$y());
  this._context.lineTo$2(v2.get$positionScreen().get$x(), v2.get$positionScreen().get$y());
  this._context.closePath$0();
  if (typeof material === 'object' && material !== null && !!material.is$LineBasicMaterial) {
    t1 = material.linewidth;
    if (typeof t1 !== 'number')
      return this.renderLine$5$bailout(1, v1, v2, element, material, t1);
    this.setLineWidth$1(t1);
    this.setLineCap$1(material.linecap);
    this.setLineJoin$1(material.linejoin);
    this.setStrokeStyle$1(material.color.getContextStyle$0());
    this._context.stroke$0();
    this._bboxRect.inflate$1(t1 * 2);
  }
  if (this.debug === true)
    $.print('renderLine ' + $.S(element) + ' at (' + $.S(v1.get$positionScreen().get$x()) + ', ' + $.S(v1.get$positionScreen().get$y()) + ') to (' + $.S(v2.get$positionScreen().get$x()) + ', ' + $.S(v2.get$positionScreen().get$y()) + ')');
},
 renderLine$5$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env4;
      material = env3;
      element = env2;
      v2 = env1;
      v1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.setOpacity$1(material.get$opacity());
      this.setBlending$1(material.get$blending());
      this._context.beginPath$0();
      this._context.moveTo$2(v1.get$positionScreen().get$x(), v1.get$positionScreen().get$y());
      this._context.lineTo$2(v2.get$positionScreen().get$x(), v2.get$positionScreen().get$y());
      this._context.closePath$0();
    case 1:
      var t1, material, element, v2, v1;
      if (state0 === 1 || state0 === 0 && typeof material === 'object' && material !== null && !!material.is$LineBasicMaterial)
        switch (state0) {
          case 0:
            t1 = material.linewidth;
          case 1:
            state0 = 0;
            this.setLineWidth$1(t1);
            this.setLineCap$1(material.linecap);
            this.setLineJoin$1(material.linejoin);
            this.setStrokeStyle$1(material.color.getContextStyle$0());
            this._context.stroke$0();
            this._bboxRect.inflate$1($.mul(t1, 2));
        }
      if (this.debug === true)
        $.print('renderLine ' + $.S(element) + ' at (' + $.S(v1.get$positionScreen().get$x()) + ', ' + $.S(v1.get$positionScreen().get$y()) + ') to (' + $.S(v2.get$positionScreen().get$x()) + ', ' + $.S(v2.get$positionScreen().get$y()) + ')');
  }
},
 renderFace3$9: function(v1, v2, v3, uv1, uv2, uv3, element, material, scene) {
  var t1, t2, t4, t5, t6, t7, t8, t9, t10, t12, t13, t14, t15, t16, cameraMatrix, t3, t18, t20, t24, t27, t29, t32, t33, t36, t40, t43, t45, t48, t50, t54, t57, t59, t62, t63, t66, t70, t73, t75, t78, t80, t84, t87, t89, t11, t17, t19, t21, t23, t25, t31, t35, t37, t39, t41, t47, t49, t51, t53, t55;
  t1 = this._info.render;
  t2 = t1.vertices;
  if (typeof t2 !== 'number')
    return this.renderFace3$9$bailout(1, v1, v2, v3, uv1, uv2, uv3, element, material, t1, t2);
  t1.vertices = t2 + 3;
  t1 = this._info.render;
  t4 = t1.faces;
  if (typeof t4 !== 'number')
    return this.renderFace3$9$bailout(2, v1, v2, v3, uv1, uv2, uv3, element, material, t1, t4);
  t1.faces = t4 + 1;
  this.setOpacity$1(material.get$opacity());
  this.setBlending$1(material.get$blending());
  this._v1x = v1.get$positionScreen().get$x();
  this._v1y = v1.get$positionScreen().get$y();
  this._v2x = v2.get$positionScreen().get$x();
  this._v2y = v2.get$positionScreen().get$y();
  this._v3x = v3.get$positionScreen().get$x();
  this._v3y = v3.get$positionScreen().get$y();
  this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y);
  if (typeof material === 'object' && material !== null && !!material.is$MeshBasicMaterial) {
    t1 = material.map;
    if (!(t1 == null)) {
      t2 = t1.get$mapping();
      if (typeof t2 === 'object' && t2 !== null && !!t2.is$UVMapping) {
        t2 = element.get$uvs();
        if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
          return this.renderFace3$9$bailout(3, t1, t2, uv1, uv2, uv3);
        if (0 >= t2.length)
          throw $.ioore(0);
        this._uvs = t2[0];
        t4 = this._v1x;
        t5 = this._v1y;
        t6 = this._v2x;
        t7 = this._v2y;
        t8 = this._v3x;
        t9 = this._v3y;
        t10 = this._uvs;
        if (typeof t10 !== 'string' && (typeof t10 !== 'object' || t10 === null || t10.constructor !== Array && !t10.is$JavaScriptIndexingBehavior()))
          return this.renderFace3$9$bailout(4, t6, t7, t8, t9, uv2, uv3, t1, t10, uv1, t4, t5);
        if (uv1 < 0 || uv1 >= t10.length)
          throw $.ioore(uv1);
        t12 = t10[uv1].get$u();
        if (uv1 >= t10.length)
          throw $.ioore(uv1);
        t13 = t10[uv1].get$v();
        if (uv2 < 0 || uv2 >= t10.length)
          throw $.ioore(uv2);
        t14 = t10[uv2].get$u();
        if (uv2 >= t10.length)
          throw $.ioore(uv2);
        t15 = t10[uv2].get$v();
        if (uv3 < 0 || uv3 >= t10.length)
          throw $.ioore(uv3);
        t16 = t10[uv3].get$u();
        if (uv3 >= t10.length)
          throw $.ioore(uv3);
        this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t13, t14, t15, t16, t10[uv3].get$v(), t1);
      }
    } else {
      t1 = material.envMap;
      if (!(null == t1)) {
        t2 = t1.get$mapping();
        if (typeof t2 === 'object' && t2 !== null && !!t2.is$SphericalReflectionMapping) {
          cameraMatrix = this._camera.get$matrixWorldInverse();
          t2 = this._vector3;
          t3 = element.get$vertexNormalsWorld();
          if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(10, cameraMatrix, uv1, t1, uv2, uv3, element, t3, t2);
          if (uv1 < 0 || uv1 >= t3.length)
            throw $.ioore(uv1);
          t2.copy$1(t3[uv1]);
          t2 = this._vector3.x;
          if (typeof t2 !== 'number')
            return this.renderFace3$9$bailout(11, cameraMatrix, t1, uv2, uv3, element, t2);
          t6 = cameraMatrix.get$elements();
          if (typeof t6 !== 'string' && (typeof t6 !== 'object' || t6 === null || t6.constructor !== Array && !t6.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(12, cameraMatrix, t1, uv2, uv3, element, t6, t2);
          if (0 >= t6.length)
            throw $.ioore(0);
          t6 = t6[0];
          if (typeof t6 !== 'number')
            return this.renderFace3$9$bailout(13, cameraMatrix, t1, uv2, uv3, element, t6, t2);
          t6 = t2 * t6;
          t2 = this._vector3.y;
          if (typeof t2 !== 'number')
            return this.renderFace3$9$bailout(14, cameraMatrix, t2, t1, uv2, uv3, element, t6);
          t10 = cameraMatrix.get$elements();
          if (typeof t10 !== 'string' && (typeof t10 !== 'object' || t10 === null || t10.constructor !== Array && !t10.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(15, cameraMatrix, t10, t2, t1, uv2, uv3, element, t6);
          if (4 >= t10.length)
            throw $.ioore(4);
          t10 = t10[4];
          if (typeof t10 !== 'number')
            return this.renderFace3$9$bailout(16, cameraMatrix, t2, t10, t1, uv2, uv3, element, t6);
          t6 += t2 * t10;
          t13 = this._vector3.z;
          if (typeof t13 !== 'number')
            return this.renderFace3$9$bailout(17, cameraMatrix, t1, uv2, uv3, element, t6, t13);
          t15 = cameraMatrix.get$elements();
          if (typeof t15 !== 'string' && (typeof t15 !== 'object' || t15 === null || t15.constructor !== Array && !t15.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(18, cameraMatrix, t1, uv2, uv3, element, t6, t13, t15);
          if (8 >= t15.length)
            throw $.ioore(8);
          t15 = t15[8];
          if (typeof t15 !== 'number')
            return this.renderFace3$9$bailout(19, cameraMatrix, t1, uv2, uv3, element, t6, t13, t15);
          this._uv1x = (t6 + t13 * t15) * 0.5 + 0.5;
          t18 = this._vector3.x;
          if (typeof t18 !== 'number')
            return this.renderFace3$9$bailout(20, cameraMatrix, t1, uv2, uv3, element, t18);
          t20 = cameraMatrix.get$elements();
          if (typeof t20 !== 'string' && (typeof t20 !== 'object' || t20 === null || t20.constructor !== Array && !t20.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(21, cameraMatrix, t1, uv2, uv3, element, t18, t20);
          if (1 >= t20.length)
            throw $.ioore(1);
          t20 = t20[1];
          if (typeof t20 !== 'number')
            return this.renderFace3$9$bailout(22, cameraMatrix, t1, uv2, uv3, element, t18, t20);
          t20 = t18 * t20;
          t18 = this._vector3.y;
          if (typeof t18 !== 'number')
            return this.renderFace3$9$bailout(23, cameraMatrix, t1, uv2, uv3, element, t18, t20);
          t24 = cameraMatrix.get$elements();
          if (typeof t24 !== 'string' && (typeof t24 !== 'object' || t24 === null || t24.constructor !== Array && !t24.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(24, cameraMatrix, t24, t1, uv2, uv3, element, t18, t20);
          if (5 >= t24.length)
            throw $.ioore(5);
          t24 = t24[5];
          if (typeof t24 !== 'number')
            return this.renderFace3$9$bailout(25, cameraMatrix, t1, uv2, uv3, element, t18, t24, t20);
          t20 += t18 * t24;
          t27 = this._vector3.z;
          if (typeof t27 !== 'number')
            return this.renderFace3$9$bailout(26, cameraMatrix, t1, uv2, uv3, element, t20, t27);
          t29 = cameraMatrix.get$elements();
          if (typeof t29 !== 'string' && (typeof t29 !== 'object' || t29 === null || t29.constructor !== Array && !t29.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(27, cameraMatrix, t1, uv2, uv3, element, t20, t27, t29);
          if (9 >= t29.length)
            throw $.ioore(9);
          t29 = t29[9];
          if (typeof t29 !== 'number')
            return this.renderFace3$9$bailout(28, cameraMatrix, t1, uv2, uv3, element, t20, t27, t29);
          this._uv1y = -(t20 + t27 * t29) * 0.5 + 0.5;
          t32 = this._vector3;
          t33 = element.get$vertexNormalsWorld();
          if (typeof t33 !== 'string' && (typeof t33 !== 'object' || t33 === null || t33.constructor !== Array && !t33.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(29, cameraMatrix, t1, uv2, uv3, element, t33, t32);
          if (uv2 < 0 || uv2 >= t33.length)
            throw $.ioore(uv2);
          t32.copy$1(t33[uv2]);
          t32 = this._vector3.x;
          if (typeof t32 !== 'number')
            return this.renderFace3$9$bailout(30, cameraMatrix, t1, uv3, element, t32);
          t36 = cameraMatrix.get$elements();
          if (typeof t36 !== 'string' && (typeof t36 !== 'object' || t36 === null || t36.constructor !== Array && !t36.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(31, cameraMatrix, t36, t1, uv3, element, t32);
          if (0 >= t36.length)
            throw $.ioore(0);
          t36 = t36[0];
          if (typeof t36 !== 'number')
            return this.renderFace3$9$bailout(32, cameraMatrix, t36, t1, uv3, element, t32);
          t36 = t32 * t36;
          t32 = this._vector3.y;
          if (typeof t32 !== 'number')
            return this.renderFace3$9$bailout(33, cameraMatrix, t32, t1, t36, uv3, element);
          t40 = cameraMatrix.get$elements();
          if (typeof t40 !== 'string' && (typeof t40 !== 'object' || t40 === null || t40.constructor !== Array && !t40.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(34, cameraMatrix, t32, t1, t36, uv3, element, t40);
          if (4 >= t40.length)
            throw $.ioore(4);
          t40 = t40[4];
          if (typeof t40 !== 'number')
            return this.renderFace3$9$bailout(35, cameraMatrix, t32, t1, t36, uv3, element, t40);
          t36 += t32 * t40;
          t43 = this._vector3.z;
          if (typeof t43 !== 'number')
            return this.renderFace3$9$bailout(36, cameraMatrix, t43, t1, uv3, element, t36);
          t45 = cameraMatrix.get$elements();
          if (typeof t45 !== 'string' && (typeof t45 !== 'object' || t45 === null || t45.constructor !== Array && !t45.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(37, cameraMatrix, t45, t43, t1, uv3, element, t36);
          if (8 >= t45.length)
            throw $.ioore(8);
          t45 = t45[8];
          if (typeof t45 !== 'number')
            return this.renderFace3$9$bailout(38, cameraMatrix, t43, t1, uv3, element, t45, t36);
          this._uv2x = (t36 + t43 * t45) * 0.5 + 0.5;
          t48 = this._vector3.x;
          if (typeof t48 !== 'number')
            return this.renderFace3$9$bailout(39, cameraMatrix, t1, uv3, element, t48);
          t50 = cameraMatrix.get$elements();
          if (typeof t50 !== 'string' && (typeof t50 !== 'object' || t50 === null || t50.constructor !== Array && !t50.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(40, cameraMatrix, t1, uv3, element, t48, t50);
          if (1 >= t50.length)
            throw $.ioore(1);
          t50 = t50[1];
          if (typeof t50 !== 'number')
            return this.renderFace3$9$bailout(41, cameraMatrix, t50, t1, uv3, element, t48);
          t50 = t48 * t50;
          t48 = this._vector3.y;
          if (typeof t48 !== 'number')
            return this.renderFace3$9$bailout(42, cameraMatrix, t50, t1, uv3, element, t48);
          t54 = cameraMatrix.get$elements();
          if (typeof t54 !== 'string' && (typeof t54 !== 'object' || t54 === null || t54.constructor !== Array && !t54.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(43, cameraMatrix, t50, t1, uv3, element, t48, t54);
          if (5 >= t54.length)
            throw $.ioore(5);
          t54 = t54[5];
          if (typeof t54 !== 'number')
            return this.renderFace3$9$bailout(44, cameraMatrix, t50, t1, uv3, element, t48, t54);
          t50 += t48 * t54;
          t57 = this._vector3.z;
          if (typeof t57 !== 'number')
            return this.renderFace3$9$bailout(45, cameraMatrix, t1, uv3, element, t57, t50);
          t59 = cameraMatrix.get$elements();
          if (typeof t59 !== 'string' && (typeof t59 !== 'object' || t59 === null || t59.constructor !== Array && !t59.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(46, cameraMatrix, t1, uv3, element, t57, t50, t59);
          if (9 >= t59.length)
            throw $.ioore(9);
          t59 = t59[9];
          if (typeof t59 !== 'number')
            return this.renderFace3$9$bailout(47, cameraMatrix, t59, t1, uv3, element, t57, t50);
          this._uv2y = -(t50 + t57 * t59) * 0.5 + 0.5;
          t62 = this._vector3;
          t63 = element.get$vertexNormalsWorld();
          if (typeof t63 !== 'string' && (typeof t63 !== 'object' || t63 === null || t63.constructor !== Array && !t63.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(48, cameraMatrix, t1, t62, uv3, t63);
          if (uv3 < 0 || uv3 >= t63.length)
            throw $.ioore(uv3);
          t62.copy$1(t63[uv3]);
          t62 = this._vector3.x;
          if (typeof t62 !== 'number')
            return this.renderFace3$9$bailout(49, cameraMatrix, t1, t62);
          t66 = cameraMatrix.get$elements();
          if (typeof t66 !== 'string' && (typeof t66 !== 'object' || t66 === null || t66.constructor !== Array && !t66.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(50, cameraMatrix, t1, t66, t62);
          if (0 >= t66.length)
            throw $.ioore(0);
          t66 = t66[0];
          if (typeof t66 !== 'number')
            return this.renderFace3$9$bailout(51, cameraMatrix, t1, t62, t66);
          t66 = t62 * t66;
          t62 = this._vector3.y;
          if (typeof t62 !== 'number')
            return this.renderFace3$9$bailout(52, cameraMatrix, t66, t1, t62);
          t70 = cameraMatrix.get$elements();
          if (typeof t70 !== 'string' && (typeof t70 !== 'object' || t70 === null || t70.constructor !== Array && !t70.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(53, cameraMatrix, t66, t1, t70, t62);
          if (4 >= t70.length)
            throw $.ioore(4);
          t70 = t70[4];
          if (typeof t70 !== 'number')
            return this.renderFace3$9$bailout(54, cameraMatrix, t66, t1, t70, t62);
          t66 += t62 * t70;
          t73 = this._vector3.z;
          if (typeof t73 !== 'number')
            return this.renderFace3$9$bailout(55, cameraMatrix, t66, t73, t1);
          t75 = cameraMatrix.get$elements();
          if (typeof t75 !== 'string' && (typeof t75 !== 'object' || t75 === null || t75.constructor !== Array && !t75.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(56, cameraMatrix, t66, t73, t1, t75);
          if (8 >= t75.length)
            throw $.ioore(8);
          t75 = t75[8];
          if (typeof t75 !== 'number')
            return this.renderFace3$9$bailout(57, cameraMatrix, t66, t73, t1, t75);
          this._uv3x = (t66 + t73 * t75) * 0.5 + 0.5;
          t78 = this._vector3.x;
          if (typeof t78 !== 'number')
            return this.renderFace3$9$bailout(58, cameraMatrix, t1, t78);
          t80 = cameraMatrix.get$elements();
          if (typeof t80 !== 'string' && (typeof t80 !== 'object' || t80 === null || t80.constructor !== Array && !t80.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(59, cameraMatrix, t80, t1, t78);
          if (1 >= t80.length)
            throw $.ioore(1);
          t80 = t80[1];
          if (typeof t80 !== 'number')
            return this.renderFace3$9$bailout(60, cameraMatrix, t1, t80, t78);
          t80 = t78 * t80;
          t78 = this._vector3.y;
          if (typeof t78 !== 'number')
            return this.renderFace3$9$bailout(61, cameraMatrix, t1, t80, t78);
          t84 = cameraMatrix.get$elements();
          if (typeof t84 !== 'string' && (typeof t84 !== 'object' || t84 === null || t84.constructor !== Array && !t84.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(62, cameraMatrix, t84, t1, t80, t78);
          if (5 >= t84.length)
            throw $.ioore(5);
          t84 = t84[5];
          if (typeof t84 !== 'number')
            return this.renderFace3$9$bailout(63, cameraMatrix, t84, t1, t80, t78);
          t80 += t78 * t84;
          t87 = this._vector3.z;
          if (typeof t87 !== 'number')
            return this.renderFace3$9$bailout(64, cameraMatrix, t87, t1, t80);
          t89 = cameraMatrix.get$elements();
          if (typeof t89 !== 'string' && (typeof t89 !== 'object' || t89 === null || t89.constructor !== Array && !t89.is$JavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(65, t87, t89, t1, t80);
          if (9 >= t89.length)
            throw $.ioore(9);
          t89 = t89[9];
          if (typeof t89 !== 'number')
            return this.renderFace3$9$bailout(66, t87, t1, t89, t80);
          this._uv3y = -(t80 + t87 * t89) * 0.5 + 0.5;
          this.patternPath$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._uv1x, this._uv1y, this._uv2x, this._uv2y, this._uv3x, this._uv3y, t1);
        }
      } else {
        t1 = material.wireframe === true;
        t2 = material.color;
        if (t1)
          this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
        else {
          this.setFillStyle$1(t2.getContextStyle$0());
          this._context.fill$0();
        }
      }
    }
  } else if (typeof material === 'object' && material !== null && !!material.is$MeshLambertMaterial) {
    t1 = material.map;
    if (!(t1 == null) && material.wireframe !== true) {
      t2 = t1.get$mapping();
      if (typeof t2 === 'object' && t2 !== null && !!t2.is$UVMapping) {
        t2 = element.get$uvs();
        if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
          return this.renderFace3$9$bailout(67, t2, uv1, uv2, uv3, element, material, t1);
        if (0 >= t2.length)
          throw $.ioore(0);
        this._uvs = t2[0];
        t4 = this._v1x;
        t5 = this._v1y;
        t6 = this._v2x;
        t7 = this._v2y;
        t8 = this._v3x;
        t9 = this._v3y;
        t10 = this._uvs;
        if (typeof t10 !== 'string' && (typeof t10 !== 'object' || t10 === null || t10.constructor !== Array && !t10.is$JavaScriptIndexingBehavior()))
          return this.renderFace3$9$bailout(68, uv1, uv2, uv3, element, material, t4, t5, t6, t7, t8, t9, t10, t1);
        if (uv1 < 0 || uv1 >= t10.length)
          throw $.ioore(uv1);
        t12 = t10[uv1].get$u();
        if (uv1 >= t10.length)
          throw $.ioore(uv1);
        t13 = t10[uv1].get$v();
        if (uv2 < 0 || uv2 >= t10.length)
          throw $.ioore(uv2);
        t14 = t10[uv2].get$u();
        if (uv2 >= t10.length)
          throw $.ioore(uv2);
        t15 = t10[uv2].get$v();
        if (uv3 < 0 || uv3 >= t10.length)
          throw $.ioore(uv3);
        t16 = t10[uv3].get$u();
        if (uv3 >= t10.length)
          throw $.ioore(uv3);
        this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t13, t14, t15, t16, t10[uv3].get$v(), t1);
      }
      this.setBlending$1(3);
    }
    if (this._enableLighting === true) {
      if (material.wireframe !== true) {
        t1 = material.shading;
        if (typeof t1 !== 'number')
          return this.renderFace3$9$bailout(74, t1, element, material);
        if (t1 === 2) {
          t1 = $.get$length(element.get$vertexNormalsWorld());
          if (typeof t1 !== 'number')
            return this.renderFace3$9$bailout(75, t1, element, material);
          t1 = t1 === 3;
        } else
          t1 = false;
      } else
        t1 = false;
      t2 = this._ambientLight.r;
      if (t1) {
        this._color3.r = t2;
        this._color2.r = t2;
        this._color1.r = t2;
        t1 = this._ambientLight.g;
        this._color3.g = t1;
        this._color2.g = t1;
        this._color1.g = t1;
        t1 = this._ambientLight.b;
        this._color3.b = t1;
        this._color2.b = t1;
        this._color1.b = t1;
        t1 = this._lights;
        t2 = element.get$v1().get$positionWorld();
        t3 = element.get$vertexNormalsWorld();
        if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
          return this.renderFace3$9$bailout(76, t2, t1, t3, element, material);
        if (0 >= t3.length)
          throw $.ioore(0);
        this.calculateLight$4(t1, t2, t3[0], this._color1);
        t2 = this._lights;
        t1 = element.get$v2().get$positionWorld();
        t5 = element.get$vertexNormalsWorld();
        if (typeof t5 !== 'string' && (typeof t5 !== 'object' || t5 === null || t5.constructor !== Array && !t5.is$JavaScriptIndexingBehavior()))
          return this.renderFace3$9$bailout(77, t1, t5, t2, element, material);
        if (1 >= t5.length)
          throw $.ioore(1);
        this.calculateLight$4(t2, t1, t5[1], this._color2);
        t1 = this._lights;
        t2 = element.get$v3().get$positionWorld();
        t7 = element.get$vertexNormalsWorld();
        if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
          return this.renderFace3$9$bailout(78, t2, t7, t1, material);
        if (2 >= t7.length)
          throw $.ioore(2);
        this.calculateLight$4(t1, t2, t7[2], this._color3);
        t2 = material.color.get$r();
        if (typeof t2 !== 'number')
          return this.renderFace3$9$bailout(79, t2, material);
        t9 = this._color1.r;
        if (typeof t9 !== 'number')
          return this.renderFace3$9$bailout(80, t2, t9, material);
        t11 = $.max(0, $.min(t2 * t9, 1));
        this._color1.r = t11;
        t11 = material.color.get$g();
        if (typeof t11 !== 'number')
          return this.renderFace3$9$bailout(81, t11, material);
        t13 = this._color1.g;
        if (typeof t13 !== 'number')
          return this.renderFace3$9$bailout(82, t11, t13, material);
        t15 = $.max(0, $.min(t11 * t13, 1));
        this._color1.g = t15;
        t15 = material.color.get$b();
        if (typeof t15 !== 'number')
          return this.renderFace3$9$bailout(83, t15, material);
        t17 = this._color1.b;
        if (typeof t17 !== 'number')
          return this.renderFace3$9$bailout(84, t17, t15, material);
        t19 = $.max(0, $.min(t15 * t17, 1));
        this._color1.b = t19;
        t19 = material.color.get$r();
        if (typeof t19 !== 'number')
          return this.renderFace3$9$bailout(85, t19, material);
        t21 = this._color2.r;
        if (typeof t21 !== 'number')
          return this.renderFace3$9$bailout(86, t19, t21, material);
        t23 = $.max(0, $.min(t19 * t21, 1));
        this._color2.r = t23;
        t23 = material.color.get$g();
        if (typeof t23 !== 'number')
          return this.renderFace3$9$bailout(87, t23, material);
        t25 = this._color2.g;
        if (typeof t25 !== 'number')
          return this.renderFace3$9$bailout(88, t23, t25, material);
        t27 = $.max(0, $.min(t23 * t25, 1));
        this._color2.g = t27;
        t27 = material.color.get$b();
        if (typeof t27 !== 'number')
          return this.renderFace3$9$bailout(89, t27, material);
        t29 = this._color2.b;
        if (typeof t29 !== 'number')
          return this.renderFace3$9$bailout(90, t27, t29, material);
        t31 = $.max(0, $.min(t27 * t29, 1));
        this._color2.b = t31;
        t31 = material.color.get$r();
        if (typeof t31 !== 'number')
          return this.renderFace3$9$bailout(91, t31, material);
        t33 = this._color3.r;
        if (typeof t33 !== 'number')
          return this.renderFace3$9$bailout(92, t33, t31, material);
        t35 = $.max(0, $.min(t31 * t33, 1));
        this._color3.r = t35;
        t35 = material.color.get$g();
        if (typeof t35 !== 'number')
          return this.renderFace3$9$bailout(93, t35, material);
        t37 = this._color3.g;
        if (typeof t37 !== 'number')
          return this.renderFace3$9$bailout(94, t35, t37, material);
        t39 = $.max(0, $.min(t35 * t37, 1));
        this._color3.g = t39;
        t39 = material.color.get$b();
        if (typeof t39 !== 'number')
          return this.renderFace3$9$bailout(95, t39);
        t41 = this._color3.b;
        if (typeof t41 !== 'number')
          return this.renderFace3$9$bailout(96, t39, t41);
        t43 = $.max(0, $.min(t39 * t41, 1));
        this._color3.b = t43;
        t43 = this._color2.r;
        if (typeof t43 !== 'number')
          return this.renderFace3$9$bailout(97, t43);
        t45 = this._color3.r;
        if (typeof t45 !== 'number')
          return this.renderFace3$9$bailout(98, t43, t45);
        t47 = (t43 + t45) * 0.5;
        this._color4.r = t47;
        t47 = this._color2.g;
        if (typeof t47 !== 'number')
          return this.renderFace3$9$bailout(99, t47);
        t49 = this._color3.g;
        if (typeof t49 !== 'number')
          return this.renderFace3$9$bailout(100, t47, t49);
        t51 = (t47 + t49) * 0.5;
        this._color4.g = t51;
        t51 = this._color2.b;
        if (typeof t51 !== 'number')
          return this.renderFace3$9$bailout(101, t51);
        t53 = this._color3.b;
        if (typeof t53 !== 'number')
          return this.renderFace3$9$bailout(102, t51, t53);
        t55 = (t51 + t53) * 0.5;
        this._color4.b = t55;
        this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
        this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
      } else {
        this._color.r = t2;
        t1 = this._ambientLight.g;
        this._color.g = t1;
        t1 = this._ambientLight.b;
        this._color.b = t1;
        this.calculateLight$4(this._lights, element.get$centroidWorld(), element.get$normalWorld(), this._color);
        t1 = material.color.get$r();
        if (typeof t1 !== 'number')
          return this.renderFace3$9$bailout(103, t1, material);
        t3 = this._color.r;
        if (typeof t3 !== 'number')
          return this.renderFace3$9$bailout(104, t3, t1, material);
        t5 = $.max(0, $.min(t1 * t3, 1));
        this._color.r = t5;
        t5 = material.color.get$g();
        if (typeof t5 !== 'number')
          return this.renderFace3$9$bailout(105, t5, material);
        t7 = this._color.g;
        if (typeof t7 !== 'number')
          return this.renderFace3$9$bailout(106, t7, t5, material);
        t9 = $.max(0, $.min(t5 * t7, 1));
        this._color.g = t9;
        t9 = material.color.get$b();
        if (typeof t9 !== 'number')
          return this.renderFace3$9$bailout(107, t9, material);
        t11 = this._color.b;
        if (typeof t11 !== 'number')
          return this.renderFace3$9$bailout(108, t11, t9, material);
        t13 = $.max(0, $.min(t9 * t11, 1));
        this._color.b = t13;
        t1 = material.wireframe === true;
        t2 = this._color;
        if (t1)
          this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
        else {
          this.setFillStyle$1(t2.getContextStyle$0());
          this._context.fill$0();
        }
      }
    } else {
      t1 = material.wireframe === true;
      t2 = material.color;
      if (t1)
        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
      else {
        this.setFillStyle$1(t2.getContextStyle$0());
        this._context.fill$0();
      }
    }
  } else if (typeof material === 'object' && material !== null && !!material.is$MeshDepthMaterial) {
    this._near = this._camera.get$near();
    this._far = this._camera.get$far();
    t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 1 - t1;
    this._color1.b = t1;
    this._color1.g = t1;
    this._color1.r = t1;
    t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 1 - t1;
    this._color2.b = t1;
    this._color2.g = t1;
    this._color2.r = t1;
    t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 1 - t1;
    this._color3.b = t1;
    this._color3.g = t1;
    this._color3.r = t1;
    t1 = this._color2.r;
    if (typeof t1 !== 'number')
      return this.renderFace3$9$bailout(109, t1);
    t3 = this._color3.r;
    if (typeof t3 !== 'number')
      return this.renderFace3$9$bailout(110, t1, t3);
    t5 = (t1 + t3) * 0.5;
    this._color4.r = t5;
    t5 = this._color2.g;
    if (typeof t5 !== 'number')
      return this.renderFace3$9$bailout(111, t5);
    t7 = this._color3.g;
    if (typeof t7 !== 'number')
      return this.renderFace3$9$bailout(112, t5, t7);
    t9 = (t5 + t7) * 0.5;
    this._color4.g = t9;
    t9 = this._color2.b;
    if (typeof t9 !== 'number')
      return this.renderFace3$9$bailout(113, t9);
    t11 = this._color3.b;
    if (typeof t11 !== 'number')
      return this.renderFace3$9$bailout(114, t9, t11);
    t13 = (t9 + t11) * 0.5;
    this._color4.b = t13;
    this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
    this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
  } else if (typeof material === 'object' && material !== null && !!material.is$MeshNormalMaterial) {
    t1 = this.normalToComponent$1(element.get$normalWorld().get$x());
    this._color.r = t1;
    t1 = this.normalToComponent$1(element.get$normalWorld().get$y());
    this._color.g = t1;
    t1 = this.normalToComponent$1(element.get$normalWorld().get$z());
    this._color.b = t1;
    t1 = material.wireframe === true;
    t2 = this._color;
    if (t1)
      this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
    else {
      this.setFillStyle$1(t2.getContextStyle$0());
      this._context.fill$0();
    }
  }
},
 renderFace3$9$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15) {
  switch (state0) {
    case 1:
      t2 = env9;
      t1 = env8;
      material = env7;
      element = env6;
      uv3 = env5;
      uv2 = env4;
      uv1 = env3;
      v3 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 2:
      t4 = env9;
      t1 = env8;
      material = env7;
      element = env6;
      uv3 = env5;
      uv2 = env4;
      uv1 = env3;
      v3 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 3:
      uv3 = env4;
      uv2 = env3;
      uv1 = env2;
      t2 = env1;
      t1 = env0;
      break;
    case 4:
      t5 = env10;
      t4 = env9;
      uv1 = env8;
      t10 = env7;
      t1 = env6;
      uv3 = env5;
      uv2 = env4;
      t9 = env3;
      t8 = env2;
      t7 = env1;
      t6 = env0;
      break;
    case 5:
      t5 = env11;
      t4 = env10;
      t12 = env9;
      uv1 = env8;
      t13 = env7;
      t1 = env6;
      uv3 = env5;
      uv2 = env4;
      t9 = env3;
      t8 = env2;
      t7 = env1;
      t6 = env0;
      break;
    case 6:
      t5 = env11;
      t4 = env10;
      t15 = env9;
      t12 = env8;
      t16 = env7;
      t1 = env6;
      uv3 = env5;
      uv2 = env4;
      t9 = env3;
      t8 = env2;
      t7 = env1;
      t6 = env0;
      break;
    case 7:
      t18 = env12;
      t4 = env11;
      t15 = env10;
      t12 = env9;
      t5 = env8;
      t19 = env7;
      t1 = env6;
      uv3 = env5;
      uv2 = env4;
      t9 = env3;
      t8 = env2;
      t7 = env1;
      t6 = env0;
      break;
    case 8:
      t5 = env12;
      t4 = env11;
      t15 = env10;
      t12 = env9;
      t18 = env8;
      t22 = env7;
      t1 = env6;
      uv3 = env5;
      t21 = env4;
      t9 = env3;
      t8 = env2;
      t7 = env1;
      t6 = env0;
      break;
    case 9:
      t5 = env13;
      t4 = env12;
      t15 = env11;
      t12 = env10;
      t18 = env9;
      t25 = env8;
      t24 = env7;
      t1 = env6;
      uv3 = env5;
      t21 = env4;
      t9 = env3;
      t8 = env2;
      t7 = env1;
      t6 = env0;
      break;
    case 10:
      t2 = env7;
      t3 = env6;
      element = env5;
      uv3 = env4;
      uv2 = env3;
      t1 = env2;
      uv1 = env1;
      cameraMatrix = env0;
      break;
    case 11:
      t2 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 12:
      t2 = env6;
      t6 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 13:
      t2 = env6;
      t6 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 14:
      t6 = env6;
      element = env5;
      uv3 = env4;
      uv2 = env3;
      t1 = env2;
      t2 = env1;
      cameraMatrix = env0;
      break;
    case 15:
      t6 = env7;
      element = env6;
      uv3 = env5;
      uv2 = env4;
      t1 = env3;
      t2 = env2;
      t10 = env1;
      cameraMatrix = env0;
      break;
    case 16:
      t6 = env7;
      element = env6;
      uv3 = env5;
      uv2 = env4;
      t1 = env3;
      t10 = env2;
      t2 = env1;
      cameraMatrix = env0;
      break;
    case 17:
      t13 = env6;
      t6 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 18:
      t15 = env7;
      t13 = env6;
      t6 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 19:
      t15 = env7;
      t13 = env6;
      t6 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 20:
      t18 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 21:
      t20 = env6;
      t18 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 22:
      t20 = env6;
      t18 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 23:
      t20 = env6;
      t18 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 24:
      t20 = env7;
      t18 = env6;
      element = env5;
      uv3 = env4;
      uv2 = env3;
      t1 = env2;
      t24 = env1;
      cameraMatrix = env0;
      break;
    case 25:
      t20 = env7;
      t24 = env6;
      t18 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 26:
      t27 = env6;
      t20 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 27:
      t29 = env7;
      t27 = env6;
      t20 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 28:
      t29 = env7;
      t27 = env6;
      t20 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 29:
      t32 = env6;
      t33 = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 30:
      t32 = env4;
      element = env3;
      uv3 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 31:
      t32 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t36 = env1;
      cameraMatrix = env0;
      break;
    case 32:
      t32 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t36 = env1;
      cameraMatrix = env0;
      break;
    case 33:
      element = env5;
      uv3 = env4;
      t36 = env3;
      t1 = env2;
      t32 = env1;
      cameraMatrix = env0;
      break;
    case 34:
      t40 = env6;
      element = env5;
      uv3 = env4;
      t36 = env3;
      t1 = env2;
      t32 = env1;
      cameraMatrix = env0;
      break;
    case 35:
      t40 = env6;
      element = env5;
      uv3 = env4;
      t36 = env3;
      t1 = env2;
      t32 = env1;
      cameraMatrix = env0;
      break;
    case 36:
      t36 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t43 = env1;
      cameraMatrix = env0;
      break;
    case 37:
      t36 = env6;
      element = env5;
      uv3 = env4;
      t1 = env3;
      t43 = env2;
      t45 = env1;
      cameraMatrix = env0;
      break;
    case 38:
      t36 = env6;
      t45 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t43 = env1;
      cameraMatrix = env0;
      break;
    case 39:
      t48 = env4;
      element = env3;
      uv3 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 40:
      t50 = env5;
      t48 = env4;
      element = env3;
      uv3 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 41:
      t48 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t50 = env1;
      cameraMatrix = env0;
      break;
    case 42:
      t48 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t50 = env1;
      cameraMatrix = env0;
      break;
    case 43:
      t54 = env6;
      t48 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t50 = env1;
      cameraMatrix = env0;
      break;
    case 44:
      t54 = env6;
      t48 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t50 = env1;
      cameraMatrix = env0;
      break;
    case 45:
      t50 = env5;
      t57 = env4;
      element = env3;
      uv3 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 46:
      t59 = env6;
      t50 = env5;
      t57 = env4;
      element = env3;
      uv3 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 47:
      t50 = env6;
      t57 = env5;
      element = env4;
      uv3 = env3;
      t1 = env2;
      t59 = env1;
      cameraMatrix = env0;
      break;
    case 48:
      t63 = env4;
      uv3 = env3;
      t62 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 49:
      t62 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 50:
      t62 = env3;
      t66 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 51:
      t66 = env3;
      t62 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 52:
      t62 = env3;
      t1 = env2;
      t66 = env1;
      cameraMatrix = env0;
      break;
    case 53:
      t62 = env4;
      t70 = env3;
      t1 = env2;
      t66 = env1;
      cameraMatrix = env0;
      break;
    case 54:
      t62 = env4;
      t70 = env3;
      t1 = env2;
      t66 = env1;
      cameraMatrix = env0;
      break;
    case 55:
      t1 = env3;
      t73 = env2;
      t66 = env1;
      cameraMatrix = env0;
      break;
    case 56:
      t75 = env4;
      t1 = env3;
      t73 = env2;
      t66 = env1;
      cameraMatrix = env0;
      break;
    case 57:
      t75 = env4;
      t1 = env3;
      t73 = env2;
      t66 = env1;
      cameraMatrix = env0;
      break;
    case 58:
      t78 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 59:
      t78 = env3;
      t1 = env2;
      t80 = env1;
      cameraMatrix = env0;
      break;
    case 60:
      t78 = env3;
      t80 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 61:
      t78 = env3;
      t80 = env2;
      t1 = env1;
      cameraMatrix = env0;
      break;
    case 62:
      t78 = env4;
      t80 = env3;
      t1 = env2;
      t84 = env1;
      cameraMatrix = env0;
      break;
    case 63:
      t78 = env4;
      t80 = env3;
      t1 = env2;
      t84 = env1;
      cameraMatrix = env0;
      break;
    case 64:
      t80 = env3;
      t1 = env2;
      t87 = env1;
      cameraMatrix = env0;
      break;
    case 65:
      t80 = env3;
      t1 = env2;
      t89 = env1;
      t87 = env0;
      break;
    case 66:
      t80 = env3;
      t89 = env2;
      t1 = env1;
      t87 = env0;
      break;
    case 67:
      t1 = env6;
      material = env5;
      element = env4;
      uv3 = env3;
      uv2 = env2;
      uv1 = env1;
      t2 = env0;
      break;
    case 68:
      t1 = env12;
      t10 = env11;
      t9 = env10;
      t8 = env9;
      t7 = env8;
      t6 = env7;
      t5 = env6;
      t4 = env5;
      material = env4;
      element = env3;
      uv3 = env2;
      uv2 = env1;
      uv1 = env0;
      break;
    case 69:
      t12 = env13;
      t1 = env12;
      t13 = env11;
      t9 = env10;
      t8 = env9;
      t7 = env8;
      t6 = env7;
      t5 = env6;
      t4 = env5;
      material = env4;
      element = env3;
      uv3 = env2;
      uv2 = env1;
      uv1 = env0;
      break;
    case 70:
      t12 = env13;
      t16 = env12;
      t1 = env11;
      t9 = env10;
      t8 = env9;
      t7 = env8;
      t6 = env7;
      t5 = env6;
      t4 = env5;
      material = env4;
      element = env3;
      uv3 = env2;
      uv2 = env1;
      t15 = env0;
      break;
    case 71:
      t12 = env14;
      t19 = env13;
      t1 = env12;
      t9 = env11;
      t8 = env10;
      t7 = env9;
      t6 = env8;
      t5 = env7;
      t4 = env6;
      t18 = env5;
      material = env4;
      element = env3;
      uv3 = env2;
      uv2 = env1;
      t15 = env0;
      break;
    case 72:
      t12 = env14;
      t22 = env13;
      t1 = env12;
      t21 = env11;
      t9 = env10;
      t8 = env9;
      t7 = env8;
      t6 = env7;
      t5 = env6;
      t4 = env5;
      material = env4;
      element = env3;
      t18 = env2;
      uv3 = env1;
      t15 = env0;
      break;
    case 73:
      t12 = env15;
      t25 = env14;
      t1 = env13;
      t24 = env12;
      t21 = env11;
      t9 = env10;
      t8 = env9;
      t7 = env8;
      t6 = env7;
      t5 = env6;
      t4 = env5;
      material = env4;
      element = env3;
      t18 = env2;
      uv3 = env1;
      t15 = env0;
      break;
    case 74:
      material = env2;
      element = env1;
      t1 = env0;
      break;
    case 75:
      material = env2;
      element = env1;
      t1 = env0;
      break;
    case 76:
      material = env4;
      element = env3;
      t3 = env2;
      t1 = env1;
      t2 = env0;
      break;
    case 77:
      material = env4;
      element = env3;
      t2 = env2;
      t5 = env1;
      t1 = env0;
      break;
    case 78:
      material = env3;
      t1 = env2;
      t7 = env1;
      t2 = env0;
      break;
    case 79:
      material = env1;
      t2 = env0;
      break;
    case 80:
      material = env2;
      t9 = env1;
      t2 = env0;
      break;
    case 81:
      material = env1;
      t11 = env0;
      break;
    case 82:
      material = env2;
      t13 = env1;
      t11 = env0;
      break;
    case 83:
      material = env1;
      t15 = env0;
      break;
    case 84:
      material = env2;
      t15 = env1;
      t17 = env0;
      break;
    case 85:
      material = env1;
      t19 = env0;
      break;
    case 86:
      material = env2;
      t21 = env1;
      t19 = env0;
      break;
    case 87:
      material = env1;
      t23 = env0;
      break;
    case 88:
      material = env2;
      t25 = env1;
      t23 = env0;
      break;
    case 89:
      material = env1;
      t27 = env0;
      break;
    case 90:
      material = env2;
      t29 = env1;
      t27 = env0;
      break;
    case 91:
      material = env1;
      t31 = env0;
      break;
    case 92:
      material = env2;
      t31 = env1;
      t33 = env0;
      break;
    case 93:
      material = env1;
      t35 = env0;
      break;
    case 94:
      material = env2;
      t37 = env1;
      t35 = env0;
      break;
    case 95:
      t39 = env0;
      break;
    case 96:
      t41 = env1;
      t39 = env0;
      break;
    case 97:
      t43 = env0;
      break;
    case 98:
      t45 = env1;
      t43 = env0;
      break;
    case 99:
      t47 = env0;
      break;
    case 100:
      t49 = env1;
      t47 = env0;
      break;
    case 101:
      t51 = env0;
      break;
    case 102:
      t53 = env1;
      t51 = env0;
      break;
    case 103:
      material = env1;
      t1 = env0;
      break;
    case 104:
      material = env2;
      t1 = env1;
      t3 = env0;
      break;
    case 105:
      material = env1;
      t5 = env0;
      break;
    case 106:
      material = env2;
      t5 = env1;
      t7 = env0;
      break;
    case 107:
      material = env1;
      t9 = env0;
      break;
    case 108:
      material = env2;
      t9 = env1;
      t11 = env0;
      break;
    case 109:
      t1 = env0;
      break;
    case 110:
      t3 = env1;
      t1 = env0;
      break;
    case 111:
      t5 = env0;
      break;
    case 112:
      t7 = env1;
      t5 = env0;
      break;
    case 113:
      t9 = env0;
      break;
    case 114:
      t11 = env1;
      t9 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._info.render;
      t2 = t1.vertices;
    case 1:
      state0 = 0;
      t1.vertices = $.add(t2, 3);
      t1 = this._info.render;
      t4 = t1.faces;
    case 2:
      state0 = 0;
      t1.faces = $.add(t4, 1);
      this.setOpacity$1(material.get$opacity());
      this.setBlending$1(material.get$blending());
      this._v1x = v1.get$positionScreen().get$x();
      this._v1y = v1.get$positionScreen().get$y();
      this._v2x = v2.get$positionScreen().get$x();
      this._v2y = v2.get$positionScreen().get$y();
      this._v3x = v3.get$positionScreen().get$x();
      this._v3y = v3.get$positionScreen().get$y();
      this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y);
    default:
      var t1, t2, material, element, uv3, uv2, uv1, v3, v2, v1, t4, t5, t6, t7, t8, t9, t10, t12, t13, t15, t16, t18, t19, t21, t22, t24, t25, cameraMatrix, t3, t20, t27, t29, t32, t33, t36, t40, t43, t45, t48, t50, t54, t57, t59, t62, t63, t66, t70, t73, t75, t78, t80, t84, t87, t89, t11, t17, t23, t31, t35, t37, t39, t41, t47, t49, t51, t53, t55;
      if (state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && typeof material === 'object' && material !== null && !!material.is$MeshBasicMaterial)
        switch (state0) {
          case 0:
            t1 = material.map;
          default:
            if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && !(t1 == null))
              switch (state0) {
                case 0:
                  t2 = t1.get$mapping();
                default:
                  if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && typeof t2 === 'object' && t2 !== null && !!t2.is$UVMapping)
                    switch (state0) {
                      case 0:
                        t2 = element.get$uvs();
                      case 3:
                        state0 = 0;
                        this._uvs = $.index(t2, 0);
                        t4 = this._v1x;
                        t5 = this._v1y;
                        t6 = this._v2x;
                        t7 = this._v2y;
                        t8 = this._v3x;
                        t9 = this._v3y;
                        t10 = this._uvs;
                      case 4:
                        state0 = 0;
                        t12 = $.index(t10, uv1).get$u();
                        t13 = this._uvs;
                      case 5:
                        state0 = 0;
                        t15 = $.index(t13, uv1).get$v();
                        t16 = this._uvs;
                      case 6:
                        state0 = 0;
                        t18 = $.index(t16, uv2).get$u();
                        t19 = this._uvs;
                      case 7:
                        state0 = 0;
                        t21 = $.index(t19, uv2).get$v();
                        t22 = this._uvs;
                      case 8:
                        state0 = 0;
                        t24 = $.index(t22, uv3).get$u();
                        t25 = this._uvs;
                      case 9:
                        state0 = 0;
                        this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t15, t18, t21, t24, $.index(t25, uv3).get$v(), t1);
                    }
              }
            else
              switch (state0) {
                case 0:
                  t1 = material.envMap;
                default:
                  if (state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 0 && !(null == t1))
                    switch (state0) {
                      case 0:
                        t2 = t1.get$mapping();
                      default:
                        if (state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 0 && typeof t2 === 'object' && t2 !== null && !!t2.is$SphericalReflectionMapping)
                          switch (state0) {
                            case 0:
                              cameraMatrix = this._camera.get$matrixWorldInverse();
                              t2 = this._vector3;
                              t3 = element.get$vertexNormalsWorld();
                            case 10:
                              state0 = 0;
                              t2.copy$1($.index(t3, uv1));
                              t2 = this._vector3.x;
                            case 11:
                              state0 = 0;
                              t6 = cameraMatrix.get$elements();
                            case 12:
                              state0 = 0;
                              t6 = $.index(t6, 0);
                            case 13:
                              state0 = 0;
                              t6 = $.mul(t2, t6);
                              t2 = this._vector3.y;
                            case 14:
                              state0 = 0;
                              t10 = cameraMatrix.get$elements();
                            case 15:
                              state0 = 0;
                              t10 = $.index(t10, 4);
                            case 16:
                              state0 = 0;
                              t6 = $.add(t6, $.mul(t2, t10));
                              t13 = this._vector3.z;
                            case 17:
                              state0 = 0;
                              t15 = cameraMatrix.get$elements();
                            case 18:
                              state0 = 0;
                              t15 = $.index(t15, 8);
                            case 19:
                              state0 = 0;
                              this._uv1x = $.add($.mul($.add(t6, $.mul(t13, t15)), 0.5), 0.5);
                              t18 = this._vector3.x;
                            case 20:
                              state0 = 0;
                              t20 = cameraMatrix.get$elements();
                            case 21:
                              state0 = 0;
                              t20 = $.index(t20, 1);
                            case 22:
                              state0 = 0;
                              t20 = $.mul(t18, t20);
                              t18 = this._vector3.y;
                            case 23:
                              state0 = 0;
                              t24 = cameraMatrix.get$elements();
                            case 24:
                              state0 = 0;
                              t24 = $.index(t24, 5);
                            case 25:
                              state0 = 0;
                              t20 = $.add(t20, $.mul(t18, t24));
                              t27 = this._vector3.z;
                            case 26:
                              state0 = 0;
                              t29 = cameraMatrix.get$elements();
                            case 27:
                              state0 = 0;
                              t29 = $.index(t29, 9);
                            case 28:
                              state0 = 0;
                              this._uv1y = $.add($.mul($.neg($.add(t20, $.mul(t27, t29))), 0.5), 0.5);
                              t32 = this._vector3;
                              t33 = element.get$vertexNormalsWorld();
                            case 29:
                              state0 = 0;
                              t32.copy$1($.index(t33, uv2));
                              t32 = this._vector3.x;
                            case 30:
                              state0 = 0;
                              t36 = cameraMatrix.get$elements();
                            case 31:
                              state0 = 0;
                              t36 = $.index(t36, 0);
                            case 32:
                              state0 = 0;
                              t36 = $.mul(t32, t36);
                              t32 = this._vector3.y;
                            case 33:
                              state0 = 0;
                              t40 = cameraMatrix.get$elements();
                            case 34:
                              state0 = 0;
                              t40 = $.index(t40, 4);
                            case 35:
                              state0 = 0;
                              t36 = $.add(t36, $.mul(t32, t40));
                              t43 = this._vector3.z;
                            case 36:
                              state0 = 0;
                              t45 = cameraMatrix.get$elements();
                            case 37:
                              state0 = 0;
                              t45 = $.index(t45, 8);
                            case 38:
                              state0 = 0;
                              this._uv2x = $.add($.mul($.add(t36, $.mul(t43, t45)), 0.5), 0.5);
                              t48 = this._vector3.x;
                            case 39:
                              state0 = 0;
                              t50 = cameraMatrix.get$elements();
                            case 40:
                              state0 = 0;
                              t50 = $.index(t50, 1);
                            case 41:
                              state0 = 0;
                              t50 = $.mul(t48, t50);
                              t48 = this._vector3.y;
                            case 42:
                              state0 = 0;
                              t54 = cameraMatrix.get$elements();
                            case 43:
                              state0 = 0;
                              t54 = $.index(t54, 5);
                            case 44:
                              state0 = 0;
                              t50 = $.add(t50, $.mul(t48, t54));
                              t57 = this._vector3.z;
                            case 45:
                              state0 = 0;
                              t59 = cameraMatrix.get$elements();
                            case 46:
                              state0 = 0;
                              t59 = $.index(t59, 9);
                            case 47:
                              state0 = 0;
                              this._uv2y = $.add($.mul($.neg($.add(t50, $.mul(t57, t59))), 0.5), 0.5);
                              t62 = this._vector3;
                              t63 = element.get$vertexNormalsWorld();
                            case 48:
                              state0 = 0;
                              t62.copy$1($.index(t63, uv3));
                              t62 = this._vector3.x;
                            case 49:
                              state0 = 0;
                              t66 = cameraMatrix.get$elements();
                            case 50:
                              state0 = 0;
                              t66 = $.index(t66, 0);
                            case 51:
                              state0 = 0;
                              t66 = $.mul(t62, t66);
                              t62 = this._vector3.y;
                            case 52:
                              state0 = 0;
                              t70 = cameraMatrix.get$elements();
                            case 53:
                              state0 = 0;
                              t70 = $.index(t70, 4);
                            case 54:
                              state0 = 0;
                              t66 = $.add(t66, $.mul(t62, t70));
                              t73 = this._vector3.z;
                            case 55:
                              state0 = 0;
                              t75 = cameraMatrix.get$elements();
                            case 56:
                              state0 = 0;
                              t75 = $.index(t75, 8);
                            case 57:
                              state0 = 0;
                              this._uv3x = $.add($.mul($.add(t66, $.mul(t73, t75)), 0.5), 0.5);
                              t78 = this._vector3.x;
                            case 58:
                              state0 = 0;
                              t80 = cameraMatrix.get$elements();
                            case 59:
                              state0 = 0;
                              t80 = $.index(t80, 1);
                            case 60:
                              state0 = 0;
                              t80 = $.mul(t78, t80);
                              t78 = this._vector3.y;
                            case 61:
                              state0 = 0;
                              t84 = cameraMatrix.get$elements();
                            case 62:
                              state0 = 0;
                              t84 = $.index(t84, 5);
                            case 63:
                              state0 = 0;
                              t80 = $.add(t80, $.mul(t78, t84));
                              t87 = this._vector3.z;
                            case 64:
                              state0 = 0;
                              t89 = cameraMatrix.get$elements();
                            case 65:
                              state0 = 0;
                              t89 = $.index(t89, 9);
                            case 66:
                              state0 = 0;
                              this._uv3y = $.add($.mul($.neg($.add(t80, $.mul(t87, t89))), 0.5), 0.5);
                              this.patternPath$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._uv1x, this._uv1y, this._uv2x, this._uv2y, this._uv3x, this._uv3y, t1);
                          }
                    }
                  else {
                    t1 = material.wireframe === true;
                    t2 = material.color;
                    if (t1)
                      this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                    else {
                      this.setFillStyle$1(t2.getContextStyle$0());
                      this._context.fill$0();
                    }
                  }
              }
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 75 || state0 === 74 || state0 === 73 || state0 === 72 || state0 === 71 || state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 0 && typeof material === 'object' && material !== null && !!material.is$MeshLambertMaterial)
              switch (state0) {
                case 0:
                  t1 = material.map;
                default:
                  if (state0 === 73 || state0 === 72 || state0 === 71 || state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 0 && !(t1 == null) && material.wireframe !== true)
                    switch (state0) {
                      case 0:
                        t2 = t1.get$mapping();
                      default:
                        if (state0 === 73 || state0 === 72 || state0 === 71 || state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 0 && typeof t2 === 'object' && t2 !== null && !!t2.is$UVMapping)
                          switch (state0) {
                            case 0:
                              t2 = element.get$uvs();
                            case 67:
                              state0 = 0;
                              this._uvs = $.index(t2, 0);
                              t4 = this._v1x;
                              t5 = this._v1y;
                              t6 = this._v2x;
                              t7 = this._v2y;
                              t8 = this._v3x;
                              t9 = this._v3y;
                              t10 = this._uvs;
                            case 68:
                              state0 = 0;
                              t12 = $.index(t10, uv1).get$u();
                              t13 = this._uvs;
                            case 69:
                              state0 = 0;
                              t15 = $.index(t13, uv1).get$v();
                              t16 = this._uvs;
                            case 70:
                              state0 = 0;
                              t18 = $.index(t16, uv2).get$u();
                              t19 = this._uvs;
                            case 71:
                              state0 = 0;
                              t21 = $.index(t19, uv2).get$v();
                              t22 = this._uvs;
                            case 72:
                              state0 = 0;
                              t24 = $.index(t22, uv3).get$u();
                              t25 = this._uvs;
                            case 73:
                              state0 = 0;
                              this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t15, t18, t21, t24, $.index(t25, uv3).get$v(), t1);
                          }
                        this.setBlending$1(3);
                    }
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 101:
                case 102:
                case 103:
                case 104:
                case 105:
                case 106:
                case 107:
                case 108:
                  if (state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 75 || state0 === 74 || state0 === 0 && this._enableLighting === true)
                    switch (state0) {
                      case 0:
                      default:
                        if (state0 === 75 || state0 === 74 || state0 === 0 && material.wireframe !== true)
                          switch (state0) {
                            case 0:
                              t1 = material.shading;
                            case 74:
                              state0 = 0;
                            case 75:
                              if (state0 === 75 || state0 === 0 && $.eqB(t1, 2))
                                switch (state0) {
                                  case 0:
                                    t1 = $.get$length(element.get$vertexNormalsWorld());
                                  case 75:
                                    state0 = 0;
                                    t1 = $.eqB(t1, 3);
                                }
                              else
                                t1 = false;
                          }
                        else
                          t1 = false;
                        t2 = this._ambientLight;
                      case 76:
                      case 77:
                      case 78:
                      case 79:
                      case 80:
                      case 81:
                      case 82:
                      case 83:
                      case 84:
                      case 85:
                      case 86:
                      case 87:
                      case 88:
                      case 89:
                      case 90:
                      case 91:
                      case 92:
                      case 93:
                      case 94:
                      case 95:
                      case 96:
                      case 97:
                      case 98:
                      case 99:
                      case 100:
                      case 101:
                      case 102:
                      case 103:
                      case 104:
                      case 105:
                      case 106:
                      case 107:
                      case 108:
                        if (state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 0 && t1)
                          switch (state0) {
                            case 0:
                              t1 = t2.r;
                              this._color3.r = t1;
                              this._color2.r = t1;
                              this._color1.r = t1;
                              t1 = this._ambientLight.g;
                              this._color3.g = t1;
                              this._color2.g = t1;
                              this._color1.g = t1;
                              t1 = this._ambientLight.b;
                              this._color3.b = t1;
                              this._color2.b = t1;
                              this._color1.b = t1;
                              t1 = this._lights;
                              t2 = element.get$v1().get$positionWorld();
                              t3 = element.get$vertexNormalsWorld();
                            case 76:
                              state0 = 0;
                              this.calculateLight$4(t1, t2, $.index(t3, 0), this._color1);
                              t2 = this._lights;
                              t1 = element.get$v2().get$positionWorld();
                              t5 = element.get$vertexNormalsWorld();
                            case 77:
                              state0 = 0;
                              this.calculateLight$4(t2, t1, $.index(t5, 1), this._color2);
                              t1 = this._lights;
                              t2 = element.get$v3().get$positionWorld();
                              t7 = element.get$vertexNormalsWorld();
                            case 78:
                              state0 = 0;
                              this.calculateLight$4(t1, t2, $.index(t7, 2), this._color3);
                              t2 = material.color.get$r();
                            case 79:
                              state0 = 0;
                              t9 = this._color1.r;
                            case 80:
                              state0 = 0;
                              t11 = $.max(0, $.min($.mul(t2, t9), 1));
                              this._color1.r = t11;
                              t11 = material.color.get$g();
                            case 81:
                              state0 = 0;
                              t13 = this._color1.g;
                            case 82:
                              state0 = 0;
                              t15 = $.max(0, $.min($.mul(t11, t13), 1));
                              this._color1.g = t15;
                              t15 = material.color.get$b();
                            case 83:
                              state0 = 0;
                              t17 = this._color1.b;
                            case 84:
                              state0 = 0;
                              t19 = $.max(0, $.min($.mul(t15, t17), 1));
                              this._color1.b = t19;
                              t19 = material.color.get$r();
                            case 85:
                              state0 = 0;
                              t21 = this._color2.r;
                            case 86:
                              state0 = 0;
                              t23 = $.max(0, $.min($.mul(t19, t21), 1));
                              this._color2.r = t23;
                              t23 = material.color.get$g();
                            case 87:
                              state0 = 0;
                              t25 = this._color2.g;
                            case 88:
                              state0 = 0;
                              t27 = $.max(0, $.min($.mul(t23, t25), 1));
                              this._color2.g = t27;
                              t27 = material.color.get$b();
                            case 89:
                              state0 = 0;
                              t29 = this._color2.b;
                            case 90:
                              state0 = 0;
                              t31 = $.max(0, $.min($.mul(t27, t29), 1));
                              this._color2.b = t31;
                              t31 = material.color.get$r();
                            case 91:
                              state0 = 0;
                              t33 = this._color3.r;
                            case 92:
                              state0 = 0;
                              t35 = $.max(0, $.min($.mul(t31, t33), 1));
                              this._color3.r = t35;
                              t35 = material.color.get$g();
                            case 93:
                              state0 = 0;
                              t37 = this._color3.g;
                            case 94:
                              state0 = 0;
                              t39 = $.max(0, $.min($.mul(t35, t37), 1));
                              this._color3.g = t39;
                              t39 = material.color.get$b();
                            case 95:
                              state0 = 0;
                              t41 = this._color3.b;
                            case 96:
                              state0 = 0;
                              t43 = $.max(0, $.min($.mul(t39, t41), 1));
                              this._color3.b = t43;
                              t43 = this._color2.r;
                            case 97:
                              state0 = 0;
                              t45 = this._color3.r;
                            case 98:
                              state0 = 0;
                              t47 = $.mul($.add(t43, t45), 0.5);
                              this._color4.r = t47;
                              t47 = this._color2.g;
                            case 99:
                              state0 = 0;
                              t49 = this._color3.g;
                            case 100:
                              state0 = 0;
                              t51 = $.mul($.add(t47, t49), 0.5);
                              this._color4.g = t51;
                              t51 = this._color2.b;
                            case 101:
                              state0 = 0;
                              t53 = this._color3.b;
                            case 102:
                              state0 = 0;
                              t55 = $.mul($.add(t51, t53), 0.5);
                              this._color4.b = t55;
                              this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
                              this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
                          }
                        else
                          switch (state0) {
                            case 0:
                              t1 = t2.r;
                              this._color.r = t1;
                              t1 = this._ambientLight.g;
                              this._color.g = t1;
                              t1 = this._ambientLight.b;
                              this._color.b = t1;
                              this.calculateLight$4(this._lights, element.get$centroidWorld(), element.get$normalWorld(), this._color);
                              t1 = material.color.get$r();
                            case 103:
                              state0 = 0;
                              t3 = this._color.r;
                            case 104:
                              state0 = 0;
                              t5 = $.max(0, $.min($.mul(t1, t3), 1));
                              this._color.r = t5;
                              t5 = material.color.get$g();
                            case 105:
                              state0 = 0;
                              t7 = this._color.g;
                            case 106:
                              state0 = 0;
                              t9 = $.max(0, $.min($.mul(t5, t7), 1));
                              this._color.g = t9;
                              t9 = material.color.get$b();
                            case 107:
                              state0 = 0;
                              t11 = this._color.b;
                            case 108:
                              state0 = 0;
                              t13 = $.max(0, $.min($.mul(t9, t11), 1));
                              this._color.b = t13;
                              t1 = material.wireframe === true;
                              t2 = this._color;
                              if (t1)
                                this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                              else {
                                this.setFillStyle$1(t2.getContextStyle$0());
                                this._context.fill$0();
                              }
                          }
                    }
                  else {
                    t1 = material.wireframe === true;
                    t2 = material.color;
                    if (t1)
                      this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                    else {
                      this.setFillStyle$1(t2.getContextStyle$0());
                      this._context.fill$0();
                    }
                  }
              }
            else
              switch (state0) {
                case 0:
                default:
                  if (state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 0 && typeof material === 'object' && material !== null && !!material.is$MeshDepthMaterial)
                    switch (state0) {
                      case 0:
                        this._near = this._camera.get$near();
                        this._far = this._camera.get$far();
                        t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
                        if (typeof t1 !== 'number')
                          throw $.iae(t1);
                        t1 = 1 - t1;
                        this._color1.b = t1;
                        this._color1.g = t1;
                        this._color1.r = t1;
                        t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
                        if (typeof t1 !== 'number')
                          throw $.iae(t1);
                        t1 = 1 - t1;
                        this._color2.b = t1;
                        this._color2.g = t1;
                        this._color2.r = t1;
                        t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
                        if (typeof t1 !== 'number')
                          throw $.iae(t1);
                        t1 = 1 - t1;
                        this._color3.b = t1;
                        this._color3.g = t1;
                        this._color3.r = t1;
                        t1 = this._color2.r;
                      case 109:
                        state0 = 0;
                        t3 = this._color3.r;
                      case 110:
                        state0 = 0;
                        t5 = $.mul($.add(t1, t3), 0.5);
                        this._color4.r = t5;
                        t5 = this._color2.g;
                      case 111:
                        state0 = 0;
                        t7 = this._color3.g;
                      case 112:
                        state0 = 0;
                        t9 = $.mul($.add(t5, t7), 0.5);
                        this._color4.g = t9;
                        t9 = this._color2.b;
                      case 113:
                        state0 = 0;
                        t11 = this._color3.b;
                      case 114:
                        state0 = 0;
                        t13 = $.mul($.add(t9, t11), 0.5);
                        this._color4.b = t13;
                        this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
                        this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
                    }
                  else if (typeof material === 'object' && material !== null && !!material.is$MeshNormalMaterial) {
                    t1 = this.normalToComponent$1(element.get$normalWorld().get$x());
                    this._color.r = t1;
                    t1 = this.normalToComponent$1(element.get$normalWorld().get$y());
                    this._color.g = t1;
                    t1 = this.normalToComponent$1(element.get$normalWorld().get$z());
                    this._color.b = t1;
                    t1 = material.wireframe === true;
                    t2 = this._color;
                    if (t1)
                      this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                    else {
                      this.setFillStyle$1(t2.getContextStyle$0());
                      this._context.fill$0();
                    }
                  }
              }
        }
  }
},
 renderFace4$9: function(v1, v2, v3, v4, v5, v6, element, material, scene) {
  var t1, t2, t4, t3, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32, t34, t36, t38, t40, t42, t44, t46, t48, t50, t5, t7, t9, t11, t13;
  t1 = this._info.render;
  t2 = t1.vertices;
  if (typeof t2 !== 'number')
    return this.renderFace4$9$bailout(1, v1, v2, v3, v4, v5, v6, element, material, scene, t2, t1);
  t1.vertices = t2 + 4;
  t1 = this._info.render;
  t4 = t1.faces;
  if (typeof t4 !== 'number')
    return this.renderFace4$9$bailout(2, v1, v2, v3, v4, v5, v6, element, material, scene, t1, t4);
  t1.faces = t4 + 1;
  this.setOpacity$1(material.get$opacity());
  this.setBlending$1(material.get$blending());
  if (typeof material === 'object' && material !== null && !!material.is$ITextureMapMaterial) {
    this.renderFace3$9(v1, v2, v4, 0, 1, 3, element, material, scene);
    this.renderFace3$9(v5, v3, v6, 1, 2, 3, element, material, scene);
    return;
  }
  this._v1x = v1.get$positionScreen().get$x();
  this._v1y = v1.get$positionScreen().get$y();
  this._v2x = v2.get$positionScreen().get$x();
  this._v2y = v2.get$positionScreen().get$y();
  this._v3x = v3.get$positionScreen().get$x();
  this._v3y = v3.get$positionScreen().get$y();
  this._v4x = v4.get$positionScreen().get$x();
  this._v4y = v4.get$positionScreen().get$y();
  t1 = v5.positionScreen;
  this._v5x = t1.x;
  this._v5y = t1.y;
  t2 = v6.positionScreen;
  this._v6x = t2.x;
  this._v6y = t2.y;
  if (typeof material === 'object' && material !== null && !!material.is$MeshBasicMaterial) {
    this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
    t1 = material.wireframe === true;
    t2 = material.color;
    if (t1)
      this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
    else {
      this.setFillStyle$1(t2.getContextStyle$0());
      this._context.fill$0();
    }
  } else if (typeof material === 'object' && material !== null && !!material.is$MeshLambertMaterial)
    if (this._enableLighting === true) {
      if (material.wireframe !== true) {
        t1 = material.shading;
        if (typeof t1 !== 'number')
          return this.renderFace4$9$bailout(3, t1, element, material);
        t1 = t1 === 2 && element.vertexNormalsWorld.length === 4;
      } else
        t1 = false;
      t2 = this._ambientLight.r;
      if (t1) {
        this._color4.r = t2;
        this._color3.r = t2;
        this._color2.r = t2;
        this._color1.r = t2;
        t1 = this._ambientLight.g;
        this._color4.g = t1;
        this._color3.g = t1;
        this._color2.g = t1;
        this._color1.g = t1;
        t1 = this._ambientLight.b;
        this._color4.b = t1;
        this._color3.b = t1;
        this._color2.b = t1;
        this._color1.b = t1;
        t1 = this._lights;
        t2 = element.v1.positionWorld;
        t3 = element.vertexNormalsWorld;
        if (0 >= t3.length)
          throw $.ioore(0);
        this.calculateLight$4(t1, t2, t3[0], this._color1);
        t2 = this._lights;
        t1 = element.v2.positionWorld;
        if (1 >= t3.length)
          throw $.ioore(1);
        this.calculateLight$4(t2, t1, t3[1], this._color2);
        t1 = this._lights;
        t2 = element.v4.positionWorld;
        if (3 >= t3.length)
          throw $.ioore(3);
        this.calculateLight$4(t1, t2, t3[3], this._color3);
        t2 = this._lights;
        t1 = element.v3.positionWorld;
        if (2 >= t3.length)
          throw $.ioore(2);
        this.calculateLight$4(t2, t1, t3[2], this._color4);
        t1 = material.color.get$r();
        if (typeof t1 !== 'number')
          return this.renderFace4$9$bailout(4, t1, material);
        t4 = this._color1.r;
        if (typeof t4 !== 'number')
          return this.renderFace4$9$bailout(5, t4, t1, material);
        t6 = $.max(0, $.min(t1 * t4, 1));
        this._color1.r = t6;
        t6 = material.color.get$g();
        if (typeof t6 !== 'number')
          return this.renderFace4$9$bailout(6, t6, material);
        t8 = this._color1.g;
        if (typeof t8 !== 'number')
          return this.renderFace4$9$bailout(7, t6, t8, material);
        t10 = $.max(0, $.min(t6 * t8, 1));
        this._color1.g = t10;
        t10 = material.color.get$b();
        if (typeof t10 !== 'number')
          return this.renderFace4$9$bailout(8, t10, material);
        t12 = this._color1.b;
        if (typeof t12 !== 'number')
          return this.renderFace4$9$bailout(9, t12, t10, material);
        t14 = $.max(0, $.min(t10 * t12, 1));
        this._color1.b = t14;
        t14 = material.color.get$r();
        if (typeof t14 !== 'number')
          return this.renderFace4$9$bailout(10, t14, material);
        t16 = this._color2.r;
        if (typeof t16 !== 'number')
          return this.renderFace4$9$bailout(11, t14, t16, material);
        t18 = $.max(0, $.min(t14 * t16, 1));
        this._color2.r = t18;
        t18 = material.color.get$g();
        if (typeof t18 !== 'number')
          return this.renderFace4$9$bailout(12, t18, material);
        t20 = this._color2.g;
        if (typeof t20 !== 'number')
          return this.renderFace4$9$bailout(13, t20, t18, material);
        t22 = $.max(0, $.min(t18 * t20, 1));
        this._color2.g = t22;
        t22 = material.color.get$b();
        if (typeof t22 !== 'number')
          return this.renderFace4$9$bailout(14, t22, material);
        t24 = this._color2.b;
        if (typeof t24 !== 'number')
          return this.renderFace4$9$bailout(15, t22, t24, material);
        t26 = $.max(0, $.min(t22 * t24, 1));
        this._color2.b = t26;
        t26 = material.color.get$r();
        if (typeof t26 !== 'number')
          return this.renderFace4$9$bailout(16, t26, material);
        t28 = this._color3.r;
        if (typeof t28 !== 'number')
          return this.renderFace4$9$bailout(17, t28, t26, material);
        t30 = $.max(0, $.min(t26 * t28, 1));
        this._color3.r = t30;
        t30 = material.color.get$g();
        if (typeof t30 !== 'number')
          return this.renderFace4$9$bailout(18, t30, material);
        t32 = this._color3.g;
        if (typeof t32 !== 'number')
          return this.renderFace4$9$bailout(19, t30, t32, material);
        t34 = $.max(0, $.min(t30 * t32, 1));
        this._color3.g = t34;
        t34 = material.color.get$b();
        if (typeof t34 !== 'number')
          return this.renderFace4$9$bailout(20, t34, material);
        t36 = this._color3.b;
        if (typeof t36 !== 'number')
          return this.renderFace4$9$bailout(21, t36, t34, material);
        t38 = $.max(0, $.min(t34 * t36, 1));
        this._color3.b = t38;
        t38 = material.color.get$r();
        if (typeof t38 !== 'number')
          return this.renderFace4$9$bailout(22, t38, material);
        t40 = this._color4.r;
        if (typeof t40 !== 'number')
          return this.renderFace4$9$bailout(23, t38, t40, material);
        t42 = $.max(0, $.min(t38 * t40, 1));
        this._color4.r = t42;
        t42 = material.color.get$g();
        if (typeof t42 !== 'number')
          return this.renderFace4$9$bailout(24, t42, material);
        t44 = this._color4.g;
        if (typeof t44 !== 'number')
          return this.renderFace4$9$bailout(25, t44, t42, material);
        t46 = $.max(0, $.min(t42 * t44, 1));
        this._color4.g = t46;
        t46 = material.color.get$b();
        if (typeof t46 !== 'number')
          return this.renderFace4$9$bailout(26, t46);
        t48 = this._color4.b;
        if (typeof t48 !== 'number')
          return this.renderFace4$9$bailout(27, t48, t46);
        t50 = $.max(0, $.min(t46 * t48, 1));
        this._color4.b = t50;
        this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
        this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
        this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
        this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
        this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
      } else {
        this._color.r = t2;
        t1 = this._ambientLight.g;
        this._color.g = t1;
        t1 = this._ambientLight.b;
        this._color.b = t1;
        this.calculateLight$4(this._lights, element.centroidWorld, element.normalWorld, this._color);
        t1 = material.color.get$r();
        if (typeof t1 !== 'number')
          return this.renderFace4$9$bailout(28, t1, material);
        t3 = this._color.r;
        if (typeof t3 !== 'number')
          return this.renderFace4$9$bailout(29, t3, t1, material);
        t5 = $.max(0, $.min(t1 * t3, 1));
        this._color.r = t5;
        t5 = material.color.get$g();
        if (typeof t5 !== 'number')
          return this.renderFace4$9$bailout(30, t5, material);
        t7 = this._color.g;
        if (typeof t7 !== 'number')
          return this.renderFace4$9$bailout(31, t5, t7, material);
        t9 = $.max(0, $.min(t5 * t7, 1));
        this._color.g = t9;
        t9 = material.color.get$b();
        if (typeof t9 !== 'number')
          return this.renderFace4$9$bailout(32, t9, material);
        t11 = this._color.b;
        if (typeof t11 !== 'number')
          return this.renderFace4$9$bailout(33, t9, t11, material);
        t13 = $.max(0, $.min(t9 * t11, 1));
        this._color.b = t13;
        this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
        t1 = material.wireframe === true;
        t2 = this._color;
        if (t1)
          this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
        else {
          this.setFillStyle$1(t2.getContextStyle$0());
          this._context.fill$0();
        }
      }
    } else {
      this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
      t1 = material.wireframe === true;
      t2 = material.color;
      if (t1)
        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
      else {
        this.setFillStyle$1(t2.getContextStyle$0());
        this._context.fill$0();
      }
    }
  else if (typeof material === 'object' && material !== null && !!material.is$MeshNormalMaterial) {
    t1 = element.normalWorld;
    t2 = this.normalToComponent$1(t1.x);
    this._color.r = t2;
    t2 = this.normalToComponent$1(t1.y);
    this._color.g = t2;
    t2 = this.normalToComponent$1(t1.z);
    this._color.b = t2;
    this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
    t1 = material.wireframe === true;
    t2 = this._color;
    if (t1)
      this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
    else {
      this.setFillStyle$1(t2.getContextStyle$0());
      this._context.fill$0();
    }
  } else if (typeof material === 'object' && material !== null && !!material.is$MeshDepthMaterial) {
    this._near = this._camera.get$near();
    this._far = this._camera.get$far();
    t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 1 - t1;
    this._color1.b = t1;
    this._color1.g = t1;
    this._color1.r = t1;
    t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 1 - t1;
    this._color2.b = t1;
    this._color2.g = t1;
    this._color2.r = t1;
    t1 = this.smoothstep$3(v4.get$positionScreen().get$z(), this._near, this._far);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 1 - t1;
    this._color3.b = t1;
    this._color3.g = t1;
    this._color3.r = t1;
    t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 1 - t1;
    this._color4.b = t1;
    this._color4.g = t1;
    this._color4.r = t1;
    this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
    this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
    this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
    this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
    this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
  }
},
 renderFace4$9$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      t1 = env10;
      t2 = env9;
      scene = env8;
      material = env7;
      element = env6;
      v6 = env5;
      v5 = env4;
      v4 = env3;
      v3 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 2:
      t4 = env10;
      t1 = env9;
      scene = env8;
      material = env7;
      element = env6;
      v6 = env5;
      v5 = env4;
      v4 = env3;
      v3 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 3:
      material = env2;
      element = env1;
      t1 = env0;
      break;
    case 4:
      material = env1;
      t1 = env0;
      break;
    case 5:
      material = env2;
      t1 = env1;
      t4 = env0;
      break;
    case 6:
      material = env1;
      t6 = env0;
      break;
    case 7:
      material = env2;
      t8 = env1;
      t6 = env0;
      break;
    case 8:
      material = env1;
      t10 = env0;
      break;
    case 9:
      material = env2;
      t10 = env1;
      t12 = env0;
      break;
    case 10:
      material = env1;
      t14 = env0;
      break;
    case 11:
      material = env2;
      t16 = env1;
      t14 = env0;
      break;
    case 12:
      material = env1;
      t18 = env0;
      break;
    case 13:
      material = env2;
      t18 = env1;
      t20 = env0;
      break;
    case 14:
      material = env1;
      t22 = env0;
      break;
    case 15:
      material = env2;
      t24 = env1;
      t22 = env0;
      break;
    case 16:
      material = env1;
      t26 = env0;
      break;
    case 17:
      material = env2;
      t26 = env1;
      t28 = env0;
      break;
    case 18:
      material = env1;
      t30 = env0;
      break;
    case 19:
      material = env2;
      t32 = env1;
      t30 = env0;
      break;
    case 20:
      material = env1;
      t34 = env0;
      break;
    case 21:
      material = env2;
      t34 = env1;
      t36 = env0;
      break;
    case 22:
      material = env1;
      t38 = env0;
      break;
    case 23:
      material = env2;
      t40 = env1;
      t38 = env0;
      break;
    case 24:
      material = env1;
      t42 = env0;
      break;
    case 25:
      material = env2;
      t42 = env1;
      t44 = env0;
      break;
    case 26:
      t46 = env0;
      break;
    case 27:
      t46 = env1;
      t48 = env0;
      break;
    case 28:
      material = env1;
      t1 = env0;
      break;
    case 29:
      material = env2;
      t1 = env1;
      t3 = env0;
      break;
    case 30:
      material = env1;
      t5 = env0;
      break;
    case 31:
      material = env2;
      t7 = env1;
      t5 = env0;
      break;
    case 32:
      material = env1;
      t9 = env0;
      break;
    case 33:
      material = env2;
      t11 = env1;
      t9 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._info.render;
      t2 = t1.vertices;
    case 1:
      state0 = 0;
      t1.vertices = $.add(t2, 4);
      t1 = this._info.render;
      t4 = t1.faces;
    case 2:
      state0 = 0;
      t1.faces = $.add(t4, 1);
      this.setOpacity$1(material.get$opacity());
      this.setBlending$1(material.get$blending());
      if (typeof material === 'object' && material !== null && !!material.is$ITextureMapMaterial) {
        this.renderFace3$9(v1, v2, v4, 0, 1, 3, element, material, scene);
        this.renderFace3$9(v5, v3, v6, 1, 2, 3, element, material, scene);
        return;
      }
      this._v1x = v1.get$positionScreen().get$x();
      this._v1y = v1.get$positionScreen().get$y();
      this._v2x = v2.get$positionScreen().get$x();
      this._v2y = v2.get$positionScreen().get$y();
      this._v3x = v3.get$positionScreen().get$x();
      this._v3y = v3.get$positionScreen().get$y();
      this._v4x = v4.get$positionScreen().get$x();
      this._v4y = v4.get$positionScreen().get$y();
      t1 = v5.positionScreen;
      this._v5x = t1.x;
      this._v5y = t1.y;
      t2 = v6.positionScreen;
      this._v6x = t2.x;
      this._v6y = t2.y;
    default:
      var t1, t2, scene, material, element, v6, v5, v4, v3, v2, v1, t4, t3, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32, t34, t36, t38, t40, t42, t44, t46, t48, t50, t5, t7, t9, t11, t13;
      if (state0 === 0 && typeof material === 'object' && material !== null && !!material.is$MeshBasicMaterial) {
        this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
        t1 = material.wireframe === true;
        t2 = material.color;
        if (t1)
          this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
        else {
          this.setFillStyle$1(t2.getContextStyle$0());
          this._context.fill$0();
        }
      } else
        switch (state0) {
          case 0:
          default:
            if (state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && typeof material === 'object' && material !== null && !!material.is$MeshLambertMaterial)
              switch (state0) {
                case 0:
                default:
                  if (state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && this._enableLighting === true)
                    switch (state0) {
                      case 0:
                      case 3:
                        if (state0 === 3 || state0 === 0 && material.wireframe !== true)
                          switch (state0) {
                            case 0:
                              t1 = material.shading;
                            case 3:
                              state0 = 0;
                              t1 = $.eqB(t1, 2) && element.vertexNormalsWorld.length === 4;
                          }
                        else
                          t1 = false;
                        t2 = this._ambientLight;
                      default:
                        if (state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && t1)
                          switch (state0) {
                            case 0:
                              t1 = t2.r;
                              this._color4.r = t1;
                              this._color3.r = t1;
                              this._color2.r = t1;
                              this._color1.r = t1;
                              t1 = this._ambientLight.g;
                              this._color4.g = t1;
                              this._color3.g = t1;
                              this._color2.g = t1;
                              this._color1.g = t1;
                              t1 = this._ambientLight.b;
                              this._color4.b = t1;
                              this._color3.b = t1;
                              this._color2.b = t1;
                              this._color1.b = t1;
                              t1 = this._lights;
                              t2 = element.v1.positionWorld;
                              t3 = element.vertexNormalsWorld;
                              if (0 >= t3.length)
                                throw $.ioore(0);
                              this.calculateLight$4(t1, t2, t3[0], this._color1);
                              t2 = this._lights;
                              t1 = element.v2.positionWorld;
                              if (1 >= t3.length)
                                throw $.ioore(1);
                              this.calculateLight$4(t2, t1, t3[1], this._color2);
                              t1 = this._lights;
                              t2 = element.v4.positionWorld;
                              if (3 >= t3.length)
                                throw $.ioore(3);
                              this.calculateLight$4(t1, t2, t3[3], this._color3);
                              t2 = this._lights;
                              t1 = element.v3.positionWorld;
                              if (2 >= t3.length)
                                throw $.ioore(2);
                              this.calculateLight$4(t2, t1, t3[2], this._color4);
                              t1 = material.color.get$r();
                            case 4:
                              state0 = 0;
                              t4 = this._color1.r;
                            case 5:
                              state0 = 0;
                              t6 = $.max(0, $.min($.mul(t1, t4), 1));
                              this._color1.r = t6;
                              t6 = material.color.get$g();
                            case 6:
                              state0 = 0;
                              t8 = this._color1.g;
                            case 7:
                              state0 = 0;
                              t10 = $.max(0, $.min($.mul(t6, t8), 1));
                              this._color1.g = t10;
                              t10 = material.color.get$b();
                            case 8:
                              state0 = 0;
                              t12 = this._color1.b;
                            case 9:
                              state0 = 0;
                              t14 = $.max(0, $.min($.mul(t10, t12), 1));
                              this._color1.b = t14;
                              t14 = material.color.get$r();
                            case 10:
                              state0 = 0;
                              t16 = this._color2.r;
                            case 11:
                              state0 = 0;
                              t18 = $.max(0, $.min($.mul(t14, t16), 1));
                              this._color2.r = t18;
                              t18 = material.color.get$g();
                            case 12:
                              state0 = 0;
                              t20 = this._color2.g;
                            case 13:
                              state0 = 0;
                              t22 = $.max(0, $.min($.mul(t18, t20), 1));
                              this._color2.g = t22;
                              t22 = material.color.get$b();
                            case 14:
                              state0 = 0;
                              t24 = this._color2.b;
                            case 15:
                              state0 = 0;
                              t26 = $.max(0, $.min($.mul(t22, t24), 1));
                              this._color2.b = t26;
                              t26 = material.color.get$r();
                            case 16:
                              state0 = 0;
                              t28 = this._color3.r;
                            case 17:
                              state0 = 0;
                              t30 = $.max(0, $.min($.mul(t26, t28), 1));
                              this._color3.r = t30;
                              t30 = material.color.get$g();
                            case 18:
                              state0 = 0;
                              t32 = this._color3.g;
                            case 19:
                              state0 = 0;
                              t34 = $.max(0, $.min($.mul(t30, t32), 1));
                              this._color3.g = t34;
                              t34 = material.color.get$b();
                            case 20:
                              state0 = 0;
                              t36 = this._color3.b;
                            case 21:
                              state0 = 0;
                              t38 = $.max(0, $.min($.mul(t34, t36), 1));
                              this._color3.b = t38;
                              t38 = material.color.get$r();
                            case 22:
                              state0 = 0;
                              t40 = this._color4.r;
                            case 23:
                              state0 = 0;
                              t42 = $.max(0, $.min($.mul(t38, t40), 1));
                              this._color4.r = t42;
                              t42 = material.color.get$g();
                            case 24:
                              state0 = 0;
                              t44 = this._color4.g;
                            case 25:
                              state0 = 0;
                              t46 = $.max(0, $.min($.mul(t42, t44), 1));
                              this._color4.g = t46;
                              t46 = material.color.get$b();
                            case 26:
                              state0 = 0;
                              t48 = this._color4.b;
                            case 27:
                              state0 = 0;
                              t50 = $.max(0, $.min($.mul(t46, t48), 1));
                              this._color4.b = t50;
                              this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
                              this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
                              this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
                              this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
                              this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
                          }
                        else
                          switch (state0) {
                            case 0:
                              t1 = t2.r;
                              this._color.r = t1;
                              t1 = this._ambientLight.g;
                              this._color.g = t1;
                              t1 = this._ambientLight.b;
                              this._color.b = t1;
                              this.calculateLight$4(this._lights, element.centroidWorld, element.normalWorld, this._color);
                              t1 = material.color.get$r();
                            case 28:
                              state0 = 0;
                              t3 = this._color.r;
                            case 29:
                              state0 = 0;
                              t5 = $.max(0, $.min($.mul(t1, t3), 1));
                              this._color.r = t5;
                              t5 = material.color.get$g();
                            case 30:
                              state0 = 0;
                              t7 = this._color.g;
                            case 31:
                              state0 = 0;
                              t9 = $.max(0, $.min($.mul(t5, t7), 1));
                              this._color.g = t9;
                              t9 = material.color.get$b();
                            case 32:
                              state0 = 0;
                              t11 = this._color.b;
                            case 33:
                              state0 = 0;
                              t13 = $.max(0, $.min($.mul(t9, t11), 1));
                              this._color.b = t13;
                              this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
                              t1 = material.wireframe === true;
                              t2 = this._color;
                              if (t1)
                                this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                              else {
                                this.setFillStyle$1(t2.getContextStyle$0());
                                this._context.fill$0();
                              }
                          }
                    }
                  else {
                    this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
                    t1 = material.wireframe === true;
                    t2 = material.color;
                    if (t1)
                      this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                    else {
                      this.setFillStyle$1(t2.getContextStyle$0());
                      this._context.fill$0();
                    }
                  }
              }
            else if (typeof material === 'object' && material !== null && !!material.is$MeshNormalMaterial) {
              t1 = element.normalWorld;
              t2 = this.normalToComponent$1(t1.x);
              this._color.r = t2;
              t2 = this.normalToComponent$1(t1.y);
              this._color.g = t2;
              t2 = this.normalToComponent$1(t1.z);
              this._color.b = t2;
              this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
              t1 = material.wireframe === true;
              t2 = this._color;
              if (t1)
                this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
              else {
                this.setFillStyle$1(t2.getContextStyle$0());
                this._context.fill$0();
              }
            } else if (typeof material === 'object' && material !== null && !!material.is$MeshDepthMaterial) {
              this._near = this._camera.get$near();
              this._far = this._camera.get$far();
              t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              t1 = 1 - t1;
              this._color1.b = t1;
              this._color1.g = t1;
              this._color1.r = t1;
              t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              t1 = 1 - t1;
              this._color2.b = t1;
              this._color2.g = t1;
              this._color2.r = t1;
              t1 = this.smoothstep$3(v4.get$positionScreen().get$z(), this._near, this._far);
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              t1 = 1 - t1;
              this._color3.b = t1;
              this._color3.g = t1;
              this._color3.r = t1;
              t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
              if (typeof t1 !== 'number')
                throw $.iae(t1);
              t1 = 1 - t1;
              this._color4.b = t1;
              this._color4.g = t1;
              this._color4.r = t1;
              this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
              this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
              this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
              this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
              this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
            }
        }
  }
},
 drawTriangle$6: function(x0, y0, x1, y1, x2, y2) {
  this._context.beginPath$0();
  this._context.moveTo$2(x0, y0);
  this._context.lineTo$2(x1, y1);
  this._context.lineTo$2(x2, y2);
  this._context.lineTo$2(x0, y0);
  this._context.closePath$0();
},
 drawQuad$8: function(x0, y0, x1, y1, x2, y2, x3, y3) {
  this._context.beginPath$0();
  this._context.moveTo$2(x0, y0);
  this._context.lineTo$2(x1, y1);
  this._context.lineTo$2(x2, y2);
  this._context.lineTo$2(x3, y3);
  this._context.lineTo$2(x0, y0);
  this._context.closePath$0();
},
 strokePath$4: function(color, linewidth, linecap, linejoin) {
  this.setLineWidth$1(linewidth);
  this.setLineCap$1(linecap);
  this.setLineJoin$1(linejoin);
  this.setStrokeStyle$1(color.getContextStyle$0());
  this._context.stroke$0();
  this._bboxRect.inflate$1($.mul(linewidth, 2));
},
 patternPath$13: function(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {
  var t1, t2, t3, repeatX, repeatY, t4, t5, offsetX, offsetY, width, height, u00, v00, u10, v10, u20, v20, det, canvas, context, data, index, idet, a, b, c, d, e, f;
  if ($.eqB(texture.get$image().get$width(), 0))
    return;
  if (!$.eqB(texture.get$needsUpdate(), true)) {
    t1 = this._patterns;
    t2 = texture.get$id();
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    t3 = t1[t2] == null;
    t1 = t3;
  } else
    t1 = true;
  if (t1) {
    repeatX = $.eqB(texture.get$wrapS(), 0);
    repeatY = $.eqB(texture.get$wrapT(), 0);
    t1 = this._patterns;
    t2 = texture.get$id();
    t3 = this._context;
    t4 = texture.get$image();
    if (repeatX && repeatY)
      t5 = 'repeat';
    else if (repeatX && !repeatY)
      t5 = 'repeat-x';
    else
      t5 = !repeatX && repeatY ? 'repeat-y' : 'no-repeat';
    t5 = t3.createPattern$2(t4, t5);
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = t5;
    texture.set$needsUpdate(false);
  }
  t1 = this._patterns;
  t2 = texture.get$id();
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  this.setFillStyle$1(t1[t2]);
  offsetX = $.div(texture.get$offset().get$x(), texture.get$repeat().get$x());
  offsetY = $.div(texture.get$offset().get$y(), texture.get$repeat().get$y());
  width = $.mul(texture.get$image().get$width(), texture.get$repeat().get$x());
  height = $.mul(texture.get$image().get$height(), texture.get$repeat().get$y());
  u00 = $.mul($.add(u0, offsetX), width);
  v00 = $.mul($.add(v0, offsetY), height);
  u10 = $.mul($.add(u1, offsetX), width);
  v10 = $.mul($.add(v1, offsetY), height);
  u20 = $.mul($.add(u2, offsetX), width);
  v20 = $.mul($.add(v2, offsetY), height);
  x1 = $.sub(x1, x0);
  y1 = $.sub(y1, y0);
  x2 = $.sub(x2, x0);
  y2 = $.sub(y2, y0);
  u10 = $.sub(u10, u00);
  v10 = $.sub(v10, v00);
  u20 = $.sub(u20, u00);
  v20 = $.sub(v20, v00);
  det = $.sub($.mul(u10, v20), $.mul(u20, v10));
  if ($.eqB(det, 0)) {
    t1 = this._imagedatas;
    t2 = texture.get$id();
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    if (t1[t2] == null) {
      canvas = $.Element_Element$tag('canvas');
      canvas.set$width(texture.get$image().get$width());
      canvas.set$height(texture.get$image().get$height());
      context = canvas.getContext$1('2d');
      context.drawImage$3(texture.get$image(), 0, 0);
      t1 = this._imagedatas;
      t2 = texture.get$id();
      t3 = context.getImageData$4(0, 0, texture.get$image().get$width(), texture.get$image().get$height()).get$data();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t1[t2] = t3;
    }
    t1 = this._imagedatas;
    t2 = texture.get$id();
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    data = t1[t2];
    index = $.mul($.add($.floor(u00), $.mul($.floor(v00), texture.get$image().get$width())), 4);
    this._color.setRGB$3($.div($.index(data, index), 255), $.div($.index(data, $.add(index, 1)), 255), $.div($.index(data, $.add(index, 2)), 255));
    this.setFillStyle$1(this._color.getContextStyle$0());
    this._context.fill$0();
    return;
  }
  if (typeof det !== 'number')
    throw $.iae(det);
  idet = 1 / det;
  a = $.mul($.sub($.mul(v20, x1), $.mul(v10, x2)), idet);
  b = $.mul($.sub($.mul(v20, y1), $.mul(v10, y2)), idet);
  c = $.mul($.sub($.mul(u10, x2), $.mul(u20, x1)), idet);
  d = $.mul($.sub($.mul(u10, y2), $.mul(u20, y1)), idet);
  e = $.sub($.sub(x0, $.mul(a, u00)), $.mul(c, v00));
  f = $.sub($.sub(y0, $.mul(b, u00)), $.mul(d, v00));
  this._context.save$0();
  this._context.transform$6(a, b, c, d, e, f);
  this._context.fill$0();
  this._context.restore$0();
},
 clipImage$13: function(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {
  var width, height, idet, t1, a, t2, b, c, d, e, f;
  width = $.sub(image.get$width(), 1);
  height = $.sub(image.get$height(), 1);
  if (typeof width !== 'number')
    throw $.iae(width);
  u0 *= width;
  if (typeof height !== 'number')
    throw $.iae(height);
  v0 *= height;
  u1 *= width;
  v1 *= height;
  u2 *= width;
  v2 *= height;
  x1 = $.sub(x1, x0);
  y1 = $.sub(y1, y0);
  x2 = $.sub(x2, x0);
  y2 = $.sub(y2, y0);
  u1 -= u0;
  v1 -= v0;
  u2 -= u0;
  v2 -= v0;
  idet = 1 / (u1 * v2 - u2 * v1);
  if (typeof x1 !== 'number')
    throw $.iae(x1);
  t1 = v2 * x1;
  if (typeof x2 !== 'number')
    throw $.iae(x2);
  a = (t1 - v1 * x2) * idet;
  if (typeof y1 !== 'number')
    throw $.iae(y1);
  t2 = v2 * y1;
  if (typeof y2 !== 'number')
    throw $.iae(y2);
  b = (t2 - v1 * y2) * idet;
  c = (u1 * x2 - u2 * x1) * idet;
  d = (u1 * y2 - u2 * y1) * idet;
  e = $.sub($.sub(x0, a * u0), c * v0);
  f = $.sub($.sub(y0, b * u0), d * v0);
  this._context.save$0();
  this._context.transform$6(a, b, c, d, e, f);
  this._context.clip$0();
  this._context.drawImage$3(image, 0, 0);
  this._context.restore$0();
},
 getGradientTexture$4: function(color1, color2, color3, color4) {
  var c1r, c1g, c1b, c2r, c2g, c2b, c3r, c3g, c3b, c4r, c4g, c4b, t1, t2;
  c1r = $.not($.not($.mul(color1.r, 255)));
  c1g = $.not($.not($.mul(color1.g, 255)));
  c1b = $.not($.not($.mul(color1.b, 255)));
  c2r = $.not($.not($.mul(color2.r, 255)));
  c2g = $.not($.not($.mul(color2.g, 255)));
  c2b = $.not($.not($.mul(color2.b, 255)));
  c3r = $.not($.not($.mul(color3.r, 255)));
  c3g = $.not($.not($.mul(color3.g, 255)));
  c3b = $.not($.not($.mul(color3.b, 255)));
  c4r = $.not($.not($.mul(color4.r, 255)));
  c4g = $.not($.not($.mul(color4.g, 255)));
  c4b = $.not($.not($.mul(color4.b, 255)));
  t1 = this._pixelMapData;
  if ($.ltB(c1r, 0))
    t2 = 0;
  else
    t2 = $.gtB(c1r, 255) ? 255 : c1r;
  $.indexSet(t1, 0, t2);
  t2 = this._pixelMapData;
  if ($.ltB(c1g, 0))
    t1 = 0;
  else
    t1 = $.gtB(c1g, 255) ? 255 : c1g;
  $.indexSet(t2, 1, t1);
  t1 = this._pixelMapData;
  if ($.ltB(c1b, 0))
    t2 = 0;
  else
    t2 = $.gtB(c1b, 255) ? 255 : c1b;
  $.indexSet(t1, 2, t2);
  t2 = this._pixelMapData;
  if ($.ltB(c2r, 0))
    t1 = 0;
  else
    t1 = $.gtB(c2r, 255) ? 255 : c2r;
  $.indexSet(t2, 4, t1);
  t1 = this._pixelMapData;
  if ($.ltB(c2g, 0))
    t2 = 0;
  else
    t2 = $.gtB(c2g, 255) ? 255 : c2g;
  $.indexSet(t1, 5, t2);
  t2 = this._pixelMapData;
  if ($.ltB(c2b, 0))
    t1 = 0;
  else
    t1 = $.gtB(c2b, 255) ? 255 : c2b;
  $.indexSet(t2, 6, t1);
  t1 = this._pixelMapData;
  if ($.ltB(c3r, 0))
    t2 = 0;
  else
    t2 = $.gtB(c3r, 255) ? 255 : c3r;
  $.indexSet(t1, 8, t2);
  t2 = this._pixelMapData;
  if ($.ltB(c3g, 0))
    t1 = 0;
  else
    t1 = $.gtB(c3g, 255) ? 255 : c3g;
  $.indexSet(t2, 9, t1);
  t1 = this._pixelMapData;
  if ($.ltB(c3b, 0))
    t2 = 0;
  else
    t2 = $.gtB(c3b, 255) ? 255 : c3b;
  $.indexSet(t1, 10, t2);
  t2 = this._pixelMapData;
  if ($.ltB(c4r, 0))
    t1 = 0;
  else
    t1 = $.gtB(c4r, 255) ? 255 : c4r;
  $.indexSet(t2, 12, t1);
  t1 = this._pixelMapData;
  if ($.ltB(c4g, 0))
    t2 = 0;
  else
    t2 = $.gtB(c4g, 255) ? 255 : c4g;
  $.indexSet(t1, 13, t2);
  t2 = this._pixelMapData;
  if ($.ltB(c4b, 0))
    t1 = 0;
  else
    t1 = $.gtB(c4b, 255) ? 255 : c4b;
  $.indexSet(t2, 14, t1);
  this._pixelMapContext.putImageData$3(this._pixelMapImage, 0, 0);
  this._gradientMapContext.drawImage$3(this._pixelMap, 0, 0);
  return this._gradientMap;
},
 smoothstep$3: function(value, min, max) {
  var x, t1;
  x = $.div($.sub(value, min), $.sub(max, min));
  t1 = $.mul(x, x);
  if (typeof x !== 'number')
    throw $.iae(x);
  return $.mul(t1, 3 - 2 * x);
},
 normalToComponent$1: function(normal) {
  var component, t1;
  component = $.mul($.add(normal, 1), 0.5);
  if ($.ltB(component, 0))
    t1 = 0;
  else
    t1 = $.gtB(component, 1) ? 1 : component;
  return t1;
},
 expand$2: function(v1, v2) {
  var t1, t3, x, t5, y, det, idet, t7;
  t1 = v2.get$x();
  if (typeof t1 !== 'number')
    return this.expand$2$bailout(1, v1, v2, t1);
  t3 = v1.get$x();
  if (typeof t3 !== 'number')
    return this.expand$2$bailout(2, v1, v2, t1, t3);
  x = t1 - t3;
  t3 = v2.get$y();
  if (typeof t3 !== 'number')
    return this.expand$2$bailout(3, v1, v2, t3, x);
  t5 = v1.get$y();
  if (typeof t5 !== 'number')
    return this.expand$2$bailout(4, v1, v2, t5, t3, x);
  y = t3 - t5;
  det = x * x + y * y;
  if (det === 0)
    return;
  idet = 1 / $.sqrt(det);
  x *= idet;
  y *= idet;
  t1 = v2.get$x();
  if (typeof t1 !== 'number')
    return this.expand$2$bailout(5, v1, x, v2, y, t1);
  v2.set$x(t1 + x);
  t3 = v2.get$y();
  if (typeof t3 !== 'number')
    return this.expand$2$bailout(6, v1, x, v2, y, t3);
  v2.set$y(t3 + y);
  t5 = v1.get$x();
  if (typeof t5 !== 'number')
    return this.expand$2$bailout(7, v1, x, y, t5);
  v1.set$x(t5 - x);
  t7 = v1.get$y();
  if (typeof t7 !== 'number')
    return this.expand$2$bailout(8, v1, t7, y);
  v1.set$y(t7 - y);
},
 expand$2$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 2:
      t3 = env3;
      t1 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 3:
      x = env3;
      t3 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 4:
      x = env4;
      t3 = env3;
      t5 = env2;
      v2 = env1;
      v1 = env0;
      break;
    case 5:
      t1 = env4;
      y = env3;
      v2 = env2;
      x = env1;
      v1 = env0;
      break;
    case 6:
      t3 = env4;
      y = env3;
      v2 = env2;
      x = env1;
      v1 = env0;
      break;
    case 7:
      t5 = env3;
      y = env2;
      x = env1;
      v1 = env0;
      break;
    case 8:
      y = env2;
      t7 = env1;
      v1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = v2.get$x();
    case 1:
      state0 = 0;
      t3 = v1.get$x();
    case 2:
      state0 = 0;
      x = $.sub(t1, t3);
      t3 = v2.get$y();
    case 3:
      state0 = 0;
      t5 = v1.get$y();
    case 4:
      state0 = 0;
      y = $.sub(t3, t5);
      det = $.add($.mul(x, x), $.mul(y, y));
      if ($.eqB(det, 0))
        return;
      idet = 1 / $.sqrt(det);
      x = $.mul(x, idet);
      y = $.mul(y, idet);
      t1 = v2.get$x();
    case 5:
      state0 = 0;
      v2.set$x($.add(t1, x));
      t3 = v2.get$y();
    case 6:
      state0 = 0;
      v2.set$y($.add(t3, y));
      t5 = v1.get$x();
    case 7:
      state0 = 0;
      v1.set$x($.sub(t5, x));
      t7 = v1.get$y();
    case 8:
      var t1, v2, v1, t3, x, t5, y, det, idet, t7;
      state0 = 0;
      v1.set$y($.sub(t7, y));
  }
},
 setOpacity$1: function(value) {
  if (!$.eqB(this._contextGlobalAlpha, value)) {
    this._contextGlobalAlpha = value;
    this._context.set$globalAlpha(value);
  }
},
 setBlending$1: function(value) {
  if (!$.eqB(this._contextGlobalCompositeOperation, value)) {
    switch (value) {
      case 1:
        this._context.set$globalCompositeOperation('source-over');
        break;
      case 2:
        this._context.set$globalCompositeOperation('lighter');
        break;
      case 3:
        this._context.set$globalCompositeOperation('darker');
        break;
    }
    this._contextGlobalCompositeOperation = value;
  }
},
 setLineWidth$1: function(value) {
  if (!$.eqB(this._contextLineWidth, value)) {
    this._contextLineWidth = value;
    this._context.set$lineWidth(value);
  }
},
 setLineCap$1: function(value) {
  if (!$.eqB(this._contextLineCap, value)) {
    this._contextLineCap = value;
    this._context.set$lineCap(value);
  }
},
 setLineJoin$1: function(value) {
  if (!$.eqB(this._contextLineJoin, value)) {
    this._contextLineJoin = value;
    this._context.set$lineJoin(value);
  }
},
 setStrokeStyle$1: function(style) {
  if (!$.eqB(this._contextStrokeStyle, style)) {
    this._contextStrokeStyle = style;
    this._context.set$strokeStyle(style);
  }
},
 setFillStyle$1: function(style) {
  var t1;
  if (!$.eqB(this._contextFillStyle, style)) {
    this._contextFillStyle = style;
    t1 = this._contextFillStyle;
    this._context.set$fillStyle(t1);
  }
},
 CanvasRenderer$1: function(parameters) {
  var t1, t2;
  parameters = !(parameters == null) ? parameters : $.makeLiteralMap([]);
  this._projector = $.Projector$();
  this._canvas = !($.index(parameters, 'canvas') == null) ? $.index(parameters, 'canvas') : $.Element_Element$tag('canvas');
  this._context = this._canvas.getContext$1('2d');
  this.debug = !($.index(parameters, 'debug') == null) && $.index(parameters, 'debug');
  this._clearColor = $.Color$(0);
  this._clearOpacity = 0;
  this._contextGlobalAlpha = 1;
  this._contextGlobalCompositeOperation = 0;
  this._contextStrokeStyle = null;
  this._contextFillStyle = null;
  this._contextLineWidth = null;
  this._contextLineCap = null;
  this._contextLineJoin = null;
  this._v5 = $.RenderableVertex$();
  this._v6 = $.RenderableVertex$();
  this._color = $.Color$(null);
  this._color1 = $.Color$(null);
  this._color2 = $.Color$(null);
  this._color3 = $.Color$(null);
  this._color4 = $.Color$(null);
  this._patterns = [];
  this._imagedatas = [];
  this._clipRect = $.Rectangle$();
  this._clearRect = $.Rectangle$();
  this._bboxRect = $.Rectangle$();
  this._enableLighting = false;
  this._ambientLight = $.Color$(null);
  this._directionalLights = $.Color$(null);
  this._pointLights = $.Color$(null);
  this._vector3 = $.Vector3$(0, 0, 0);
  this._gradientMapQuality = 16;
  this._pixelMap = $.Element_Element$tag('canvas');
  this._pixelMap.set$height(2);
  this._pixelMap.set$width(2);
  this._pixelMapContext = this._pixelMap.getContext$1('2d');
  this._pixelMapContext.set$fillStyle('rgba(0,0,0,1)');
  this._pixelMapContext.fillRect$4(0, 0, 2, 2);
  this._pixelMapImage = this._pixelMapContext.getImageData$4(0, 0, 2, 2);
  this._pixelMapData = this._pixelMapImage.get$data();
  this._gradientMap = $.Element_Element$tag('canvas');
  t1 = this._gradientMapQuality;
  this._gradientMap.set$height(t1);
  this._gradientMap.set$width(t1);
  this._gradientMapContext = this._gradientMap.getContext$1('2d');
  t1 = this._gradientMapContext;
  t2 = -this._gradientMapQuality / 2;
  t1.translate$2(t2, t2);
  t2 = this._gradientMapContext;
  t1 = this._gradientMapQuality;
  t2.scale$2(t1, t1);
  this._gradientMapQuality = this._gradientMapQuality - 1;
  this.domElement = this._canvas;
  this._autoClear = true;
  this._sortObjects = true;
  this._sortElements = true;
  this._info = $.CanvasRenderData$();
}
};

$$.CanvasRenderData = {"": ["render"],
 "super": "Object",
 render$0: function() { return this.render.call$0(); },
 render$2: function(arg0, arg1) { return this.render.call$2(arg0, arg1); },
 CanvasRenderData$0: function() {
  this.render = $.RenderInts$();
}
};

$$.RenderInts = {"": ["vertices?", "faces?"],
 "super": "Object",
 reset$0: function() {
  this.vertices = 0;
  this.faces = 0;
},
 RenderInts$0: function() {
  this.reset$0();
}
};

$$.Scene = {"": ["fog", "overrideMaterial", "objects=", "lights=", "__objectsAdded", "__objectsRemoved", "id", "name", "properties", "parent", "children", "up", "position", "rotation", "scale", "eulerOrder", "_dynamic", "doubleSided", "flipSided", "rotationAutoUpdate", "renderDepth", "matrix", "matrixWorld", "matrixRotationWorld", "matrixAutoUpdate", "matrixWorldNeedsUpdate", "quaternion", "useQuaternion", "boundRadius", "boundRadiusScale", "visible", "castShadow", "receiveShadow", "frustumCulled", "_vector", "__data"],
 "super": "Object3D",
 addObject$1: function(object) {
  var t1, i, c;
  if (typeof object === 'object' && object !== null && !!object.is$Light) {
    t1 = $.indexOf$1(this.lights, object);
    if (typeof t1 !== 'number')
      return this.addObject$1$bailout(1, object, t1);
    if (t1 === -1)
      $.add$1(this.lights, object);
  } else if (!(typeof object === 'object' && object !== null && !!object.is$Camera || typeof object === 'object' && object !== null && !!object.is$Bone)) {
    t1 = $.indexOf$1(this.objects, object);
    if (typeof t1 !== 'number')
      return this.addObject$1$bailout(2, object, t1);
    if (t1 === -1) {
      $.add$1(this.objects, object);
      this.__objectsAdded.push(object);
      i = $.indexOf$1(this.__objectsRemoved, object);
      if (typeof i !== 'number')
        return this.addObject$1$bailout(3, object, i);
      if (!(i === -1))
        $.removeRange(this.__objectsRemoved, i, 1);
    }
  }
  c = 0;
  while (true) {
    t1 = $.get$length(object.get$children());
    if (typeof t1 !== 'number')
      return this.addObject$1$bailout(4, object, c, t1);
    if (!(c < t1))
      break;
    t1 = object.get$children();
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.addObject$1$bailout(5, object, c, t1);
    if (c >= t1.length)
      throw $.ioore(c);
    this.addObject$1(t1[c]);
    ++c;
  }
},
 addObject$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      object = env0;
      break;
    case 2:
      t1 = env1;
      object = env0;
      break;
    case 3:
      i = env1;
      object = env0;
      break;
    case 4:
      t1 = env2;
      c = env1;
      object = env0;
      break;
    case 5:
      t1 = env2;
      c = env1;
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && !!object.is$Light)
        switch (state0) {
          case 0:
            t1 = $.indexOf$1(this.lights, object);
          case 1:
            state0 = 0;
            if ($.eqB(t1, -1))
              $.add$1(this.lights, object);
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 0 && !(typeof object === 'object' && object !== null && !!object.is$Camera || typeof object === 'object' && object !== null && !!object.is$Bone))
              switch (state0) {
                case 0:
                  t1 = $.indexOf$1(this.objects, object);
                case 2:
                  state0 = 0;
                case 3:
                  if (state0 === 3 || state0 === 0 && $.eqB(t1, -1))
                    switch (state0) {
                      case 0:
                        $.add$1(this.objects, object);
                        this.__objectsAdded.push(object);
                        i = $.indexOf$1(this.__objectsRemoved, object);
                      case 3:
                        state0 = 0;
                        if (!$.eqB(i, -1))
                          $.removeRange(this.__objectsRemoved, i, 1);
                    }
              }
        }
      c = 0;
    case 4:
    case 5:
      var t1, object, i, c;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t1 = $.get$length(object.get$children());
            case 4:
              state0 = 0;
              if (!$.ltB(c, t1))
                break L0;
              t1 = object.get$children();
            case 5:
              state0 = 0;
              this.addObject$1($.index(t1, c));
              ++c;
          }
  }
},
 removeObject$1: function(object) {
  var i, ai, c, t1;
  if (typeof object === 'object' && object !== null && !!object.is$Light) {
    i = $.indexOf$1(this.lights, object);
    if (typeof i !== 'number')
      return this.removeObject$1$bailout(1, object, i);
    if (!(i === -1))
      $.removeRange(this.lights, i, 1);
  } else if (!(typeof object === 'object' && object !== null && !!object.is$Camera)) {
    i = $.indexOf$1(this.objects, object);
    if (typeof i !== 'number')
      return this.removeObject$1$bailout(2, object, i);
    if (!(i === -1)) {
      $.removeRange(this.objects, i, 1);
      this.__objectsRemoved.push(object);
      ai = $.indexOf$1(this.__objectsAdded, object);
      if (typeof ai !== 'number')
        return this.removeObject$1$bailout(3, object, ai);
      if (!(ai === -1))
        $.removeRange(this.__objectsAdded, ai, 1);
    }
  }
  c = 0;
  while (true) {
    t1 = $.get$length(object.get$children());
    if (typeof t1 !== 'number')
      return this.removeObject$1$bailout(4, object, t1, c);
    if (!(c < t1))
      break;
    t1 = object.get$children();
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.removeObject$1$bailout(5, object, c, t1);
    if (c >= t1.length)
      throw $.ioore(c);
    this.removeObject$1(t1[c]);
    ++c;
  }
},
 removeObject$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      i = env1;
      object = env0;
      break;
    case 2:
      i = env1;
      object = env0;
      break;
    case 3:
      ai = env1;
      object = env0;
      break;
    case 4:
      c = env2;
      t1 = env1;
      object = env0;
      break;
    case 5:
      t1 = env2;
      c = env1;
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && !!object.is$Light)
        switch (state0) {
          case 0:
            i = $.indexOf$1(this.lights, object);
          case 1:
            state0 = 0;
            if (!$.eqB(i, -1))
              $.removeRange(this.lights, i, 1);
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 0 && !(typeof object === 'object' && object !== null && !!object.is$Camera))
              switch (state0) {
                case 0:
                  i = $.indexOf$1(this.objects, object);
                case 2:
                  state0 = 0;
                case 3:
                  if (state0 === 3 || state0 === 0 && !$.eqB(i, -1))
                    switch (state0) {
                      case 0:
                        $.removeRange(this.objects, i, 1);
                        this.__objectsRemoved.push(object);
                        ai = $.indexOf$1(this.__objectsAdded, object);
                      case 3:
                        state0 = 0;
                        if (!$.eqB(ai, -1))
                          $.removeRange(this.__objectsAdded, ai, 1);
                    }
              }
        }
      c = 0;
    case 4:
    case 5:
      var i, object, ai, c, t1;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t1 = $.get$length(object.get$children());
            case 4:
              state0 = 0;
              if (!$.ltB(c, t1))
                break L0;
              t1 = object.get$children();
            case 5:
              state0 = 0;
              this.removeObject$1($.index(t1, c));
              ++c;
          }
  }
},
 Scene$0: function() {
  this.fog = null;
  this.overrideMaterial = null;
  this.matrixAutoUpdate = false;
  this.objects = [];
  this.lights = [];
  this.__objectsAdded = [];
  this.__objectsRemoved = [];
},
 is$Scene: true
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"": ["arg2_5", "arg1_4", "closure_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_3.call$2(this.arg1_4, this.arg2_5);
}
};

$$.Maps__emitMap_anon = {"": ["box_0", "visiting_3", "result_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_2, ', ');
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$.DoubleLinkedQueue_length__ = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._LinkedHashMapImpl_forEach__ = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$._FilteredElementList__filtered_anon = {"": [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._ChildrenElementList_filter_anon = {"": ["output_1", "f_0"],
 "super": "Closure",
 call$1: function(element) {
  if (this.f_0.call$1(element) === true)
    $.add$1(this.output_1, element);
}
};

$$._FilteredElementList_removeRange_anon = {"": [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.NoSuchMethodError_toString_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.box_0;
  if ($.gtB(t1.i_2, 0))
    $.add$1(t1.sb_1, ', ');
  $.add$1(t1.sb_1, key);
  $.add$1(t1.sb_1, ': ');
  $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$.Geometry_computeBoundingSphere_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(curMaxRadiusSq, vertex) {
  var radiusSq, t1;
  radiusSq = vertex.lengthSq$0();
  t1 = this.box_0;
  t1.radiusSq_1 = radiusSq;
  return $.gtB(t1.radiusSq_1, curMaxRadiusSq) ? t1.radiusSq_1 : curMaxRadiusSq;
}
};

$$.Geometry_computeFaceNormals_anon = {"": ["this_6", "box_0", "ab_5", "cb_4"],
 "super": "Closure",
 call$1: function(face) {
  var t1, vA, t2, t3, t4;
  t1 = this.this_6;
  vA = $.index(t1.get$vertices(), face.get$a());
  t2 = this.box_0;
  t2.vA_1 = vA;
  t2.vB_2 = $.index(t1.get$vertices(), face.get$b());
  t2.vC_3 = $.index(t1.get$vertices(), face.get$c());
  t3 = this.cb_4;
  t3.sub$2(t2.vC_3, t2.vB_2);
  t4 = this.ab_5;
  t4.sub$2(t2.vA_1, t2.vB_2);
  t3.crossSelf$1(t4);
  if (t3.isZero$0() !== true)
    t3.normalize$0();
  face.get$normal().copy$1(t3);
}
};

$$.Geometry_computeCentroids_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(face) {
  var t1, t2;
  face.get$centroid().setValues$3(0, 0, 0);
  if (typeof face === 'object' && face !== null && !!face.is$Face3) {
    t1 = face.centroid;
    t2 = this.this_0;
    t1.addSelf$1($.index(t2.get$vertices(), face.a));
    face.centroid.addSelf$1($.index(t2.get$vertices(), face.b));
    face.centroid.addSelf$1($.index(t2.get$vertices(), face.c));
    face.centroid.divideScalar$1(3);
  } else if (typeof face === 'object' && face !== null && !!face.is$Face4) {
    t1 = face.centroid;
    t2 = this.this_0;
    t1.addSelf$1($.index(t2.get$vertices(), face.a));
    face.centroid.addSelf$1($.index(t2.get$vertices(), face.b));
    face.centroid.addSelf$1($.index(t2.get$vertices(), face.c));
    face.centroid.addSelf$1($.index(t2.get$vertices(), face.d));
    face.centroid.divideScalar$1(4);
  }
}
};

$$.Face4_clone_anon = {"": [],
 "super": "Closure",
 call$1: function(v) {
  return v.clone$0();
}
};

$$.Face4_clone_anon0 = {"": [],
 "super": "Closure",
 call$1: function(v) {
  return v.clone$0();
}
};

$$.Face4_clone_anon1 = {"": [],
 "super": "Closure",
 call$1: function(v) {
  return v.clone$0();
}
};

$$.Face3_clone_anon = {"": [],
 "super": "Closure",
 call$1: function(v) {
  return v.clone$0();
}
};

$$.Face3_clone_anon0 = {"": [],
 "super": "Closure",
 call$1: function(v) {
  return v.clone$0();
}
};

$$.Face3_clone_anon1 = {"": [],
 "super": "Closure",
 call$1: function(v) {
  return v.clone$0();
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["readSlot_8", "findSlot_7", "writeSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_7.call$1(e);
    t1.copy_1 = this.readSlot_8.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_6.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_7.call$1(e);
    t2 = this.readSlot_8;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_6.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_6;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, elementCopy, length$, i, copy, slot);
          for (t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, copy, i, length$);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$('structured clone of other type'));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env6;
      copy = env5;
      i = env4;
      length$ = env3;
      elementCopy = env2;
      t3 = env1;
      e = env0;
      break;
    case 3:
      length$ = env3;
      i = env2;
      copy = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_7.call$1(e);
        t1.copy_1 = this.readSlot_8.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_6.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, copy, t3, i, element, elementCopy, j;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.get$length(e);
            slot = this.findSlot_7.call$1(e);
            t2 = this.readSlot_8;
            copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_6.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t3 = this.writeSlot_6;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$('structured clone of other type'));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"": ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"": ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"": ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"": ["readSlot_7", "mustCopy_6", "writeSlot_5", "findSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_5.call$2(slot, copy);
    for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_6 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_5.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_5.call$2(slot, copy);
            for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.get$length(e);
            copy = this.mustCopy_6 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_5.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.Projector_projectScene_anon = {"": ["this_33", "far_32", "near_31", "box_0"],
 "super": "Closure",
 call$1: function(o) {
  var object, t1, t2, t3, face4, uvs, faceUVs, step, t4, t5;
  object = o.get$object();
  t1 = this.box_0;
  t1.object_12 = object;
  t1.modelMatrix_13 = t1.object_12.get$matrixWorld();
  t2 = this.this_33;
  t2.set$_vertexCount(0);
  t3 = t1.object_12;
  if (typeof t3 === 'object' && t3 !== null && !!t3.is$Mesh) {
    t1.geometry_15 = t1.object_12.get$geometry();
    t1.geometryMaterials_16 = t1.object_12.get$geometry().get$materials();
    t1.vertices_17 = t1.geometry_15.get$vertices();
    t1.faces_19 = t1.geometry_15.get$faces();
    t1.faceVertexUvs_23 = t1.geometry_15.get$faceVertexUvs();
    t1.rotationMatrix_14 = t1.object_12.get$matrixRotationWorld().extractRotation$1(t1.modelMatrix_13);
    t3 = t1.object_12.get$material();
    t1.isFaceMaterial_28 = typeof t3 === 'object' && t3 !== null && !!t3.is$MeshFaceMaterial;
    t1.side_30 = t1.object_12.get$material().get$side();
    $.forEach(t1.vertices_17, new $.Projector_projectScene_anon1(this.far_32, this.near_31, t2, t1));
    t1.fl_5 = $.get$length(t1.faces_19);
    for (t1.f_4 = 0; $.ltB(t1.f_4, t1.fl_5); t1.f_4 = $.add(t1.f_4, 1)) {
      t1.face_20 = $.index(t1.faces_19, t1.f_4);
      t1.material_29 = $.eqB(t1.isFaceMaterial_28, true) ? $.index(t1.geometryMaterials_16, t1.face_20.get$materialIndex()) : t1.object_12.get$material();
      t3 = t1.material_29;
      if (t3 == null)
        continue;
      t1.side_30 = t3.get$side();
      t3 = t1.face_20;
      if (typeof t3 === 'object' && t3 !== null && !!t3.is$Face3) {
        t1.v1_24 = $.index(t2.get$_vertexPool(), t1.face_20.get$a());
        t1.v2_25 = $.index(t2.get$_vertexPool(), t1.face_20.get$b());
        t1.v3_26 = $.index(t2.get$_vertexPool(), t1.face_20.get$c());
        if (t1.v1_24.get$visible() === true && t1.v2_25.get$visible() === true && t1.v3_26.get$visible() === true) {
          t1.visible_1 = $.lt($.sub($.mul($.sub(t1.v3_26.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()), $.sub(t1.v2_25.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y())), $.mul($.sub(t1.v3_26.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y()), $.sub(t1.v2_25.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()))), 0);
          if ($.eqB(t1.side_30, 2) || $.eqB(t1.visible_1, $.eq(t1.side_30, 0))) {
            t1._face_21 = t2.getNextFace3InPool$0();
            t1._face_21.get$v1().copy$1(t1.v1_24);
            t1._face_21.get$v2().copy$1(t1.v2_25);
            t1._face_21.get$v3().copy$1(t1.v3_26);
          } else
            continue;
        } else
          continue;
      } else {
        t3 = t1.face_20;
        if (typeof t3 === 'object' && t3 !== null && !!t3.is$Face4) {
          face4 = t1.face_20;
          t1.v1_24 = $.index(t2.get$_vertexPool(), face4.get$a());
          t1.v2_25 = $.index(t2.get$_vertexPool(), face4.get$b());
          t1.v3_26 = $.index(t2.get$_vertexPool(), face4.get$c());
          t1.v4_27 = $.index(t2.get$_vertexPool(), face4.get$d());
          if (t1.v1_24.get$visible() === true && t1.v2_25.get$visible() === true && t1.v3_26.get$visible() === true && t1.v4_27.get$visible() === true) {
            t1.visible_1 = $.ltB($.sub($.mul($.sub(t1.v4_27.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()), $.sub(t1.v2_25.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y())), $.mul($.sub(t1.v4_27.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y()), $.sub(t1.v2_25.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()))), 0) || $.ltB($.sub($.mul($.sub(t1.v2_25.get$positionScreen().get$x(), t1.v3_26.get$positionScreen().get$x()), $.sub(t1.v4_27.get$positionScreen().get$y(), t1.v3_26.get$positionScreen().get$y())), $.mul($.sub(t1.v2_25.get$positionScreen().get$y(), t1.v3_26.get$positionScreen().get$y()), $.sub(t1.v4_27.get$positionScreen().get$x(), t1.v3_26.get$positionScreen().get$x()))), 0);
            if ($.eqB(t1.side_30, 2) || $.eqB(t1.visible_1, $.eq(t1.side_30, 0))) {
              t1._face_21 = t2.getNextFace4InPool$0();
              t1._face_21.get$v1().copy$1(t1.v1_24);
              t1._face_21.get$v2().copy$1(t1.v2_25);
              t1._face_21.get$v3().copy$1(t1.v3_26);
              $.propertyTypeCast(t1._face_21, 'is$IRenderableFace4').get$v4().copy$1(t1.v4_27);
            } else
              continue;
          } else
            continue;
        }
      }
      t1._face_21.get$normalWorld().copy$1(t1.face_20.get$normal());
      if ($.eqB(t1.visible_1, false))
        t3 = $.eqB(t1.side_30, 1) || $.eqB(t1.side_30, 2);
      else
        t3 = false;
      if (t3)
        t1._face_21.get$normalWorld().negate$0();
      t1.rotationMatrix_14.multiplyVector3$1(t1._face_21.get$normalWorld());
      t1._face_21.get$centroidWorld().copy$1(t1.face_20.get$centroid());
      t1.modelMatrix_13.multiplyVector3$1(t1._face_21.get$centroidWorld());
      t3 = t1._face_21;
      t3.get$centroidScreen().copy$1(t3.get$centroidWorld());
      t2.get$_viewProjectionMatrix().multiplyVector3$1(t1._face_21.get$centroidScreen());
      t1.faceVertexNormals_22 = t1.face_20.get$vertexNormals();
      t1.nl_7 = $.get$length(t1.faceVertexNormals_22);
      for (t1.n_6 = 0; $.ltB(t1.n_6, t1.nl_7); t1.n_6 = $.add(t1.n_6, 1)) {
        t1.normal_18 = $.index(t1._face_21.get$vertexNormalsWorld(), t1.n_6);
        t1.normal_18.copy$1($.index(t1.faceVertexNormals_22, t1.n_6));
        if (t1.visible_1 !== true)
          t3 = $.eqB(t1.side_30, 1) || $.eqB(t1.side_30, 2);
        else
          t3 = false;
        if (t3)
          t1.normal_18.negate$0();
        t1.rotationMatrix_14.multiplyVector3$1(t1.normal_18);
      }
      t1.cl_9 = $.get$length(t1.faceVertexUvs_23);
      for (t1.c_8 = 0; $.ltB(t1.c_8, t1.cl_9); t1.c_8 = $.add(t1.c_8, 1)) {
        uvs = $.index($.index(t1.faceVertexUvs_23, t1.c_8), t1.f_4);
        if (typeof uvs !== 'string' && (typeof uvs !== 'object' || uvs === null || uvs.constructor !== Array && !uvs.is$JavaScriptIndexingBehavior()))
          return this.call$1$bailout(1, uvs, t1, t2);
        t1.ul_11 = uvs.length;
        for (t1.u_10 = 0; $.ltB(t1.u_10, t1.ul_11); t1.u_10 = $.add(t1.u_10, 1)) {
          faceUVs = $.index(t1._face_21.get$uvs(), t1.c_8);
          t3 = t1.u_10;
          if (t3 !== (t3 | 0))
            throw $.iae(t3);
          if (t3 < 0 || t3 >= uvs.length)
            throw $.ioore(t3);
          $.add$1(faceUVs, uvs[t3]);
        }
      }
      t3 = t1.material_29;
      t1._face_21.set$material(t3);
      t3 = t1.face_20.get$materialIndex();
      t3 = !(t3 == null) ? $.index(t1.geometryMaterials_16, t3) : null;
      t1._face_21.set$faceMaterial(t3);
      t3 = t1._face_21.get$centroidScreen().get$z();
      t1._face_21.set$z(t3);
      $.add$1(t2.get$_renderData().get$elements(), t1._face_21);
    }
  } else {
    t3 = t1.object_12;
    if (typeof t3 === 'object' && t3 !== null && !!t3.is$Line) {
      t2.get$_modelViewProjectionMatrix().multiply$2(t2.get$_viewProjectionMatrix(), t1.modelMatrix_13);
      t1.vertices_17 = t1.object_12.get$geometry().get$vertices();
      t1.v1_24 = t2.getNextVertexInPool$0();
      t1.v1_24.get$positionScreen().copy$1($.index(t1.vertices_17, 0));
      t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_24.get$positionScreen());
      step = $.eqB(t1.object_12.get$type(), 1) ? 2 : 1;
      t1.vl_3 = $.get$length(t1.vertices_17);
      for (t1.v_2 = 1; $.ltB(t1.v_2, t1.vl_3); t1.v_2 = $.add(t1.v_2, 1)) {
        t1.v1_24 = t2.getNextVertexInPool$0();
        t1.v1_24.get$positionScreen().copy$1($.index(t1.vertices_17, t1.v_2));
        t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_24.get$positionScreen());
        if ($.gtB($.mod($.add(t1.v_2, 1), step), 0))
          continue;
        t1.v2_25 = $.index(t2.get$_vertexPool(), $.sub(t2.get$_vertexCount(), 2));
        t2.get$_clippedVertex1PositionScreen().copy$1(t1.v1_24.get$positionScreen());
        t2.get$_clippedVertex2PositionScreen().copy$1(t1.v2_25.get$positionScreen());
        if (t2.clipLine$2(t2.get$_clippedVertex1PositionScreen(), t2.get$_clippedVertex2PositionScreen()) === true) {
          t3 = t2.get$_clippedVertex1PositionScreen();
          t4 = t3.get$w();
          if (typeof t4 !== 'number')
            throw $.iae(t4);
          t3.multiplyScalar$1(1 / t4);
          t3 = t2.get$_clippedVertex2PositionScreen();
          t5 = t3.get$w();
          if (typeof t5 !== 'number')
            throw $.iae(t5);
          t3.multiplyScalar$1(1 / t5);
          t2.set$_line(t2.getNextLineInPool$0());
          t2.get$_line().get$v1().get$positionScreen().copy$1(t2.get$_clippedVertex1PositionScreen());
          t2.get$_line().get$v2().get$positionScreen().copy$1(t2.get$_clippedVertex2PositionScreen());
          t3 = $.max(t2.get$_clippedVertex1PositionScreen().get$z(), t2.get$_clippedVertex2PositionScreen().get$z());
          t2.get$_line().set$z(t3);
          t3 = t1.object_12.get$material();
          t2.get$_line().set$material(t3);
          $.add$1(t2.get$_renderData().get$elements(), t2.get$_line());
        }
      }
    }
  }
},
 call$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t2 = env2;
      t1 = env1;
      uvs = env0;
      break;
  }
  switch (state0) {
    case 0:
      object = o.get$object();
      t1 = this.box_0;
      t1.object_12 = object;
      t1.modelMatrix_13 = t1.object_12.get$matrixWorld();
      t2 = this.this_33;
      t2.set$_vertexCount(0);
      t3 = t1.object_12;
    case 1:
      var object, t1, t2, t3, face4, uvs, step, t4, t5;
      if (state0 === 1 || state0 === 0 && typeof t3 === 'object' && t3 !== null && !!t3.is$Mesh)
        switch (state0) {
          case 0:
            t1.geometry_15 = t1.object_12.get$geometry();
            t1.geometryMaterials_16 = t1.object_12.get$geometry().get$materials();
            t1.vertices_17 = t1.geometry_15.get$vertices();
            t1.faces_19 = t1.geometry_15.get$faces();
            t1.faceVertexUvs_23 = t1.geometry_15.get$faceVertexUvs();
            t1.rotationMatrix_14 = t1.object_12.get$matrixRotationWorld().extractRotation$1(t1.modelMatrix_13);
            t3 = t1.object_12.get$material();
            t1.isFaceMaterial_28 = typeof t3 === 'object' && t3 !== null && !!t3.is$MeshFaceMaterial;
            t1.side_30 = t1.object_12.get$material().get$side();
            $.forEach(t1.vertices_17, new $.Projector_projectScene_anon1(this.far_32, this.near_31, t2, t1));
            t1.fl_5 = $.get$length(t1.faces_19);
            t1.f_4 = 0;
          case 1:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!$.ltB(t1.f_4, t1.fl_5))
                      break L0;
                  case 1:
                    c$0: {
                      switch (state0) {
                        case 0:
                          t1.face_20 = $.index(t1.faces_19, t1.f_4);
                          t1.material_29 = $.eqB(t1.isFaceMaterial_28, true) ? $.index(t1.geometryMaterials_16, t1.face_20.get$materialIndex()) : t1.object_12.get$material();
                          t3 = t1.material_29;
                          if (t3 == null)
                            break c$0;
                          t1.side_30 = t3.get$side();
                          t3 = t1.face_20;
                          if (typeof t3 === 'object' && t3 !== null && !!t3.is$Face3) {
                            t1.v1_24 = $.index(t2.get$_vertexPool(), t1.face_20.get$a());
                            t1.v2_25 = $.index(t2.get$_vertexPool(), t1.face_20.get$b());
                            t1.v3_26 = $.index(t2.get$_vertexPool(), t1.face_20.get$c());
                            if (t1.v1_24.get$visible() === true && t1.v2_25.get$visible() === true && t1.v3_26.get$visible() === true) {
                              t1.visible_1 = $.lt($.sub($.mul($.sub(t1.v3_26.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()), $.sub(t1.v2_25.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y())), $.mul($.sub(t1.v3_26.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y()), $.sub(t1.v2_25.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()))), 0);
                              if ($.eqB(t1.side_30, 2) || $.eqB(t1.visible_1, $.eq(t1.side_30, 0))) {
                                t1._face_21 = t2.getNextFace3InPool$0();
                                t1._face_21.get$v1().copy$1(t1.v1_24);
                                t1._face_21.get$v2().copy$1(t1.v2_25);
                                t1._face_21.get$v3().copy$1(t1.v3_26);
                              } else
                                break c$0;
                            } else
                              break c$0;
                          } else {
                            t3 = t1.face_20;
                            if (typeof t3 === 'object' && t3 !== null && !!t3.is$Face4) {
                              face4 = t1.face_20;
                              t1.v1_24 = $.index(t2.get$_vertexPool(), face4.get$a());
                              t1.v2_25 = $.index(t2.get$_vertexPool(), face4.get$b());
                              t1.v3_26 = $.index(t2.get$_vertexPool(), face4.get$c());
                              t1.v4_27 = $.index(t2.get$_vertexPool(), face4.get$d());
                              if (t1.v1_24.get$visible() === true && t1.v2_25.get$visible() === true && t1.v3_26.get$visible() === true && t1.v4_27.get$visible() === true) {
                                t1.visible_1 = $.ltB($.sub($.mul($.sub(t1.v4_27.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()), $.sub(t1.v2_25.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y())), $.mul($.sub(t1.v4_27.get$positionScreen().get$y(), t1.v1_24.get$positionScreen().get$y()), $.sub(t1.v2_25.get$positionScreen().get$x(), t1.v1_24.get$positionScreen().get$x()))), 0) || $.ltB($.sub($.mul($.sub(t1.v2_25.get$positionScreen().get$x(), t1.v3_26.get$positionScreen().get$x()), $.sub(t1.v4_27.get$positionScreen().get$y(), t1.v3_26.get$positionScreen().get$y())), $.mul($.sub(t1.v2_25.get$positionScreen().get$y(), t1.v3_26.get$positionScreen().get$y()), $.sub(t1.v4_27.get$positionScreen().get$x(), t1.v3_26.get$positionScreen().get$x()))), 0);
                                if ($.eqB(t1.side_30, 2) || $.eqB(t1.visible_1, $.eq(t1.side_30, 0))) {
                                  t1._face_21 = t2.getNextFace4InPool$0();
                                  t1._face_21.get$v1().copy$1(t1.v1_24);
                                  t1._face_21.get$v2().copy$1(t1.v2_25);
                                  t1._face_21.get$v3().copy$1(t1.v3_26);
                                  $.propertyTypeCast(t1._face_21, 'is$IRenderableFace4').get$v4().copy$1(t1.v4_27);
                                } else
                                  break c$0;
                              } else
                                break c$0;
                            }
                          }
                          t1._face_21.get$normalWorld().copy$1(t1.face_20.get$normal());
                          if ($.eqB(t1.visible_1, false))
                            t3 = $.eqB(t1.side_30, 1) || $.eqB(t1.side_30, 2);
                          else
                            t3 = false;
                          if (t3)
                            t1._face_21.get$normalWorld().negate$0();
                          t1.rotationMatrix_14.multiplyVector3$1(t1._face_21.get$normalWorld());
                          t1._face_21.get$centroidWorld().copy$1(t1.face_20.get$centroid());
                          t1.modelMatrix_13.multiplyVector3$1(t1._face_21.get$centroidWorld());
                          t3 = t1._face_21;
                          t3.get$centroidScreen().copy$1(t3.get$centroidWorld());
                          t2.get$_viewProjectionMatrix().multiplyVector3$1(t1._face_21.get$centroidScreen());
                          t1.faceVertexNormals_22 = t1.face_20.get$vertexNormals();
                          t1.nl_7 = $.get$length(t1.faceVertexNormals_22);
                          for (t1.n_6 = 0; $.ltB(t1.n_6, t1.nl_7); t1.n_6 = $.add(t1.n_6, 1)) {
                            t1.normal_18 = $.index(t1._face_21.get$vertexNormalsWorld(), t1.n_6);
                            t1.normal_18.copy$1($.index(t1.faceVertexNormals_22, t1.n_6));
                            if (t1.visible_1 !== true)
                              t3 = $.eqB(t1.side_30, 1) || $.eqB(t1.side_30, 2);
                            else
                              t3 = false;
                            if (t3)
                              t1.normal_18.negate$0();
                            t1.rotationMatrix_14.multiplyVector3$1(t1.normal_18);
                          }
                          t1.cl_9 = $.get$length(t1.faceVertexUvs_23);
                          t1.c_8 = 0;
                        case 1:
                          L1:
                            while (true)
                              switch (state0) {
                                case 0:
                                  if (!$.ltB(t1.c_8, t1.cl_9))
                                    break L1;
                                case 1:
                                  c$1: {
                                    switch (state0) {
                                      case 0:
                                        uvs = $.index($.index(t1.faceVertexUvs_23, t1.c_8), t1.f_4);
                                      case 1:
                                        state0 = 0;
                                        if (uvs == null)
                                          break c$1;
                                        t1.ul_11 = $.get$length(uvs);
                                        for (t1.u_10 = 0; $.ltB(t1.u_10, t1.ul_11); t1.u_10 = $.add(t1.u_10, 1))
                                          $.add$1($.index(t1._face_21.get$uvs(), t1.c_8), $.index(uvs, t1.u_10));
                                    }
                                  }
                                  t1.c_8 = $.add(t1.c_8, 1);
                              }
                          t3 = t1.material_29;
                          t1._face_21.set$material(t3);
                          t3 = t1.face_20.get$materialIndex();
                          t3 = !(t3 == null) ? $.index(t1.geometryMaterials_16, t3) : null;
                          t1._face_21.set$faceMaterial(t3);
                          t3 = t1._face_21.get$centroidScreen().get$z();
                          t1._face_21.set$z(t3);
                          $.add$1(t2.get$_renderData().get$elements(), t1._face_21);
                      }
                    }
                    t1.f_4 = $.add(t1.f_4, 1);
                }
        }
      else {
        t3 = t1.object_12;
        if (typeof t3 === 'object' && t3 !== null && !!t3.is$Line) {
          t2.get$_modelViewProjectionMatrix().multiply$2(t2.get$_viewProjectionMatrix(), t1.modelMatrix_13);
          t1.vertices_17 = t1.object_12.get$geometry().get$vertices();
          t1.v1_24 = t2.getNextVertexInPool$0();
          t1.v1_24.get$positionScreen().copy$1($.index(t1.vertices_17, 0));
          t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_24.get$positionScreen());
          step = $.eqB(t1.object_12.get$type(), 1) ? 2 : 1;
          t1.vl_3 = $.get$length(t1.vertices_17);
          for (t1.v_2 = 1; $.ltB(t1.v_2, t1.vl_3); t1.v_2 = $.add(t1.v_2, 1)) {
            t1.v1_24 = t2.getNextVertexInPool$0();
            t1.v1_24.get$positionScreen().copy$1($.index(t1.vertices_17, t1.v_2));
            t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_24.get$positionScreen());
            if ($.gtB($.mod($.add(t1.v_2, 1), step), 0))
              continue;
            t1.v2_25 = $.index(t2.get$_vertexPool(), $.sub(t2.get$_vertexCount(), 2));
            t2.get$_clippedVertex1PositionScreen().copy$1(t1.v1_24.get$positionScreen());
            t2.get$_clippedVertex2PositionScreen().copy$1(t1.v2_25.get$positionScreen());
            if (t2.clipLine$2(t2.get$_clippedVertex1PositionScreen(), t2.get$_clippedVertex2PositionScreen()) === true) {
              t3 = t2.get$_clippedVertex1PositionScreen();
              t4 = t3.get$w();
              if (typeof t4 !== 'number')
                throw $.iae(t4);
              t3.multiplyScalar$1(1 / t4);
              t3 = t2.get$_clippedVertex2PositionScreen();
              t5 = t3.get$w();
              if (typeof t5 !== 'number')
                throw $.iae(t5);
              t3.multiplyScalar$1(1 / t5);
              t2.set$_line(t2.getNextLineInPool$0());
              t2.get$_line().get$v1().get$positionScreen().copy$1(t2.get$_clippedVertex1PositionScreen());
              t2.get$_line().get$v2().get$positionScreen().copy$1(t2.get$_clippedVertex2PositionScreen());
              t3 = $.max(t2.get$_clippedVertex1PositionScreen().get$z(), t2.get$_clippedVertex2PositionScreen().get$z());
              t2.get$_line().set$z(t3);
              t3 = t1.object_12.get$material();
              t2.get$_line().set$material(t3);
              $.add$1(t2.get$_renderData().get$elements(), t2.get$_line());
            }
          }
        }
      }
  }
}
};

$$.Projector_projectScene_anon1 = {"": ["far_36", "near_35", "this_34", "box_0"],
 "super": "Closure",
 call$1: function(v) {
  var t1, t2, t3;
  t1 = this.this_34;
  t1.set$_vertex(t1.getNextVertexInPool$0());
  t1.get$_vertex().get$positionWorld().copy$1(v);
  this.box_0.modelMatrix_13.multiplyVector3$1(t1.get$_vertex().get$positionWorld());
  t2 = t1.get$_vertex();
  t2.get$positionScreen().copy$1(t2.get$positionWorld());
  t1.get$_viewProjectionMatrix().multiplyVector4$1(t1.get$_vertex().get$positionScreen());
  t3 = t1.get$_vertex().get$positionScreen();
  t3.set$x($.div(t3.get$x(), t1.get$_vertex().get$positionScreen().get$w()));
  t3 = t1.get$_vertex().get$positionScreen();
  t3.set$y($.div(t3.get$y(), t1.get$_vertex().get$positionScreen().get$w()));
  t2 = $.gtB(t1.get$_vertex().get$positionScreen().get$z(), this.near_35) && $.ltB(t1.get$_vertex().get$positionScreen().get$z(), this.far_36);
  t1.get$_vertex().set$visible(t2);
}
};

$$.Projector_projectScene_anon0 = {"": ["camera_38", "this_37", "box_0"],
 "super": "Closure",
 call$1: function(o) {
  var object, t1, t2, t3, t4, t5, t6;
  object = o.get$object();
  t1 = this.box_0;
  t1.object_12 = object;
  t1.modelMatrix_13 = t1.object_12.get$matrixWorld();
  t2 = t1.object_12;
  if (typeof t2 === 'object' && t2 !== null && !!t2.is$Particle) {
    t2 = this.this_37;
    t2.get$_vector4().setValues$4($.index(t1.modelMatrix_13.get$elements(), 12), $.index(t1.modelMatrix_13.get$elements(), 13), $.index(t1.modelMatrix_13.get$elements(), 14), 1);
    t2.get$_viewProjectionMatrix().multiplyVector4$1(t2.get$_vector4());
    t3 = t2.get$_vector4();
    t3.set$z($.div(t3.get$z(), t2.get$_vector4().get$w()));
    if ($.gtB(t2.get$_vector4().get$z(), 0) && $.ltB(t2.get$_vector4().get$z(), 1)) {
      t2.set$_particle(t2.getNextParticleInPool$0());
      t3 = $.div(t2.get$_vector4().get$x(), t2.get$_vector4().get$w());
      t2.get$_particle().set$x(t3);
      t3 = $.div(t2.get$_vector4().get$y(), t2.get$_vector4().get$w());
      t2.get$_particle().set$y(t3);
      t3 = t2.get$_vector4().get$z();
      t2.get$_particle().set$z(t3);
      t3 = t1.object_12.get$rotation().get$z();
      t2.get$_particle().set$rotation(t3);
      t3 = t1.object_12.get$scale().get$x();
      t4 = t2.get$_particle().get$x();
      t5 = t2.get$_vector4().get$x();
      t6 = this.camera_38;
      t3 = $.mul(t3, $.abs($.sub(t4, $.div($.add(t5, $.index(t6.get$projectionMatrix().get$elements(), 0)), $.add(t2.get$_vector4().get$w(), $.index(t6.get$projectionMatrix().get$elements(), 12))))));
      t2.get$_particle().get$scale().set$x(t3);
      t3 = $.mul(t1.object_12.get$scale().get$y(), $.abs($.sub(t2.get$_particle().get$y(), $.div($.add(t2.get$_vector4().get$y(), $.index(t6.get$projectionMatrix().get$elements(), 5)), $.add(t2.get$_vector4().get$w(), $.index(t6.get$projectionMatrix().get$elements(), 13))))));
      t2.get$_particle().get$scale().set$y(t3);
      t3 = $.propertyTypeCast(t1.object_12.get$material(), 'is$Material');
      t2.get$_particle().set$material(t3);
      $.add$1(t2.get$_renderData().get$elements(), t2.get$_particle());
    }
  }
}
};

$$.Object3D_updateMatrixWorld_anon = {"": ["box_0"],
 "super": "Closure",
 call$1: function(c) {
  return c.updateMatrixWorld$1(this.box_0.force_1);
}
};

$$.Ray_intersectObjects_anon = {"": ["this_1", "intersects_0"],
 "super": "Closure",
 call$1: function(o) {
  return $.addAll(this.intersects_0, this.this_1.intersectObject$1(o));
}
};

$$.Ray_intersectObjects_anon0 = {"": [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(a.get$distance(), b.get$distance());
}
};

$$.Ray_intersectObject_anon = {"": ["intersects_1", "this_0"],
 "super": "Closure",
 call$1: function(child) {
  $.addAll(this.intersects_1, this.this_0.intersectObject$1(child));
}
};

$$.BroadPhase_updatePairs_anon = {"": [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(a, b);
}
};

$$.startRootIsolate_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"": ["completer_1", "port_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  var t1, t2;
  this.port_0.close$0();
  t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  t2 = this.completer_1;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"": ["message_2", "this_1", "replyTo_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, workerMessage, t3;
  t1 = this.this_1;
  t2 = this.replyTo_0;
  t1._checkReplyTo$1(t2);
  workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_2, 'replyTo', t2]));
  t2 = $._globalState().get$isWorker() === true;
  t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"": ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"": ["pos_5", "result_4", "completer_3", "box_0", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, t2, remaining;
  t1 = this.values_2;
  $.indexSet(t1, this.pos_5, value);
  t2 = this.box_0;
  remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_4.get$isComplete() !== true)
    this.completer_3.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"": ["result_8", "completer_7", "future_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_8.get$isComplete() !== true)
    this.completer_7.completeException$2(exception, this.future_6.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitMap_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$.Storage_values_anon = {"": ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.values_0, v);
}
};

$$._LinkedHashMapImpl_values__ = {"": ["box_0", "list_2"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$._HashMapImpl_values__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$._PendingSendPortFinder_visitList_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"": ["replyTo_5", "this_4", "message_3"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, t3, isolate, shouldSerialize, msg;
  t1 = {};
  t2 = this.this_4;
  t3 = this.replyTo_5;
  t2._checkReplyTo$1(t3);
  isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_callback() == null)
    return;
  shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  msg = this.message_3;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(t1, shouldSerialize, t2), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"": ["box_0", "shouldSerialize_7", "this_6"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.this_6;
  if (!(t1.get$_receivePort().get$_callback() == null)) {
    if (this.shouldSerialize_7 === true) {
      t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$.Storage_keys_anon = {"": ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
}
};

$$._LinkedHashMapImpl_keys__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._HashMapImpl_keys__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._Copier_visitMap_anon = {"": ["box_0", "this_2"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1, t2;
  t1 = this.box_0.copy_10;
  t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon = {"": ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon0 = {"": ["callback_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_1.call$1(this.this_0);
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure1 = {'':
['self', 'target'],
'super': 'Closure',
call$3: function(p0, p1, p2) { return this.self[this.target](p0, p1, p2); }
};
$$.BoundClosure2 = {'':
['self', 'target'],
'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$$.BoundClosure3 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$$.BoundClosure4 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$._Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  if (typeof right !== 'number')
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 !== (j0 | 0))
        throw $.iae(j0);
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j !== (j | 0))
      throw $.iae(j);
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, pivots_are_equal, k, ak, comp, great0, less0, t3;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  index1 = left + sixth;
  index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el1;
    el1 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left !== (left | 0))
    throw $.iae(left);
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right !== (right | 0))
    throw $.iae(right);
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  t2 = a.length;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less !== (less | 0))
        throw $.iae(less);
      if (less < 0 || less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great !== (great | 0))
        throw $.iae(great);
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._Sort__doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32))
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$.Scene$ = function() {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.add(t1, 1);
  t1 = new $.Scene(null, null, null, null, null, null, t1, '', $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), 'XYZ', null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t1.Scene$0();
  return t1;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.print = function(object) {
  if (typeof object === 'string')
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$.Random_Random = function(seed) {
  return $.CTC3;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.coreSort = function(l, compare) {
  $._Sort__doSort(l, 0, $.sub($.get$length(l), 1), compare);
  return;
};

$.Vector2$ = function(x, y) {
  return new $.Vector2(x, y);
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.not = function(a) {
  if (typeof a === "number")
    return (~a) >>> 0;
  return a.operator$not$0();
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a | b) >>> 0;
  return a.operator$or$1(b);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC0));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.MessagePortEvents$ = function(_ptr) {
  return new $.MessagePortEvents(_ptr);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      return $.NullPointerException$(null, $.CTC0);
    else if ($.eqB(type, 'undefined_method'))
      return $.NoSuchMethodError$('', name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC0);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], $.makeLiteralMap([]), null);
      }
    return $._ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(arg2, arg1, closure));
  else
    throw $.$$throw($._ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.propertyTypeCastError = function(value, property) {
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), $.substring$2(property, 3, $.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.Vector4$ = function(x, y, z, w) {
  return new $.Vector4(x, y, z, w);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return 'Null';
  constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.MediaStreamTrackListEvents$ = function(_ptr) {
  return new $.MediaStreamTrackListEvents(_ptr);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split('|');
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf('Chrome') !== -1 || userAgent.indexOf('DumpRenderTree') !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf('Firefox') !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf('MSIE') !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf('Opera') !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf('AppleWebKit') !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global === true)
    $.add$1(sb, 'g');
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC6)[name$];
  if (!(dartMethod == null))
    methods['Object'] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, length$, patternLength, startIndex, position, endIndex;
  result = $._ListImpl_List(null);
  length$ = $.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !$.eqB($.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).get$hasNext();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, i;
  if (from === '')
    if (receiver === '')
      return to;
    else {
      result = $.StringBuffer_StringBuffer('');
      length$ = receiver.length;
      $.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC2, true), "\\$&"), false, false), true), to);
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  return new $.MediaStreamTrackEvents(_ptr);
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.removeAt$1 = function(receiver, index) {
  if ($.isJsArray(receiver)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(receiver)))
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, 'removeAt');
    return receiver.splice(index, 1)[0];
  }
  return receiver.removeAt$1(index);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.eqB($.get$length(receiver), 0))
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$.get$isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.get$isEmpty();
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.map = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.map$1(f);
  else
    return $.Collections_map(receiver, [], f);
};

$.reduce = function(receiver, initialValue, f) {
  if (!$.isJsArray(receiver))
    return receiver.reduce$2(initialValue, f);
  else
    return $.Collections_reduce(receiver, initialValue, f);
};

$.getRange = function(receiver, start, length$) {
  var t1, end;
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.addAll = function(receiver, collection) {
  var iterator;
  if (!$.isJsArray(receiver))
    return receiver.addAll$1(collection);
  iterator = $.iterator(collection);
  for (; iterator.get$hasNext() === true;)
    $.add$1(receiver, iterator.next$0());
};

$.get$last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.get$last();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.removeRange = function(receiver, start, length$) {
  var receiverLength, t1, t2;
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.RangeError$value(t1));
  t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.setRange$4 = function(receiver, start, length$, from, startFrom) {
  var t1;
  if (!$.isJsArray(receiver))
    return receiver.setRange$4(start, length$, from, startFrom);
  $.checkMutable(receiver, 'indexed set');
  if ($.eqB(length$, 0))
    return;
  $.checkNull(start);
  $.checkNull(length$);
  $.checkNull(from);
  $.checkNull(startFrom);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof startFrom === 'number' && Math.floor(startFrom) === startFrom))
    throw $.$$throw($.ArgumentError$(startFrom));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if ($.gtB(t1, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(t1));
  $.Arrays_copy(from, startFrom, receiver, start, length$);
};

$.setRange$3 = function(receiver, start, length$, from) {
  if ($.isJsArray(receiver))
    return $.setRange$4(receiver, start, length$, from, 0);
  return receiver.setRange$3(start, length$, from);
};

$.get$isNegative = function(receiver) {
  if (typeof receiver === 'number')
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  else
    return receiver.get$isNegative();
};

$.get$isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.get$isNaN();
};

$.toInt = function(receiver) {
  var truncated;
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.floor = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.floor$0();
  return Math.floor(receiver);
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.get$isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.contains$1 = function(receiver, other) {
  var i;
  if (typeof receiver !== 'string' && (typeof receiver !== 'object' || receiver === null || receiver.constructor !== Array && !receiver.is$JavaScriptIndexingBehavior()))
    return $.contains$1$bailout(1, receiver, other);
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; i < receiver.length; ++i)
      if ($.eqB(other, receiver[i]))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.endsWith = function(receiver, other) {
  var receiverLength, otherLength;
  $.checkString(other);
  receiverLength = receiver.length;
  otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.compareTo = function(a, b) {
  var aIsNegative, t1;
  if ($.checkNumbers(a, b))
    if ($.ltB(a, b))
      return -1;
    else if ($.gtB(a, b))
      return 1;
    else if ($.eqB(a, b)) {
      if ($.eqB(a, 0)) {
        aIsNegative = $.get$isNegative(a);
        if ($.eqB(aIsNegative, $.get$isNegative(b)))
          return 0;
        if (aIsNegative === true)
          return -1;
        return 1;
      }
      return 0;
    } else if ($.get$isNaN(a) === true) {
      if ($.get$isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  else if (typeof a === 'string') {
    if (!(typeof b === 'string'))
      throw $.$$throw($.ArgumentError$(b));
    if (a == b)
      t1 = 0;
    else
      t1 = a < b ? -1 : 1;
    return t1;
  } else
    return a.compareTo$1(b);
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  var length$;
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if (startIndex < 0)
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.RangeError$value(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.sort$1 = function(receiver, compare) {
  if (!$.isJsArray(receiver))
    return receiver.sort$1(compare);
  $.checkMutable(receiver, 'sort');
  $.coreSort(receiver, compare);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.get$hashCode = function(receiver) {
  var length$, i, hash, hash0, hash1;
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.get$hashCode();
  length$ = receiver.length;
  for (i = 0, hash = 0; i < length$; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.toLowerCase = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.toLowerCase$0();
  return receiver.toLowerCase();
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.main = function() {
  $.initGame();
};

$.initGame = function() {
  var i, graphic, wall, wall2, wall3;
  $.box2D = $.GEBox2D$();
  $.box2D.init$0();
  $.webGL = $.GEWebGL$('#container', 'three.js');
  $.webGL.init$0();
  for (i = 0; i < 10; ++i) {
    graphic = $.GEHitObject$('Hit object');
    graphic.setAsRectangle$3(25, 25, 1000);
    graphic.setPosition$3(0, 0 + i * 25, 1);
    graphic.attachPhysics$0();
    $.webGL.addToScene$3(graphic, true, false);
  }
  wall = $.GEObstacle$('Bottom wall');
  wall.setAsRectangle$3(80000, 10, 1000);
  wall.setPosition$3(0, -400, 0);
  wall.attachPhysics$0();
  $.webGL.addToScene$3(wall, false, false);
  wall2 = $.GEObstacle$('Left wall');
  wall2.setAsRectangle$3(10, 800, 1000);
  wall2.setPosition$3(-39990, 0, 0);
  wall2.attachPhysics$0();
  $.webGL.addToScene$3(wall2, false, false);
  wall3 = $.GEObstacle$('Right wall');
  wall3.setAsRectangle$3(10, 800, 1000);
  wall3.setPosition$3(39990, 0, 0);
  wall3.attachPhysics$0();
  $.webGL.addToScene$3(wall3, false, false);
  $.player = $.GEPlayer$('player');
  $.player.setAsSphere$1(20);
  $.player.setPosition$3(-380, -380, 1);
  $.player.attachPhysics$0();
  $.webGL.addToScene$3($.player, true, false);
  $.GEWebGL_followGraphic = $.player;
  $.window().get$on().get$click().add$2($.onWindowClick, true);
  $.window().get$on().get$keyDown().add$2($.onKeyDown, true);
  $.window().requestAnimationFrame$1($.update);
};

$.update = function(time) {
  var t1, t2, t3;
  if (typeof time !== 'number')
    return $.update$bailout(1, time);
  $.window().requestAnimationFrame$1($.update);
  $.box2D.onUpdate$0();
  $.webGL.onUpdate$0();
  for (t1 = $.iterator($.get$expireables()); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    t3 = t2.get$ttl();
    if (typeof t3 !== 'number')
      return $.update$bailout(2, time, t2, t3, t1);
    if (t3 < time)
      t2.expire$0();
  }
  t1 = $.lastFrameTime;
  if (typeof t1 !== 'number')
    return $.update$bailout(3, time, t1);
  $.frameRate = 1 / (time - t1);
  $.lastFrameTime = time;
};

$.onWindowClick = function(e) {
  e.stopPropagation$0();
  $.print('Click event: x:' + $.S(e.get$clientX()) + ' y:' + $.S(e.get$clientY()));
  $.webGL.detectHit$2(e.get$clientX(), e.get$clientY());
};

$.onKeyDown = function(e) {
  e.stopPropagation$0();
  $.print(e.get$keyCode());
  switch (e.get$keyCode()) {
    case 37:
      $.player.moveLeft$0();
      break;
    case 38:
      $.player.moveUp$0();
      break;
    case 39:
      $.player.moveRight$0();
      break;
    case 32:
      $.player.shoot$0();
      break;
  }
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.RenderInts$ = function() {
  var t1 = new $.RenderInts(null, null);
  t1.RenderInts$0();
  return t1;
};

$.WorkerContextEvents$ = function(_ptr) {
  return new $.WorkerContextEvents(_ptr);
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$._FilteredElementList$ = function(node) {
  return new $._FilteredElementList(node, node.get$nodes());
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.WorkerEvents$ = function(_ptr) {
  return new $.WorkerEvents(_ptr);
};

$.AbstractWorkerEvents$ = function(_ptr) {
  return new $.AbstractWorkerEvents(_ptr);
};

$.World$ = function(gravity, doSleep, argPool) {
  var t1 = new $.World(4, null, null, null, 0, 0, gravity, doSleep, null, null, null, argPool, 0, true, true, $._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.TimeStep$(), $.Vector$(0, 0), $.Vector$(0, 0), $.WorldQueryWrapper$(), $.TimeOfImpactInput$(), $.TimeOfImpactOutput$(), $.Sweep$(), $.TimeOfImpactSolver$(), $._ListImpl_List(32), $.Island$(), $._ListImpl_List(10));
  t1.World$3(gravity, doSleep, argPool);
  return t1;
};

$.DefaultWorldPool$ = function() {
  var t1 = new $.DefaultWorldPool(null, null, null);
  t1.DefaultWorldPool$0();
  return t1;
};

$.Collision$_construct = function(pool) {
  var t1 = $.DistanceInput$();
  t1 = new $.Collision(pool, $.SimplexCache$(), t1, $.DistanceOutput$(), $.EdgeResults$(), $.EdgeResults$(), $._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $._ListImpl_List(2), $._ListImpl_List(2));
  t1.Collision$_construct$1(pool);
  return t1;
};

$.Collision_clipSegmentToLine = function(vOut, vIn, norm, offset) {
  var t1, distance0, t2, distance1, numOut, numOut0, interp, vin;
  t1 = $.index(vIn, 0).get$v();
  distance0 = $.sub($.add($.mul(norm.x, t1.get$x()), $.mul(norm.y, t1.get$y())), offset);
  t2 = $.index(vIn, 1).get$v();
  distance1 = $.sub($.add($.mul(norm.x, t2.get$x()), $.mul(norm.y, t2.get$y())), offset);
  if ($.leB(distance0, 0)) {
    if (0 >= vOut.length)
      throw $.ioore(0);
    vOut[0].setFrom$1($.index(vIn, 0));
    numOut = 1;
  } else
    numOut = 0;
  if ($.leB(distance1, 0)) {
    numOut0 = numOut + 1;
    if (numOut >= vOut.length)
      throw $.ioore(numOut);
    vOut[numOut].setFrom$1($.index(vIn, 1));
    numOut = numOut0;
  }
  if ($.ltB($.mul(distance0, distance1), 0)) {
    interp = $.div(distance0, $.sub(distance0, distance1));
    if (numOut >= vOut.length)
      throw $.ioore(numOut);
    vOut[numOut].get$v().setFrom$1($.index(vIn, 1).get$v()).subLocal$1($.index(vIn, 0).get$v()).mulLocal$1(interp).addLocal$1($.index(vIn, 0).get$v());
    vin = $.gtB(distance0, 0) ? $.index(vIn, 0) : $.index(vIn, 1);
    vOut[numOut].get$id().setFrom$1(vin.get$id());
    ++numOut;
  }
  return numOut;
};

$.TimeOfImpact$_construct = function(argPool) {
  var t1 = new $.TimeOfImpact($.SimplexCache$(), $.DistanceInput$(), $.Transform$(), $.Transform$(), $.DistanceOutput$(), $.SeparationFunction$(), $._ListImpl_List(2), $.Sweep$(), $.Sweep$(), argPool);
  t1.TimeOfImpact$_construct$1(argPool);
  return t1;
};

$.Distance$_construct = function() {
  return new $.Distance(0, 0, 20, $.Simplex$(), $._ListImpl_List(3), $._ListImpl_List(3), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$.CircleContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.CircleContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.UV$ = function(u, v) {
  return new $.UV(u, v);
};

$.PolygonAndCircleContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.PolygonAndCircleContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.PolygonContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.PolygonContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.ContactManager$ = function(argPool) {
  var t1 = $.ContactFilter$();
  return new $.ContactManager($.BroadPhase$(), null, 0, t1, null, argPool);
};

$.Face3$ = function(a, b, c, normalOrVertexNormals, colorOrVertexColors, materialIndex) {
  var t1 = new $.Face3(a, b, c, null, null, null, null, null, materialIndex, null);
  t1.Face3$6(a, b, c, normalOrVertexNormals, colorOrVertexColors, materialIndex);
  return t1;
};

$.Face4$ = function(a, b, c, d, normalOrVertexNormals, colorOrVertexColors, materialIndex) {
  var t1 = new $.Face4(a, b, c, d, null, null, null, null, null, materialIndex, null);
  t1.Face4$7(a, b, c, d, normalOrVertexNormals, colorOrVertexColors, materialIndex);
  return t1;
};

$.ContactRegister$ = function() {
  return new $.ContactRegister(null, false);
};

$.TimeStep$ = function() {
  return new $.TimeStep(0, 0, 0, 0, 0, true);
};

$.WorldQueryWrapper$ = function() {
  return new $.WorldQueryWrapper(null, null);
};

$.TimeOfImpactInput$ = function() {
  return new $.TimeOfImpactInput($.DistanceProxy$(), $.DistanceProxy$(), $.Sweep$(), $.Sweep$(), 0);
};

$.TimeOfImpactOutput$ = function() {
  return new $.TimeOfImpactOutput(0, 0);
};

$.Sweep$ = function() {
  return new $.Sweep($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0);
};

$.TimeOfImpactSolver$ = function() {
  var t1 = new $.TimeOfImpactSolver($._ListImpl_List(4), 0, null, $.TimeOfImpactSolverManifold$(), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t1.TimeOfImpactSolver$0();
  return t1;
};

$.Island$ = function() {
  return new $.Island(null, null, null, null, null, null, null, null, null, null, null, null, null, $.ContactSolver$(), $.Vector$(0, 0), $.ContactImpulse$());
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._convertNativeToDart_SerializedScriptValue = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, true);
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1;
  values = [];
  copies = [];
  t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies), mustCopy, new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies), t1).call$1(object);
};

$.PolygonShape$ = function() {
  var t1, t2;
  t1 = $._ListImpl_List(8);
  t2 = $._ListImpl_List(8);
  t2 = new $.PolygonShape($.Vector$(0, 0), t1, t2, 0, 1, 0.01);
  t2.PolygonShape$0();
  return t2;
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$.PolygonShape$copy = function(other) {
  var t1, t2, t3, t4;
  t1 = other.radius;
  t2 = other.vertexCount;
  t3 = $._ListImpl_List(8);
  t4 = $._ListImpl_List(8);
  t1 = new $.PolygonShape($.Vector$copy(other.centroid), t3, t4, t2, 1, t1);
  t1.PolygonShape$copy$1(other);
  return t1;
};

$._convertDartToNative_ImageData = function(imageData) {
  if (typeof imageData === 'object' && imageData !== null && !!imageData.is$_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t2, t1, t3).call$1(value);
  t4.call$0();
  return copy;
};

$.ContactFilter$ = function() {
  return new $.ContactFilter();
};

$._convertNativeToDart_ImageData = function(nativeImageData) {
  if (typeof nativeImageData === 'object' && nativeImageData !== null && nativeImageData.is$ImageData())
    return nativeImageData;
  return $._TypedImageData$(nativeImageData.data, nativeImageData.height, nativeImageData.width);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$._globalState = function() {
  return $globalState;
};

$.Color3$ = function() {
  return new $.Color3(0, 0, 0);
};

$.BatteryManagerEvents$ = function(_ptr) {
  return new $.BatteryManagerEvents(_ptr);
};

$.CollisionListener$ = function() {
  return new $.CollisionListener();
};

$.Color3$fromRGBF = function(r, g, b) {
  return new $.Color3($.toInt($.floor(r * 255)), $.toInt($.floor(g * 255)), $.toInt($.floor(b * 255)));
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $globals = rootContext.isolateStatics;
  $static_init();
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$.Color3$fromRGB = function(r, g, b) {
  return new $.Color3(r, g, b);
};

$.Manifold$ = function() {
  var t1 = new $.Manifold($._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), null, 0);
  t1.Manifold$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$.Settings_mixRestitution = function(restitution1, restitution2) {
  return $.gtB(restitution1, restitution2) ? restitution1 : restitution2;
};

$.ContactImpulse$ = function() {
  return new $.ContactImpulse($._ListImpl_List(2), $._ListImpl_List(2));
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$.PlaneGeometry$ = function(width, height, segmentsWidth, segmentsHeight) {
  var t1 = $.GeometryCount;
  $.GeometryCount = $.add(t1, 1);
  t1 = new $.PlaneGeometry(t1, '', [], [], [], [], [[]], [[]], [], [], [], [], [], null, null, null, false, false, null, null, null);
  t1.PlaneGeometry$4(width, height, segmentsWidth, segmentsHeight);
  return t1;
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.get$isNegative(b) === true || $.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$.OrthographicCamera$ = function(left, right, top$, bottom, near, far) {
  var t1, t2, t3, t4;
  t1 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t2 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t3 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t4 = $.Object3DCount;
  $.Object3DCount = $.add(t4, 1);
  t4 = new $.OrthographicCamera(left, right, top$, bottom, t1, t2, t3, near, far, t4, '', $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), 'XYZ', null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t4.OrthographicCamera$6(left, right, top$, bottom, near, far);
  return t4;
};

$.Projector$ = function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
  t1 = [];
  t2 = [];
  t3 = [];
  t4 = [];
  t5 = [];
  t6 = [];
  t7 = $.ProjectorRenderData$();
  t8 = $.Vector3$(0, 0, 0);
  t9 = $.Vector4$(0, 0, 0, 1);
  t10 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t11 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t12 = $.Frustum$();
  return new $.Projector(t1, t2, t4, t3, t5, t6, null, null, null, null, null, null, null, null, null, null, t8, t9, $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), t7, t10, t11, t12);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.ContactEdge$ = function() {
  return new $.ContactEdge(null, null, null, null);
};

$.IDBVersionChangeRequestEvents$ = function(_ptr) {
  return new $.IDBVersionChangeRequestEvents(_ptr);
};

$.IDBRequestEvents$ = function(_ptr) {
  return new $.IDBRequestEvents(_ptr);
};

$.CanvasRenderer$ = function(parameters) {
  var t1 = new $.CanvasRenderer(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 6.283185307179586, null, null, null, null, null, null, null, null, null);
  t1.CanvasRenderer$1(parameters);
  return t1;
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.IDBTransactionEvents$ = function(_ptr) {
  return new $.IDBTransactionEvents(_ptr);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.GEWebGL_remove = function(graphic) {
  $.GEWebGL_removeClickable(graphic);
  $.GEWebGL_removeUpdateable(graphic);
  $.GEWebGL_webGLProxy.removeFromScene$1(graphic);
};

$.GEWebGL_addUpdateable = function(object) {
  if ($.eqB($.indexOf$1($.get$GEWebGL_updateables(), object), -1))
    $.add$1($.get$GEWebGL_updateables(), object);
};

$.GEWebGL_removeUpdateable = function(object) {
  var index = $.indexOf$1($.get$GEWebGL_updateables(), object);
  if (!$.eqB(index, -1))
    $.removeAt$1($.get$GEWebGL_updateables(), index);
};

$.GEWebGL_removeClickable = function(graphic) {
  var index = $.indexOf$1($.get$GEWebGL_clickables(), graphic.mesh);
  if (!$.eqB(index, -1))
    $.removeAt$1($.get$GEWebGL_clickables(), index);
};

$.GEWebGL$ = function(containerName, library) {
  var t1 = new $.GEWebGL(null);
  t1.GEWebGL$2(containerName, library);
  return t1;
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.GEWebGLProxyThreeDart$ = function(canvasWidth, canvasHeight) {
  return new $.GEWebGLProxyThreeDart('Three.js', null, null, null, null, null, canvasWidth, canvasHeight);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.IDBOpenDBRequestEvents$ = function(_ptr) {
  return new $.IDBOpenDBRequestEvents(_ptr);
};

$.BroadPhase$ = function() {
  var t1 = new $.BroadPhase($.DynamicTree$(), 0, null, null, 16, 0, null);
  t1.BroadPhase$0();
  return t1;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.SVGElementInstanceEvents$ = function(_ptr) {
  return new $.SVGElementInstanceEvents(_ptr);
};

$.Mesh$ = function(geometry, material) {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.add(t1, 1);
  t1 = new $.Mesh(geometry, material, null, null, null, null, t1, '', $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), 'XYZ', null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t1.Mesh$2(geometry, material);
  return t1;
};

$.Ray$ = function(origin, direction, near, far) {
  var t1 = new $.Ray(origin, direction, near, far, $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), 0.0001);
  t1.Ray$4(origin, direction, near, far);
  return t1;
};

$.Intersect$ = function(distance, face, object, point) {
  return new $.Intersect(distance, point, face, object);
};

$.RenderableObject$ = function() {
  return new $.RenderableObject(null, null);
};

$.RenderableVertex$ = function() {
  return new $.RenderableVertex($.Vector3$(0, 0, 0), $.Vector4$(0, 0, 0, 1), true);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.RenderableFace4$ = function() {
  return new $.RenderableFace4($.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), [$.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0)], [[]], null, null, null);
};

$.Vector3$ = function(x, y, z) {
  return new $.Vector3(x, y, z);
};

$.RenderableFace3$ = function() {
  return new $.RenderableFace3($.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), [$.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0)], [[]], null, null, null);
};

$.DynamicTreeNode$_construct = function() {
  return new $.DynamicTreeNode($.AxisAlignedBox$(null, null), null, null, null, null, null, null);
};

$.RenderableLine$ = function() {
  return new $.RenderableLine(null, $.RenderableVertex$(), $.RenderableVertex$(), null);
};

$.RenderableParticle$ = function() {
  return new $.RenderableParticle(null, null, null, null, $.Vector2$(0, 0), null);
};

$.ProjectorRenderData$ = function() {
  return new $.ProjectorRenderData([], [], [], []);
};

$.Frustum___v1 = function() {
  if ($.Frustum____v1 == null)
    $.Frustum____v1 = $.Vector3$(0, 0, 0);
  return $.Frustum____v1;
};

$.Frustum$ = function() {
  return new $.Frustum([$.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1)]);
};

$.GEHitObject$ = function(name$) {
  return new $.GEHitObject(null, null, null, null, null, null, $.Color$(null), null, null, null, null, null, null, name$, null);
};

$.Rectangle$ = function() {
  return new $.Rectangle(0, 0, 0, 0, 0, 0, true);
};

$.MeshBasicMaterial$ = function(alphaTest, blendDst, blendEquation, blendSrc, blending, color, combine, depthTest, depthWrite, envMap, fog, lightMap, map, morphTargets, name$, opacity, overdraw, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, reflectivity, refractionRatio, shading, side, skinning, specularMap, transparent, vertexColors, visible, wireframe, wireframeLinecap, wireframeLinejoin, wireframeLinewidth) {
  var t1, t2;
  t1 = $.Color$(color);
  t2 = $.MaterialCount;
  $.MaterialCount = $.add(t2, 1);
  return new $.MeshBasicMaterial(t1, map, lightMap, specularMap, envMap, combine, reflectivity, refractionRatio, shading, wireframe, wireframeLinewidth, wireframeLinecap, wireframeLinejoin, skinning, morphTargets, vertexColors, fog, name$, t2, side, opacity, blending, blendSrc, blendDst, blendEquation, alphaTest, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, transparent, depthTest, depthWrite, overdraw, visible, true, null);
};

$.MathBox_distanceSquared = function(v1, v2) {
  var dx, dy;
  dx = $.sub(v1.get$x(), v2.get$x());
  dy = $.sub(v1.get$y(), v2.get$y());
  return $.add($.mul(dx, dx), $.mul(dy, dy));
};

$.CanvasRenderData$ = function() {
  var t1 = new $.CanvasRenderData(null);
  t1.CanvasRenderData$0();
  return t1;
};

$.DistanceProxy$ = function() {
  var t1 = new $.DistanceProxy($._ListImpl_List(8), 0, 0);
  t1.DistanceProxy$0();
  return t1;
};

$.IDBDatabaseEvents$ = function(_ptr) {
  return new $.IDBDatabaseEvents(_ptr);
};

$.TimeOfImpactConstraint$ = function() {
  var t1 = new $.TimeOfImpactConstraint($._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0, null, null);
  t1.TimeOfImpactConstraint$0();
  return t1;
};

$.TimeOfImpactSolverManifold$ = function() {
  return new $.TimeOfImpactSolverManifold($.Vector$(0, 0), $.Vector$(0, 0), 0, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$.Position$ = function() {
  var t1 = new $.Position(null, null);
  t1.Position$0();
  return t1;
};

$.Color$ = function(hex) {
  var t1 = new $.Color(1, 1, 1);
  t1.Color$1(hex);
  return t1;
};

$.Velocity$ = function() {
  var t1 = new $.Velocity(null, null);
  t1.Velocity$0();
  return t1;
};

$.GEPhysicObject$ = function() {
  return new $.GEPhysicObject(null, null, null, null);
};

$.ContactSolver$ = function() {
  var t1 = new $.ContactSolver($._ListImpl_List(256), null, $.WorldManifold$(), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.PositionSolverManifold$(), $.Vector$(0, 0), $.Vector$(0, 0));
  t1.ContactSolver$0();
  return t1;
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.GEObstacle$ = function(name$) {
  return new $.GEObstacle(null, null, null, null, null, null, $.Color$(null), null, null, null, null, null, null, name$, null);
};

$.GEPlayer$ = function(name$) {
  return new $.GEPlayer(null, null, null, null, null, null, null, $.Color$(null), null, null, null, null, null, null, name$, null);
};

$.ContactConstraint$ = function() {
  var t1 = new $.ContactConstraint($._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Matrix22$(null, null), $.Matrix22$(null, null), null, null, null, null, null, null, 0, null);
  t1.ContactConstraint$0();
  return t1;
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  return new $.SpeechRecognitionEvents(_ptr);
};

$.GEBox2D$ = function() {
  return new $.GEBox2D(null, 10, 10, false);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError('value ' + $.S(value));
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.WorldManifold$ = function() {
  var t1, t2, t3;
  t1 = $.Vector$(0, 0);
  t2 = $.Vector$(0, 0);
  t3 = $.Vector$(0, 0);
  t3 = new $.WorldManifold(t1, $._ListImpl_List(2), t2, t3);
  t3.WorldManifold$0();
  return t3;
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if ('\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n' === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.ManifoldPoint$ = function() {
  return new $.ManifoldPoint($.Vector$(0, 0), 0, 0, $.ContactID$());
};

$.ContactID$ = function() {
  return new $.ContactID($.Features$());
};

$.Comparable_compare = function(a, b) {
  return $.compareTo(a, b);
};

$._StringImpl__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $._StringImpl__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.Features$ = function() {
  return new $.Features(0, 0, 0, 0);
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$._ListImpl_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(t1, visiting, result));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$._ListImpl_List$from = function(other) {
  var result, t1;
  result = $._ListImpl_List(null);
  for (t1 = $.iterator(other); t1.get$hasNext() === true;)
    result.push(t1.next$0());
  return result;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_map = function(source, destination, f) {
  var t1;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var isList, t1, first, t2;
  $.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (t1 = $.iterator(c), first = true; t1.get$hasNext() === true; first = false) {
    t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$._TypedImageData$ = function(data, height, width) {
  return new $._TypedImageData(data, height, width);
};

$.Collections_reduce = function(iterable, initialValue, combine) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    initialValue = combine.call$2(initialValue, t1.next$0());
  return initialValue;
};

$.DynamicTree$ = function() {
  var t1, t2, t3;
  t1 = $._ListImpl_List(4);
  t2 = $.Vector$(0, 0);
  t3 = $.AxisAlignedBox$(null, null);
  t3 = new $.DynamicTree(null, 0, null, 0, 0, $.Queue_Queue(), t1, 0, t2, t3, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t3.DynamicTree$0();
  return t3;
};

$.Pair$ = function() {
  return new $.Pair(null, null);
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  return new $.SharedWorkerContextEvents(_ptr);
};

$._Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$._Collections_map = function(source, destination, f) {
  var t1;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$._Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Expect_equals = function(expected, actual, reason) {
  var msg;
  if ($.eqB(expected, actual))
    return;
  msg = reason == null ? '' : ', \'' + $.S(reason) + '\'';
  $.Expect__fail('Expect.equals(expected: <' + $.S(expected) + '>, actual: <' + $.S(actual) + '>' + msg + ') fails.');
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.Expect__fail = function(message) {
  throw $.$$throw($.ExpectException$(message));
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.ExpectException$ = function(message) {
  return new $.ExpectException(message);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  $.regExpAttachGlobalNative(re);
  return re;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.GEBullet$ = function(name$, direction) {
  var t1 = new $.GEBullet(1000, direction, null, null, null, null, null, null, null, $.Color$(null), null, null, null, null, null, null, name$, null);
  t1.GEBullet$2(name$, direction);
  return t1;
};

$.ScriptProcessorNodeEvents$ = function(_ptr) {
  return new $.ScriptProcessorNodeEvents(_ptr);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.PositionSolverManifold$ = function() {
  return new $.PositionSolverManifold($.Vector$(0, 0), $.Vector$(0, 0), 0, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$.FileWriterEvents$ = function(_ptr) {
  return new $.FileWriterEvents(_ptr);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.Body$ = function(bd, world) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
  t1 = $.Transform$();
  t2 = $.Sweep$();
  t3 = $.Vector$copy(bd.get$linearVelocity());
  t4 = bd.get$linearDamping();
  t5 = bd.get$angularDamping();
  t6 = $.Vector$(0, 0);
  t7 = bd.get$userData();
  t8 = $.FixtureDef$();
  t9 = $.MassData$();
  t10 = $.Transform$();
  t11 = $.Vector$(0, 0);
  t12 = $.Vector$(0, 0);
  t12 = new $.Body(world, 0, null, 0, t7, t3, 0, null, null, null, null, null, 0, null, t6, 0, 0, 0, t4, t5, bd.get$type(), null, t1, t2, t8, t9, t10, t11, t12);
  t12.Body$2(bd, world);
  return t12;
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$.ContactConstraintPoint$ = function() {
  return new $.ContactConstraintPoint($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0, 0, 0);
};

$.FileReaderEvents$ = function(_ptr) {
  return new $.FileReaderEvents(_ptr);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.BodyDef$ = function() {
  return new $.BodyDef(0, 0, null, $.Vector$(0, 0), $.Vector$(0, 0), 0, false, null, false, true, 0, 0, true, true);
};

$.FixtureDef$ = function() {
  var t1 = new $.FixtureDef(null, null, 0.2, 0, 0, false, $.Filter$());
  t1.FixtureDef$0();
  return t1;
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$.Float32Array_Float32Array = function(length$) {
  return new Float32Array(length$);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.Vector$copy = function(other) {
  return new $.Vector(other.get$x(), other.get$y());
};

$.RTCPeerConnectionEvents$ = function(_ptr) {
  return new $.RTCPeerConnectionEvents(_ptr);
};

$.Vector_crossNumAndVectorToOut = function(s, a, out) {
  var tempY = $.mul(s, a.x);
  out.x = $.mul($.neg(s), a.y);
  out.y = tempY;
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$.Vector_crossVectorAndNumToOut = function(a, s, out) {
  var t1, t2, tempy;
  t1 = -s;
  t2 = a.get$x();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  tempy = t1 * t2;
  t2 = a.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  out.x = s * t2;
  out.y = tempy;
};

$.CircleShape$ = function() {
  return new $.CircleShape($.Vector$(0, 0), 0, 0);
};

$.CircleShape$copy = function(other) {
  var t1, t2;
  t1 = other.type;
  t2 = other.radius;
  return new $.CircleShape($.Vector$copy(other.position), t1, t2);
};

$.EventSourceEvents$ = function(_ptr) {
  return new $.EventSourceEvents(_ptr);
};

$.Transform$ = function() {
  return new $.Transform($.Vector$(0, 0), $.Matrix22$(null, null));
};

$.Transform_mulToOut = function(transform, vector, out) {
  var tempY = $.add($.add(transform.get$position().get$y(), $.mul(transform.get$rotation().get$col1().get$y(), vector.get$x())), $.mul(transform.get$rotation().get$col2().get$y(), vector.get$y()));
  out.set$x($.add($.add(transform.get$position().get$x(), $.mul(transform.get$rotation().get$col1().get$x(), vector.get$x())), $.mul(transform.get$rotation().get$col2().get$x(), vector.get$y())));
  out.set$y(tempY);
};

$.Transform_mulTransToOut = function(T, v, out) {
  var v1x, v1y, t1, b, b1, tempy;
  v1x = $.sub(v.get$x(), T.get$position().get$x());
  v1y = $.sub(v.get$y(), T.get$position().get$y());
  t1 = T.get$rotation();
  b = t1.get$col1();
  b1 = t1.get$col2();
  tempy = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
  out.set$x($.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y())));
  out.set$y(tempy);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$.AxisAlignedBox$ = function(lowerBound, upperBound) {
  var t1 = new $.AxisAlignedBox(lowerBound, upperBound);
  t1.AxisAlignedBox$2(lowerBound, upperBound);
  return t1;
};

$.AxisAlignedBox_testOverlap = function(a, b) {
  return !($.gtB(b.get$lowerBound().get$x(), a.get$upperBound().get$x()) || $.gtB(b.get$lowerBound().get$y(), a.get$upperBound().get$y()) || $.gtB(a.get$lowerBound().get$x(), b.get$upperBound().get$x()) || $.gtB(a.get$lowerBound().get$y(), b.get$upperBound().get$y()));
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.MassData$ = function() {
  return new $.MassData(0, $.Vector$(0, 0), 0);
};

$.Filter$ = function() {
  return new $.Filter(0, 0, 0);
};

$.Futures_wait = function(futures) {
  var t1, completer, result, values, i, future;
  t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = futures.length;
  values = $._ListImpl_List(futures.length);
  for (i = 0; i < futures.length; ++i) {
    future = futures[i];
    future.then$1(new $.Futures_wait_anon(i, result, completer, t1, values));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
};

$.RTCDataChannelEvents$ = function(_ptr) {
  return new $.RTCDataChannelEvents(_ptr);
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$.Fixture$ = function() {
  return new $.Fixture($.AxisAlignedBox$(null, null), null, null, null, null, null, null, null, $.Filter$(), null, null, $.AxisAlignedBox$(null, null), $.AxisAlignedBox$(null, null));
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$._FutureImpl__FutureImpl$immediate = function(value) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.Simplex$ = function() {
  var t1, t2, t3, t4, t5, t6;
  t1 = $.SimplexVertex$();
  t2 = $.SimplexVertex$();
  t3 = $.SimplexVertex$();
  t4 = $._ListImpl_List(3);
  t5 = $.Vector$(0, 0);
  t6 = $.Vector$(0, 0);
  t6 = new $.Simplex(t1, t2, t3, t4, 0, t5, $.Vector$(0, 0), t6, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t6.Simplex$0();
  return t6;
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, [], [], []);
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  return new $.DedicatedWorkerContextEvents(_ptr);
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.DistanceOutput$ = function() {
  return new $.DistanceOutput($.Vector$(0, 0), $.Vector$(0, 0), null, null);
};

$.SimplexCache$ = function() {
  var t1 = new $.SimplexCache(0, 0, $._ListImpl_List(3), $._ListImpl_List(3));
  t1.SimplexCache$0();
  return t1;
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.DistanceInput$ = function() {
  return new $.DistanceInput($.DistanceProxy$(), $.DistanceProxy$(), $.Transform$(), $.Transform$(), false);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.EdgeResults$ = function() {
  return new $.EdgeResults(0, 0);
};

$.ClipVertex$ = function() {
  return new $.ClipVertex($.Vector$(0, 0), $.ContactID$());
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.PeerConnection00Events$ = function(_ptr) {
  return new $.PeerConnection00Events(_ptr);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.SeparationFunction$ = function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18;
  t1 = $.DistanceProxy$();
  t2 = $.DistanceProxy$();
  t3 = $.Vector$(0, 0);
  t4 = $.Vector$(0, 0);
  t5 = $.Sweep$();
  t6 = $.Sweep$();
  t7 = $.Vector$(0, 0);
  t8 = $.Vector$(0, 0);
  t9 = $.Vector$(0, 0);
  t10 = $.Vector$(0, 0);
  t11 = $.Vector$(0, 0);
  t12 = $.Vector$(0, 0);
  t13 = $.Vector$(0, 0);
  t14 = $.Vector$(0, 0);
  t15 = $.Vector$(0, 0);
  t16 = $.Vector$(0, 0);
  t17 = $.Transform$();
  t18 = $.Transform$();
  return new $.SeparationFunction(t1, t2, 0, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, $.Vector$(0, 0), $.Vector$(0, 0), t16, t17, t18);
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.SimplexVertex$ = function() {
  return new $.SimplexVertex($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl__FutureImpl$immediate(value);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.SphereGeometry$ = function(radius, segmentsWidth, segmentsHeight, phiStart, phiLength, thetaStart, thetaLength) {
  var t1 = $.GeometryCount;
  $.GeometryCount = $.add(t1, 1);
  t1 = new $.SphereGeometry(radius, t1, '', [], [], [], [], [[]], [[]], [], [], [], [], [], null, null, null, false, false, null, null, null);
  t1.SphereGeometry$7(radius, segmentsWidth, segmentsHeight, phiStart, phiLength, thetaStart, thetaLength);
  return t1;
};

$.DOMApplicationCacheEvents$ = function(_ptr) {
  return new $.DOMApplicationCacheEvents(_ptr);
};

$.BoundingSphere$ = function(radius) {
  return new $.BoundingSphere(radius);
};

$.Matrix4$ = function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
  var t1 = new $.Matrix4($.Float32Array_Float32Array(16));
  t1.Matrix4$16(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
  return t1;
};

$.NotificationEvents$ = function(_ptr) {
  return new $.NotificationEvents(_ptr);
};

$.Matrix22_mulTransMatrixAndVectorToOut = function(matrix, vector, out) {
  var outx = $.add($.mul(vector.get$x(), matrix.get$col1().get$x()), $.mul(vector.get$y(), matrix.get$col1().get$y()));
  out.y = $.add($.mul(vector.get$x(), matrix.get$col2().get$x()), $.mul(vector.get$y(), matrix.get$col2().get$y()));
  out.x = outx;
};

$.Matrix22$ = function(c1, c2) {
  var t1 = new $.Matrix22(null, null);
  t1.Matrix22$2(c1, c2);
  return t1;
};

$.Matrix4___v1 = function() {
  if ($.Matrix4____v1 == null)
    $.Matrix4____v1 = $.Vector3$(0, 0, 0);
  return $.Matrix4____v1;
};

$.Matrix22_mulMatrixAndVectorToOut = function(matrix, vector, out) {
  var tempy = $.add($.mul(matrix.get$col1().get$y(), vector.get$x()), $.mul(matrix.get$col2().get$y(), vector.get$y()));
  out.set$x($.add($.mul(matrix.get$col1().get$x(), vector.get$x()), $.mul(matrix.get$col2().get$x(), vector.get$y())));
  out.set$y(tempy);
};

$.Quaternion$ = function(x, y, z, w) {
  return new $.Quaternion(x, y, z, w);
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, j0;
  for (i = left + 1; $.leB(i, right); ++i) {
    el = $.index(a, i);
    j = i;
    while (true) {
      if (!(j > left && $.gtB(compare.call$2($.index(a, j - 1), el), 0)))
        break;
      j0 = j - 1;
      $.indexSet(a, j, $.index(a, j0));
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$._Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, el1, el2, el3, el4, el5, t0, less, great, pivots_are_equal, k, ak, comp, less0, great0, t1;
  sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  index1 = left + sixth;
  index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  el1 = $.index(a, index1);
  el2 = $.index(a, index2);
  el3 = $.index(a, index3);
  el4 = $.index(a, index4);
  el5 = $.index(a, index5);
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el1;
    el1 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.indexSet(a, index1, el1);
  $.indexSet(a, index3, el3);
  $.indexSet(a, index5, el5);
  $.indexSet(a, index2, $.index(a, left));
  $.indexSet(a, index4, $.index(a, right));
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          comp = compare.call$2($.index(a, great), el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else if ($.ltB(comp, 0)) {
            $.indexSet(a, k, $.index(a, less));
            less0 = less + 1;
            $.indexSet(a, less, $.index(a, great));
            great0 = great - 1;
            $.indexSet(a, great, ak);
            great = great0;
            less = less0;
            break;
          } else {
            $.indexSet(a, k, $.index(a, great));
            great0 = great - 1;
            $.indexSet(a, great, ak);
            great = great0;
            break;
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;)
          if ($.gtB(compare.call$2($.index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
              $.indexSet(a, k, $.index(a, less));
              less0 = less + 1;
              $.indexSet(a, less, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              $.indexSet(a, k, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
  t1 = less - 1;
  $.indexSet(a, left, $.index(a, t1));
  $.indexSet(a, t1, el2);
  $.indexSet(a, right, $.index(a, great + 1));
  $.indexSet(a, great + 1, el4);
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && $.gtB(great, index5)) {
    for (; $.eqB(compare.call$2($.index(a, less), el2), 0);)
      ++less;
    for (; $.eqB(compare.call$2($.index(a, great), el4), 0);)
      --great;
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;)
          if ($.eqB(compare.call$2($.index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
              $.indexSet(a, k, $.index(a, less));
              less0 = less + 1;
              $.indexSet(a, less, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              $.indexSet(a, k, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._StringImpl__toJsStringArray$bailout = function(state0, strings) {
  var length$, i, string, array;
  $.checkNull(strings);
  length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.contains$1$bailout = function(state0, receiver, other) {
  var i;
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; $.ltB(i, $.get$length(receiver)); ++i)
      if ($.eqB(other, $.index(receiver, i)))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  var completer, result, values, i, future;
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  values = $._ListImpl_List($.get$length(futures));
  for (i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(i, result, completer, t1, values));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.update$bailout = function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      time = env0;
      break;
    case 2:
      t1 = env3;
      t3 = env2;
      t2 = env1;
      time = env0;
      break;
    case 3:
      t1 = env1;
      time = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.window().requestAnimationFrame$1($.update);
      $.box2D.onUpdate$0();
      $.webGL.onUpdate$0();
      t1 = $.iterator($.get$expireables());
    case 2:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(t1.get$hasNext() === true))
                break L0;
              t2 = t1.next$0();
              t3 = t2.get$ttl();
            case 2:
              state0 = 0;
              if ($.ltB(t3, time))
                t2.expire$0();
          }
      t1 = $.lastFrameTime;
    case 3:
      var time, t1, t2, t3;
      state0 = 0;
      t1 = $.sub(time, t1);
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      $.frameRate = 1 / t1;
      $.lastFrameTime = time;
  }
};

$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.update.call$1 = $.update;
$.update.$name = "update";
$.onWindowClick.call$1 = $.onWindowClick;
$.onWindowClick.$name = "onWindowClick";
$.onKeyDown.call$1 = $.onKeyDown;
$.onKeyDown.$name = "onKeyDown";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC0 = Isolate.makeConstantList([]);
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC0);
$.CTC5 = new Isolate.$isolateProperties._ExceptionImplementation('Incorrect number or type of arguments');
$.CTC4 = new Isolate.$isolateProperties.JSSyntaxRegExp('^#[_a-zA-Z]\\w*$', false, false);
$.CTC6 = new Isolate.$isolateProperties.Object();
$.CTC3 = new Isolate.$isolateProperties._Random();
$.CTC1 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC2 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.MathBox_TWO_PI = 6.283185307179586;
$.LinePieces = 1;
$.DebugDraw_e_shapeBit = 1;
$.DebugDraw_e_jointBit = 2;
$.DebugDraw_e_aabbBit = 4;
$.DebugDraw_e_pairBit = 8;
$.DebugDraw_e_centerOfMassBit = 16;
$.DebugDraw_e_lineDrawingBit = 64;
$.ContactSolver_INITIAL_NUM_CONSTRAINTS = 256;
$.ContactSolver_K_MAX_CONDITION_NUMBER = 100;
$.ManifoldType_CIRCLES = 0;
$.ManifoldType_FACE_A = 1;
$.ManifoldType_FACE_B = 2;
$._ReceivePortImpl__nextFreeId = 1;
$.ShapeType_CIRCLE = 0;
$.ShapeType_POLYGON = 1;
$.GEBox2D_world = null;
$.GEBox2D_scale = 60;
$.GEBox2D_gravityX = 0;
$.GEBox2D_gravityY = -1;
$.ShapeType_TYPE_COUNT = 2;
$.Settings_CONTACT_STACK_INIT_SIZE = 10;
$.Settings_EPSILON = 1.192e-7;
$.Settings_MAX_TIME_OF_IMPACT_CONTACTS = 32;
$.Settings_LINEAR_SLEEP_TOLERANCE = 0.01;
$.Settings_MAX_LINEAR_CORRECTION = 0.2;
$.Settings_ANGULAR_SLEEP_TOLERANCE = 0.03490658503988659;
$.Settings_TIME_TO_SLEEP = 0.5;
$.Settings_TREE_REBALANCE_STEPS = 4;
$.Settings_MAX_INTEGER = 2147483647;
$.Settings_SMALL_NUMBER = 1e-12;
$.Settings_LINEAR_SLOP = 0.005;
$.Settings_POLYGON_RADIUS = 0.01;
$.Settings_VELOCITY_THRESHOLD = 1;
$.Settings_BOUNDING_BOX_EXTENSION = 0.1;
$.Settings_BIG_NUMBER = 99999999999999;
$.Settings_CONTACT_BAUMGARTE = 0.2;
$.Settings_MAX_TRANSLATION = 2;
$.Settings_MAX_TRANSLATION_SQUARED = 4;
$.BodyType_STATIC = 0;
$.Settings_MAX_ROTATION_SQUARED = 2.4674011002723395;
$.BodyType_KINEMATIC = 1;
$.Settings_MAX_MANIFOLD_POINTS = 2;
$.BodyType_DYNAMIC = 2;
$.Primitives_hashCodeSeed = 0;
$.Settings_MAX_POLYGON_VERTICES = 8;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.Settings_BOUNDING_BOX_MULTIPLIER = 2;
$.Settings_MAX_ROTATION = 1.5707963267948966;
$._getTypeNameOf = null;
$.MIRROR_OPT_IN_MESSAGE = '\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n';
$.PI = 3.141592653589793;
$.DynamicTree_MAX_STACK_SIZE = 64;
$.DynamicTree__DEFAULT_NODE_ADDITION = 6;
$.webGL = null;
$.box2D = null;
$.player = null;
$.lastFrameTime = 0;
$.frameRate = 0;
$.JointType_DISTANCE = 3;
$.JointType_PULLEY = 4;
$.JointType_MOUSE = 5;
$.JointType_FRICTION = 9;
$.JointType_CONSTANT_VOLUME = 10;
$._cachedBrowserPrefix = null;
$.TimeOfImpactOutputState_UNKNOWN = 0;
$.TimeOfImpactOutputState_FAILED = 1;
$.TimeOfImpactOutputState_OVERLAPPED = 2;
$.TimeOfImpactOutputState_TOUCHING = 3;
$.TimeOfImpactOutputState_SEPARATED = 4;
$._TimerFactory__factory = null;
$.double_INFINITY = (1/0);
$.SeparationType_FACE_A = 1;
$.SeparationType_POINTS = 0;
$.SeparationType_FACE_B = 2;
$.GEWebGL_webGLProxy = null;
$.GEWebGL_followGraphic = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC1;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.World_NEW_FIXTURE = 1;
$.World_CLEAR_FORCES = 4;
$.BroadPhase_PAIR_CAPACITY = 16;
$.World_LOCKED = 2;
$.GeometryCount = 0;
$.Object3DCount = 0;
$.MaterialCount = 0;
$.FrontSide = 0;
$.BackSide = 1;
$.DoubleSide = 2;
$.SmoothShading = 2;
$.NoColors = 0;
$.NormalBlending = 1;
$.SubtractiveBlending = 3;
$.AdditiveBlending = 2;
$.AddEquation = 100;
$.Matrix4____v1 = null;
$.Body_AWAKE_FLAG = 2;
$.Body_AUTO_SLEEP_FLAG = 4;
$.SrcAlphaFactor = 204;
$.OneMinusSrcAlphaFactor = 205;
$.Body_ISLAND_FLAG = 1;
$.Body_FIXED_ROTATION_FLAG = 16;
$.Body_TO_I_FLAG = 64;
$.Body_ACTIVE_FLAG = 32;
$.MultiplyOperation = 0;
$.RepeatWrapping = 0;
$.Body_BULLET_FLAG = 8;
$.TimeOfImpact_MAX_ITERATIONS = 1000;
$.TimeOfImpact_toiCalls = null;
$.TimeOfImpact_toiIters = null;
$.TimeOfImpact_toiMaxIters = null;
$.TimeOfImpact_toiRootIters = null;
$.TimeOfImpact_toiMaxRootIters = null;
$.Frustum____v1 = null;
$.Contact_ISLAND_FLAG = 1;
$.Contact_TOUCHING_FLAG = 2;
$.Contact_ENABLED_FLAG = 4;
$.Contact_FILTER_FLAG = 8;
$.Contact_BULLET_HIT_FLAG = 16;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
Isolate.$lazy($, 'expireables', 'expireables', 'get$expireables', function() {
  return $._ListImpl_List(null);
});
Isolate.$lazy($, 'updateables', 'GEWebGL_updateables', 'get$GEWebGL_updateables', function() {
  return $._ListImpl_List(null);
});
Isolate.$lazy($, 'expireds', 'GEBox2D_expireds', 'get$GEBox2D_expireds', function() {
  return $._ListImpl_List(null);
});
Isolate.$lazy($, 'clickables', 'GEWebGL_clickables', 'get$GEWebGL_clickables', function() {
  return $._ListImpl_List(null);
});
Isolate.$lazy($, 'mouse2D', 'GEWebGL_mouse2D', 'get$GEWebGL_mouse2D', function() {
  return $.Vector3$(0, 10000, 0.5);
});
Isolate.$lazy($, 'mouse3D', 'GEWebGL_mouse3D', 'get$GEWebGL_mouse3D', function() {
  return $.Vector3$(0, 0, 0);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$_FileList: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$IDBKeyRange: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$Blob: function() { return false; },
 is$File: function() { return false; },
 is$Element: function() { return false; },
 is$Collection: function() { return false; },
 is$List: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Map: function() { return false; },
 is$ImageData: function() { return false; }
});

$.$defineNativeClass('HTMLElement', {"": []
});

$.$defineNativeClass('AbstractWorker', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.AbstractWorkerEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('AnalyserNode', {"": []
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["name?", "shape=", "type="],
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', {"": ["name?"]
});

$.$defineNativeClass('WebKitAnimationEvent', {"": []
});

$.$defineNativeClass('HTMLAppletElement', {"": ["height=", "name?", "object=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"": ["shape="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', {"": [],
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"": [],
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["name?", "value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["length?"],
 length$0: function() { return this.length.call$0(); }
});

$.$defineNativeClass('AudioBufferSourceNode', {"": []
});

$.$defineNativeClass('AudioContext', {"": [],
 get$on: function() {
  return $.AudioContextEvents$(this);
}
});

$.$defineNativeClass('AudioDestinationNode', {"": []
});

$.$defineNativeClass('HTMLAudioElement', {"": []
});

$.$defineNativeClass('AudioGain', {"": []
});

$.$defineNativeClass('AudioListener', {"": [],
 setPosition$3: function(x, y, z) {
  return this.setPosition(x,y,z);
}
});

$.$defineNativeClass('AudioNode', {"": []
});

$.$defineNativeClass('AudioParam', {"": ["name?", "value="]
});

$.$defineNativeClass('AudioProcessingEvent', {"": []
});

$.$defineNativeClass('AudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLBRElement', {"": [],
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('BarInfo', {"": ["visible?"]
});

$.$defineNativeClass('HTMLBaseElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"": ["color="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', {"": [],
 get$on: function() {
  return $.BatteryManagerEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', {"": []
});

$.$defineNativeClass('BiquadFilterNode', {"": ["type="]
});

$.$defineNativeClass('Blob', {"": ["type?"],
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {"": [],
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"": ["name?", "type=", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CDATASection', {"": []
});

$.$defineNativeClass('CSSCharsetRule', {"": []
});

$.$defineNativeClass('CSSFontFaceRule', {"": []
});

$.$defineNativeClass('CSSImportRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": ["name?"]
});

$.$defineNativeClass('WebKitCSSMatrix', {"": ["a=", "b?", "c?", "d?"],
 scale$3: function(scaleX, scaleY, scaleZ) {
  return this.scale(scaleX,scaleY,scaleZ);
},
 get$scale: function() { return new $.BoundClosure1(this, 'scale$3'); },
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSMediaRule', {"": []
});

$.$defineNativeClass('CSSPageRule', {"": []
});

$.$defineNativeClass('CSSPrimitiveValue', {"": []
});

$.$defineNativeClass('CSSRule', {"": ["type?"]
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 get$clip: function() {
  return this.getPropertyValue$1('clip');
},
 clip$0: function() { return this.get$clip().call$0(); },
 get$color: function() {
  return this.getPropertyValue$1('color');
},
 set$color: function(value) {
  this.setProperty$3('color', value, '');
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$opacity: function() {
  return this.getPropertyValue$1('opacity');
},
 get$position: function() {
  return this.getPropertyValue$1('position');
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'transform');
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', {"": []
});

$.$defineNativeClass('CSSStyleSheet', {"": []
});

$.$defineNativeClass('WebKitCSSTransformValue', {"": []
});

$.$defineNativeClass('CSSUnknownRule', {"": []
});

$.$defineNativeClass('CSSValue', {"": []
});

$.$defineNativeClass('HTMLCanvasElement', {"": ["height=", "width="],
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasGradient', {"": []
});

$.$defineNativeClass('CanvasPattern', {"": []
});

$.$defineNativeClass('CanvasRenderingContext', {"": []
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": ["fillStyle!", "globalAlpha!", "globalCompositeOperation!", "lineCap!", "lineJoin!", "lineWidth!", "strokeStyle!"],
 beginPath$0: function() {
  return this.beginPath();
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 clip$0: function() {
  return this.clip();
},
 closePath$0: function() {
  return this.closePath();
},
 createPattern$2: function(canvas_OR_image, repetitionType) {
  return this.createPattern(canvas_OR_image,repetitionType);
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 fill$0: function() {
  return this.fill();
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 getImageData$4: function(sx, sy, sw, sh) {
  return $._convertNativeToDart_ImageData(this._getImageData_1$4(sx, sy, sw, sh));
},
 _getImageData_1$4: function(sx, sy, sw, sh) {
  return this.getImageData(sx,sy,sw,sh);
},
 lineTo$2: function(x, y) {
  return this.lineTo(x,y);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 putImageData$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
  var t1, t2, t3, t4;
  t1 = $ === dirtyX;
  if (t1)
    dirtyX = null;
  t2 = $ === dirtyY;
  if (t2)
    dirtyY = null;
  t3 = $ === dirtyWidth;
  if (t3)
    dirtyWidth = null;
  t4 = $ === dirtyHeight;
  if (t4)
    dirtyHeight = null;
  if (t1 && t2 && t3 && t4) {
    this._putImageData_1$3($._convertDartToNative_ImageData(imagedata), dx, dy);
    return;
  }
  if (typeof dirtyX === 'number' || dirtyX == null)
    if (typeof dirtyY === 'number' || dirtyY == null)
      if (typeof dirtyWidth === 'number' || dirtyWidth == null)
        t1 = typeof dirtyHeight === 'number' || dirtyHeight == null;
      else
        t1 = false;
    else
      t1 = false;
  else
    t1 = false;
  if (t1) {
    this._putImageData_2$7($._convertDartToNative_ImageData(imagedata), dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight);
    return;
  }
  throw $.$$throw($.CTC5);
},
 putImageData$3: function(imagedata,dx,dy) {
  return this.putImageData$7(imagedata,dx,dy,$,$,$,$)
},
 _putImageData_1$3: function(imagedata, dx, dy) {
  return this.putImageData(imagedata,dx,dy);
},
 _putImageData_2$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
  return this.putImageData(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight);
},
 restore$0: function() {
  return this.restore();
},
 rotate$1: function(angle) {
  return this.rotate(angle);
},
 save$0: function() {
  return this.save();
},
 scale$2: function(sx, sy) {
  return this.scale(sx,sy);
},
 get$scale: function() { return new $.BoundClosure2(this, 'scale$2'); },
 setTransform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.setTransform(m11,m12,m21,m22,dx,dy);
},
 stroke$0: function() {
  return this.stroke();
},
 strokeRect$5: function(x, y, width, height, lineWidth) {
  return this.strokeRect(x,y,width,height,lineWidth);
},
 strokeRect$4: function(x,y,width,height) {
  return this.strokeRect(x,y,width,height);
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
},
 translate$2: function(tx, ty) {
  return this.translate(tx,ty);
}
});

$.$defineNativeClass('ChannelMergerNode', {"": []
});

$.$defineNativeClass('ChannelSplitterNode', {"": []
});

$.$defineNativeClass('CharacterData', {"": ["data?", "length?"],
 length$0: function() { return this.length.call$0(); },
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": ["height?", "width?"]
});

$.$defineNativeClass('Clipboard', {"": []
});

$.$defineNativeClass('CloseEvent', {"": []
});

$.$defineNativeClass('Comment', {"": []
});

$.$defineNativeClass('CompositionEvent', {"": ["data?"]
});

Console = (typeof console == 'undefined' ? {} : console);
Console.count$1 = function(arg) {
  return this.count(arg);
};
Console.get$count = function() { return new $.BoundClosure0(this, 'count$1'); };
$.$defineNativeClass('HTMLContentElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', {"": [],
 normalize$0: function() { return this.normalize.call$0(); }
});

$.$defineNativeClass('Coordinates', {"": []
});

$.$defineNativeClass('Counter', {"": []
});

$.$defineNativeClass('Crypto', {"": []
});

$.$defineNativeClass('CustomEvent', {"": []
});

$.$defineNativeClass('HTMLDListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', {"": [],
 get$on: function() {
  return $.DOMApplicationCacheEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMError', {"": ["name?"]
});

$.$defineNativeClass('DOMException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": ["name?"]
});

$.$defineNativeClass('DOMFileSystemSync', {"": ["name?"]
});

$.$defineNativeClass('DOMImplementation', {"": []
});

$.$defineNativeClass('MimeType', {"": ["type?"]
});

$.$defineNativeClass('MimeTypeArray', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMParser', {"": []
});

$.$defineNativeClass('Plugin', {"": ["length?", "name?"],
 length$0: function() { return this.length.call$0(); }
});

$.$defineNativeClass('PluginArray', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {"": ["type?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMTokenList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', {"": ["type?"]
});

$.$defineNativeClass('DataTransferItemList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', {"": []
});

$.$defineNativeClass('Database', {"": []
});

$.$defineNativeClass('DatabaseSync', {"": []
});

$.$defineNativeClass('DedicatedWorkerContext', {"": [],
 get$on: function() {
  return $.DedicatedWorkerContextEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('DelayNode', {"": []
});

$.$defineNativeClass('HTMLDetailsElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DeviceMotionEvent', {"": []
});

$.$defineNativeClass('DeviceOrientationEvent', {"": []
});

$.$defineNativeClass('HTMLDirectoryElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DirectoryEntry', {"": []
});

$.$defineNativeClass('DirectoryEntrySync', {"": []
});

$.$defineNativeClass('DirectoryReader', {"": []
});

$.$defineNativeClass('DirectoryReaderSync', {"": []
});

$.$defineNativeClass('HTMLDivElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {"": ["body?"],
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.CTC4.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {"": [],
 get$elements: function() {
  if (this._elements == null)
    this._elements = $._FilteredElementList$(this);
  return this._elements;
},
 set$elements: function(value) {
  var copy, elements;
  copy = $._ListImpl_List$from(value);
  elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, copy);
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$translate: function() {
  return false;
},
 translate$2: function(arg0, arg1) { return this.get$translate().call$2(arg0, arg1); },
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
},
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure(this, 'click$0'); },
 get$on: function() {
  return $.ElementEvents$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {"": ["name?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DynamicsCompressorNode', {"": []
});

$.$defineNativeClass('EXTTextureFilterAnisotropic', {"": []
});

$.$defineNativeClass('Element', {"": ["id?"],
 set$elements: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
  {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
}
  } else {
    return Object.prototype.set$elements.call(this, value);
  }

},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.ElementEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
  return this.children;
},
 translate$2: function(arg0, arg1) { return this.translate.call$2(arg0, arg1); },
 click$0: function() {
  return this.click();
},
 get$click: function() { return new $.BoundClosure(this, 'click$0'); },
 get$$$dom_firstElementChild: function() {
  return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
  return this.lastElementChild;
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["height=", "name?", "type=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntityReference', {"": []
});

$.$defineNativeClass('Entry', {"": ["name?"],
 moveTo$4: function(parent, name, successCallback, errorCallback) {
  return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 moveTo$2: function(parent$,name$) {
  return this.moveTo(parent$,name$);
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {"": ["name?"],
 moveTo$2: function(parent, name) {
  return this.moveTo(parent,name);
},
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', {"": []
});

$.$defineNativeClass('Event', {"": ["type?"],
 stopPropagation$0: function() {
  return this.stopPropagation();
}
});

$.$defineNativeClass('EventException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {"": [],
 get$on: function() {
  return $.EventSourceEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.Events$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["elements?", "name?", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('File', {"": ["name?"],
 is$File: function() { return true; }
});

$.$defineNativeClass('FileEntry', {"": []
});

$.$defineNativeClass('FileEntrySync', {"": []
});

$.$defineNativeClass('FileError', {"": []
});

$.$defineNativeClass('FileException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileReader', {"": [],
 get$on: function() {
  return $.FileReaderEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileReaderSync', {"": []
});

$.$defineNativeClass('FileWriter', {"": ["length?", "position?"],
 get$on: function() {
  return $.FileWriterEvents$(this);
},
 length$0: function() { return this.length.call$0(); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', {"": ["length?", "position?"],
 length$0: function() { return this.length.call$0(); }
});

$.$defineNativeClass('Float32Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": ["color="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('FormData', {"": []
});

$.$defineNativeClass('HTMLFormElement', {"": ["length?", "name?"],
 length$0: function() { return this.length.call$0(); },
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"": ["height?", "name?", "width?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {"": [],
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('GainNode', {"": []
});

$.$defineNativeClass('Gamepad', {"": ["id?"]
});

$.$defineNativeClass('Geolocation', {"": []
});

$.$defineNativeClass('Geoposition', {"": []
});

$.$defineNativeClass('HTMLHRElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {"": [],
 get$length: function() {
  return this.length;
},
 length$0: function() { return this.get$length().call$0(); },
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('HashChangeEvent', {"": []
});

$.$defineNativeClass('HTMLHeadElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHtmlElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequest', {"": [],
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": ["position?"]
});

$.$defineNativeClass('XMLHttpRequestUpload', {"": [],
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBAny', {"": []
});

$.$defineNativeClass('IDBCursor', {"": ["key?"],
 advance$1: function(count) {
  return this.advance(count);
},
 update$1: function(value) {
  return this._update_1$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 _update_1$1: function(value) {
  return this.update(value);
}
});

$.$defineNativeClass('IDBCursorWithValue', {"": ["value?"]
});

$.$defineNativeClass('IDBDatabase', {"": ["name?"],
 get$on: function() {
  return $.IDBDatabaseEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {"": []
});

$.$defineNativeClass('IDBIndex', {"": ["name?"],
 count$1: function(key_OR_range) {
  var t1, t2;
  t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC5);
},
 get$count: function() { return new $.BoundClosure3(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBKey', {"": []
});

$.$defineNativeClass('IDBKeyRange', {"": [],
 is$IDBKeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', {"": ["name?"],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
  return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
},
 count$1: function(key_OR_range) {
  var t1, t2;
  t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC5);
},
 get$count: function() { return new $.BoundClosure4(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBOpenDBRequest', {"": [],
 get$on: function() {
  return $.IDBOpenDBRequestEvents$(this);
}
});

$.$defineNativeClass('IDBRequest', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.IDBRequestEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBTransaction', {"": [],
 get$on: function() {
  return $.IDBTransactionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeRequest', {"": [],
 get$on: function() {
  return $.IDBVersionChangeRequestEvents$(this);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"": ["height=", "name?", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('IceCandidate', {"": []
});

$.$defineNativeClass('ImageData', {"": ["data?", "height?", "width?"],
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["height=", "name?", "width=", "x?", "y?"],
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"": ["height=", "name?", "pattern?", "type=", "value=", "width="],
 get$on: function() {
  return $.InputElementEvents$(this);
},
 step$3: function(arg0, arg1, arg2) { return this.step.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('JavaScriptCallFrame', {"": ["type?"]
});

$.$defineNativeClass('KeyboardEvent', {"": []
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["name?", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"": ["type=", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"": ["type="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', {"": ["length?"],
 length$0: function() { return this.length.call$0(); }
});

$.$defineNativeClass('Location', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('LocalMediaStream', {"": []
});

$.$defineNativeClass('DOMWindow', {"": ["name?", "navigator?"],
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.get$_parent());
},
 get$_parent: function() {
  return this.parent;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMapElement', {"": ["name?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"": [],
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaElementAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaError', {"": []
});

$.$defineNativeClass('MediaKeyError', {"": []
});

$.$defineNativeClass('MediaKeyEvent', {"": []
});

$.$defineNativeClass('MediaList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); }
});

$.$defineNativeClass('MediaQueryList', {"": []
});

$.$defineNativeClass('MediaSource', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', {"": [],
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaStreamEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrack', {"": ["enabled?"],
 get$on: function() {
  return $.MediaStreamTrackEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length?"],
 get$on: function() {
  return $.MediaStreamTrackListEvents$(this);
},
 length$0: function() { return this.length.call$0(); },
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MemoryInfo', {"": []
});

$.$defineNativeClass('HTMLMenuElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageChannel', {"": []
});

$.$defineNativeClass('MessageEvent', {"": ["ports?"],
 get$data: function() {
  return $._convertNativeToDart_SerializedScriptValue(this.get$_lib_data());
},
 get$_lib_data: function() {
  return this.data;
}
});

$.$defineNativeClass('MessagePort', {"": [],
 get$on: function() {
  return $.MessagePortEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', {"": ["name?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', {"": []
});

$.$defineNativeClass('HTMLMeterElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {"": ["clientX?", "clientY?", "x?", "y?"]
});

$.$defineNativeClass('MutationEvent', {"": []
});

$.$defineNativeClass('MutationObserver', {"": []
});

$.$defineNativeClass('MutationRecord', {"": ["type?"]
});

$.$defineNativeClass('NamedNodeMap', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent?"]
});

$.$defineNativeClass('NavigatorUserMediaError', {"": []
});

$.$defineNativeClass('Node', {"": [],
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_childNodes: function() {
  return this.childNodes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
  this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeFilter', {"": []
});

$.$defineNativeClass('NodeIterator', {"": ["filter?"],
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', {"": ["_parent?", "length?"],
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._parent; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Notation', {"": []
});

$.$defineNativeClass('Notification', {"": [],
 get$on: function() {
  return $.NotificationEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('NotificationCenter', {"": []
});

$.$defineNativeClass('OESElementIndexUint', {"": []
});

$.$defineNativeClass('OESStandardDerivatives', {"": []
});

$.$defineNativeClass('OESTextureFloat', {"": []
});

$.$defineNativeClass('OESVertexArrayObject', {"": []
});

$.$defineNativeClass('HTMLOListElement', {"": ["type="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["data?", "height=", "name?", "type=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OfflineAudioCompletionEvent', {"": []
});

$.$defineNativeClass('HTMLOptGroupElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OscillatorNode', {"": ["type="]
});

$.$defineNativeClass('HTMLOutputElement', {"": ["name?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OverflowEvent', {"": []
});

$.$defineNativeClass('PagePopupController', {"": []
});

$.$defineNativeClass('PageTransitionEvent', {"": []
});

$.$defineNativeClass('PannerNode', {"": [],
 setPosition$3: function(x, y, z) {
  return this.setPosition(x,y,z);
}
});

$.$defineNativeClass('HTMLParagraphElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"": ["name?", "type=", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', {"": [],
 get$on: function() {
  return $.PeerConnection00Events$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Performance', {"": []
});

$.$defineNativeClass('PerformanceNavigation', {"": ["type?"]
});

$.$defineNativeClass('PerformanceTiming', {"": []
});

$.$defineNativeClass('WebKitPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('PopStateEvent', {"": []
});

$.$defineNativeClass('PositionError', {"": []
});

$.$defineNativeClass('HTMLPreElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', {"": ["data?"]
});

$.$defineNativeClass('HTMLProgressElement', {"": ["position?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', {"": []
});

$.$defineNativeClass('HTMLQuoteElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('RGBColor', {"": []
});

$.$defineNativeClass('RTCDataChannel', {"": [],
 get$on: function() {
  return $.RTCDataChannelEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCDataChannelEvent', {"": []
});

$.$defineNativeClass('RTCIceCandidate', {"": []
});

$.$defineNativeClass('RTCIceCandidateEvent', {"": []
});

$.$defineNativeClass('RTCPeerConnection', {"": [],
 get$on: function() {
  return $.RTCPeerConnectionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type="]
});

$.$defineNativeClass('RTCStatsElement', {"": []
});

$.$defineNativeClass('RTCStatsReport', {"": []
});

$.$defineNativeClass('RTCStatsResponse', {"": []
});

$.$defineNativeClass('RadioNodeList', {"": ["value="]
});

$.$defineNativeClass('Range', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', {"": []
});

$.$defineNativeClass('SQLError', {"": []
});

$.$defineNativeClass('SQLException', {"": []
});

$.$defineNativeClass('SQLResultSet', {"": []
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SQLTransaction', {"": []
});

$.$defineNativeClass('SQLTransactionSync', {"": []
});

$.$defineNativeClass('SVGAElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGAltGlyphDefElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphItemElement', {"": []
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimateColorElement', {"": []
});

$.$defineNativeClass('SVGAnimateElement', {"": []
});

$.$defineNativeClass('SVGAnimateMotionElement', {"": []
});

$.$defineNativeClass('SVGAnimateTransformElement', {"": []
});

$.$defineNativeClass('SVGAnimatedAngle', {"": []
});

$.$defineNativeClass('SVGAnimatedBoolean', {"": []
});

$.$defineNativeClass('SVGAnimatedEnumeration', {"": []
});

$.$defineNativeClass('SVGAnimatedInteger', {"": []
});

$.$defineNativeClass('SVGAnimatedLength', {"": []
});

$.$defineNativeClass('SVGAnimatedLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumber', {"": []
});

$.$defineNativeClass('SVGAnimatedNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGAnimatedRect', {"": []
});

$.$defineNativeClass('SVGAnimatedString', {"": []
});

$.$defineNativeClass('SVGAnimatedTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', {"": []
});

$.$defineNativeClass('SVGCircleElement', {"": ["r?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGClipPathElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGColor', {"": []
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"": ["offset?", "type?"]
});

$.$defineNativeClass('SVGCursorElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGDefsElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGDescElement', {"": []
});

$.$defineNativeClass('SVGDocument', {"": []
});

$.$defineNativeClass('SVGElement', {"": [],
 get$elements: function() {
  return $._FilteredElementList$(this);
},
 set$elements: function(value) {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
},
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGElementInstance', {"": [],
 get$on: function() {
  return $.SVGElementInstanceEvents$(this);
}
});

$.$defineNativeClass('SVGEllipseElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["type?", "height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFECompositeElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": ["scale?", "height?", "width?", "x?", "y?"],
 scale$2: function(arg0, arg1) { return this.scale.call$2(arg0, arg1); }
});

$.$defineNativeClass('SVGFEDistantLightElement', {"": []
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEFloodElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEFuncAElement', {"": []
});

$.$defineNativeClass('SVGFEFuncBElement', {"": []
});

$.$defineNativeClass('SVGFEFuncGElement', {"": []
});

$.$defineNativeClass('SVGFEFuncRElement', {"": []
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEImageElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEMergeElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEMergeNodeElement', {"": []
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEOffsetElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEPointLightElement', {"": ["x?", "y?", "z?"]
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFESpotLightElement', {"": ["x?", "y?", "z?"]
});

$.$defineNativeClass('SVGFETileElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["type?", "height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFilterElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGFontElement', {"": []
});

$.$defineNativeClass('SVGFontFaceElement', {"": []
});

$.$defineNativeClass('SVGFontFaceFormatElement', {"": []
});

$.$defineNativeClass('SVGFontFaceNameElement', {"": []
});

$.$defineNativeClass('SVGFontFaceSrcElement', {"": []
});

$.$defineNativeClass('SVGFontFaceUriElement', {"": []
});

$.$defineNativeClass('SVGForeignObjectElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGGElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGGlyphElement', {"": []
});

$.$defineNativeClass('SVGGlyphRefElement', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGGradientElement', {"": []
});

$.$defineNativeClass('SVGHKernElement', {"": []
});

$.$defineNativeClass('SVGImageElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGLinearGradientElement', {"": []
});

$.$defineNativeClass('SVGMPathElement', {"": []
});

$.$defineNativeClass('SVGMarkerElement', {"": []
});

$.$defineNativeClass('SVGMaskElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGMatrix', {"": ["a=", "b?", "c?", "d?"],
 rotate$1: function(angle) {
  return this.rotate(angle);
},
 scale$1: function(scaleFactor) {
  return this.scale(scaleFactor);
},
 get$scale: function() { return new $.BoundClosure0(this, 'scale$1'); },
 translate$2: function(x, y) {
  return this.translate(x,y);
}
});

$.$defineNativeClass('SVGMetadataElement', {"": []
});

$.$defineNativeClass('SVGMissingGlyphElement', {"": []
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPaint', {"": []
});

$.$defineNativeClass('SVGPathElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPathSeg', {"": []
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": ["angle=", "x=", "y="]
});

$.$defineNativeClass('SVGPathSegArcRel', {"": ["angle=", "x=", "y="]
});

$.$defineNativeClass('SVGPathSegClosePath', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPatternElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPointList', {"": [],
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {"": ["points?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPolylineElement', {"": ["points?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGRadialGradientElement', {"": ["r?"]
});

$.$defineNativeClass('SVGRect', {"": ["height=", "width=", "x=", "y="]
});

$.$defineNativeClass('SVGRectElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGRenderingIntent', {"": []
});

$.$defineNativeClass('SVGSVGElement', {"": ["height?", "width?", "x?", "y?"]
});

$.$defineNativeClass('SVGScriptElement', {"": ["type="]
});

$.$defineNativeClass('SVGSetElement', {"": []
});

$.$defineNativeClass('SVGStopElement', {"": ["offset?"]
});

$.$defineNativeClass('SVGStringList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type="]
});

$.$defineNativeClass('SVGSwitchElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGSymbolElement', {"": []
});

$.$defineNativeClass('SVGTRefElement', {"": []
});

$.$defineNativeClass('SVGTSpanElement', {"": []
});

$.$defineNativeClass('SVGTextContentElement', {"": []
});

$.$defineNativeClass('SVGTextElement', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGTextPathElement', {"": []
});

$.$defineNativeClass('SVGTextPositioningElement', {"": ["x?", "y?"],
 rotate$1: function(arg0) { return this.rotate.call$1(arg0); }
});

$.$defineNativeClass('SVGTitleElement', {"": []
});

$.$defineNativeClass('SVGTransform', {"": ["angle?", "type?"]
});

$.$defineNativeClass('SVGTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGUnitTypes', {"": []
});

$.$defineNativeClass('SVGUseElement', {"": ["height?", "width?", "x?", "y?"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGVKernElement', {"": []
});

$.$defineNativeClass('SVGViewElement', {"": []
});

$.$defineNativeClass('SVGViewSpec', {"": [],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGZoomEvent', {"": []
});

$.$defineNativeClass('Screen', {"": ["height?", "width?"]
});

$.$defineNativeClass('HTMLScriptElement', {"": ["type="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProcessorNode', {"": [],
 get$on: function() {
  return $.ScriptProcessorNodeEvents$(this);
}
});

$.$defineNativeClass('ScriptProfile', {"": []
});

$.$defineNativeClass('ScriptProfileNode', {"": ["visible?"],
 children$0: function() {
  return this.children();
},
 get$children: function() { return new $.BoundClosure(this, 'children$0'); }
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "name?", "type?", "value="],
 length$0: function() { return this.length.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SessionDescription', {"": []
});

$.$defineNativeClass('HTMLShadowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {"": []
});

$.$defineNativeClass('SharedWorker', {"": []
});

$.$defineNativeClass('SharedWorkerContext', {"": ["name?"],
 get$on: function() {
  return $.SharedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('SourceBuffer', {"": []
});

$.$defineNativeClass('SourceBufferList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["type="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', {"": []
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputEvent', {"": []
});

$.$defineNativeClass('SpeechInputResult', {"": []
});

$.$defineNativeClass('SpeechRecognition', {"": [],
 get$on: function() {
  return $.SpeechRecognitionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionAlternative', {"": []
});

$.$defineNativeClass('SpeechRecognitionError', {"": []
});

$.$defineNativeClass('SpeechRecognitionEvent', {"": []
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length?"],
 length$0: function() { return this.length.call$0(); }
});

$.$defineNativeClass('Storage', {"": [],
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $.Storage_keys_anon(keys));
  return keys;
},
 get$values: function() {
  var values = [];
  this.forEach$1(new $.Storage_values_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 length$0: function() { return this.get$length().call$0(); },
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
  return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key?"]
});

$.$defineNativeClass('StorageInfo', {"": []
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', {"": ["type?"]
});

$.$defineNativeClass('StyleSheet', {"": ["type?"]
});

$.$defineNativeClass('HTMLTableCaptionElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Text', {"": []
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["name?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextEvent', {"": ["data?"]
});

$.$defineNativeClass('TextMetrics', {"": ["width?"]
});

$.$defineNativeClass('TextTrack', {"": [],
 get$on: function() {
  return $.TextTrackEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', {"": ["id?", "position?", "text!"],
 get$on: function() {
  return $.TextTrackCueEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {"": ["length?"],
 get$on: function() {
  return $.TextTrackListEvents$(this);
},
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length?"],
 length$0: function() { return this.length.call$0(); }
});

$.$defineNativeClass('HTMLTitleElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Touch', {"": ["clientX?", "clientY?"]
});

$.$defineNativeClass('TouchEvent', {"": []
});

$.$defineNativeClass('TouchList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TrackEvent', {"": []
});

$.$defineNativeClass('WebKitTransitionEvent', {"": []
});

$.$defineNativeClass('TreeWalker', {"": ["filter?"],
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('UIEvent', {"": ["keyCode?"]
});

$.$defineNativeClass('HTMLUListElement', {"": ["type="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {"": []
});

$.$defineNativeClass('HTMLUnknownElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('URL', {"": []
});

$.$defineNativeClass('ValidityState', {"": []
});

$.$defineNativeClass('HTMLVideoElement', {"": ["height=", "width="]
});

$.$defineNativeClass('WaveShaperNode', {"": []
});

$.$defineNativeClass('WaveTable', {"": []
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["name?", "type?"]
});

$.$defineNativeClass('WebGLBuffer', {"": []
});

$.$defineNativeClass('WebGLCompressedTextureS3TC', {"": []
});

$.$defineNativeClass('WebGLContextAttributes', {"": []
});

$.$defineNativeClass('WebGLContextEvent', {"": []
});

$.$defineNativeClass('WebGLDebugRendererInfo', {"": []
});

$.$defineNativeClass('WebGLDebugShaders', {"": []
});

$.$defineNativeClass('WebGLDepthTexture', {"": []
});

$.$defineNativeClass('WebGLFramebuffer', {"": []
});

$.$defineNativeClass('WebGLLoseContext', {"": []
});

$.$defineNativeClass('WebGLProgram', {"": []
});

$.$defineNativeClass('WebGLRenderbuffer', {"": []
});

$.$defineNativeClass('WebGLRenderingContext', {"": [],
 lineWidth$1: function(width) {
  return this.lineWidth(width);
}
});

$.$defineNativeClass('WebGLShader', {"": []
});

$.$defineNativeClass('WebGLShaderPrecisionFormat', {"": []
});

$.$defineNativeClass('WebGLTexture', {"": []
});

$.$defineNativeClass('WebGLUniformLocation', {"": []
});

$.$defineNativeClass('WebGLVertexArrayObjectOES', {"": []
});

$.$defineNativeClass('WebKitCSSFilterValue', {"": []
});

$.$defineNativeClass('WebKitNamedFlow', {"": ["name?"],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {"": [],
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WheelEvent', {"": []
});

$.$defineNativeClass('Worker', {"": [],
 get$on: function() {
  return $.WorkerEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerContext', {"": ["navigator?"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.WorkerContextEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('WorkerLocation', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent?"]
});

$.$defineNativeClass('XMLSerializer', {"": []
});

$.$defineNativeClass('XPathEvaluator', {"": []
});

$.$defineNativeClass('XPathException', {"": ["name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XPathExpression', {"": []
});

$.$defineNativeClass('XPathNSResolver', {"": []
});

$.$defineNativeClass('XPathResult', {"": []
});

$.$defineNativeClass('XSLTProcessor', {"": [],
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('CSSRuleList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('ClientRectList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMStringList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArray', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length?"],
 length$0: function() { return this.length.call$0(); },
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Worker', {"": [],
 get$id: function() {
  return this.id;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', {"": [],
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
}
});

// 527 dynamic classes.
// 527 classes
// 41 !leaf
(function(){
  var v0/*class(Uint8Array)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v1/*class(AudioSourceNode)*/ = 'AudioSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode';
  var v2/*class(_CSSValueList)*/ = 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue';
  var v3/*class(SVGColor)*/ = 'SVGColor|SVGPaint|SVGPaint';
  var v4/*class(Text)*/ = 'Text|CDATASection|CDATASection';
  var v5/*class(SVGTextPositioningElement)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v6/*class(SVGTextContentElement)*/ = [v5/*class(SVGTextPositioningElement)*/,v5/*class(SVGTextPositioningElement)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v7/*class(SVGGradientElement)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v8/*class(SVGComponentTransferFunctionElement)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v9/*class(SVGAnimationElement)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v10/*class(SVGElement)*/ = [v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v11/*class(MediaElement)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v12/*class(MouseEvent)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(UIEvent)*/ = [v12/*class(MouseEvent)*/,v12/*class(MouseEvent)*/,'UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent'].join('|');
  var v14/*class(ProgressEvent)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent';
  var v15/*class(Element)*/ = [v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v16/*class(DocumentFragment)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v17/*class(Document)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v18/*class(CharacterData)*/ = [v4/*class(Text)*/,v4/*class(Text)*/,'CharacterData|Comment|Comment'].join('|');
  var v19/*class(WorkerContext)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v20/*class(Node)*/ = [v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,'Node|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr'].join('|');
  var v21/*class(MediaStream)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v22/*class(IDBRequest)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v23/*class(AbstractWorker)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['AbstractWorker', v23/*class(AbstractWorker)*/],
    ['Uint8Array', v0/*class(Uint8Array)*/],
    ['ArrayBufferView', [v0/*class(Uint8Array)*/,v0/*class(Uint8Array)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['AudioSourceNode', v1/*class(AudioSourceNode)*/],
    ['AudioNode', [v1/*class(AudioSourceNode)*/,v1/*class(AudioSourceNode)*/,'AudioNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['CSSValueList', v2/*class(_CSSValueList)*/],
    ['SVGColor', v3/*class(SVGColor)*/],
    ['CSSValue', [v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,'CSSValue|CSSPrimitiveValue|CSSPrimitiveValue'].join('|')],
    ['CanvasRenderingContext', 'CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext|CanvasRenderingContext2D'],
    ['Text', v4/*class(Text)*/],
    ['CharacterData', v18/*class(CharacterData)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['HTMLDocument', v17/*class(Document)*/],
    ['DocumentFragment', v16/*class(DocumentFragment)*/],
    ['SVGTextPositioningElement', v5/*class(SVGTextPositioningElement)*/],
    ['SVGTextContentElement', v6/*class(SVGTextContentElement)*/],
    ['SVGGradientElement', v7/*class(SVGGradientElement)*/],
    ['SVGComponentTransferFunctionElement', v8/*class(SVGComponentTransferFunctionElement)*/],
    ['SVGAnimationElement', v9/*class(SVGAnimationElement)*/],
    ['SVGElement', v10/*class(SVGElement)*/],
    ['HTMLMediaElement', v11/*class(MediaElement)*/],
    ['Element', v15/*class(Element)*/],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['MouseEvent', v12/*class(MouseEvent)*/],
    ['UIEvent', v13/*class(UIEvent)*/],
    ['ProgressEvent', v14/*class(ProgressEvent)*/],
    ['Event', [v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['WorkerContext', v19/*class(WorkerContext)*/],
    ['Node', v20/*class(Node)*/],
    ['MediaStream', v21/*class(MediaStream)*/],
    ['IDBRequest', v22/*class(IDBRequest)*/],
    ['EventTarget', [v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['SVGPathSeg', 'SVGPathSeg|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs'],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=DartGameEngine.dart.js.map